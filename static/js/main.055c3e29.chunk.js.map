{"version":3,"sources":["i18n.js","menus/SimpleMenuButton.js","menus/SimpleDrawer.js","menus/HeaderMenu.js","pages/HomePage.js","constants/APIConfig.js","constants/CommonFunction.js","inputs/InputLogin.js","pages/Logout.js","modals/AlertDialogSlide.js","inputs/InputMultipleOptions.js","inputs/InputSelectedCities.js","users/UsersList.js","rating/LevelPwd.js","inputs/InputNewUser.js","inputs/InputAnAccount.js","users/MyAccount.js","users/ChangeUser.js","users/ChangePassword.js","test_temp/SimpleSnackBar.js","inputs/InputSelectedFiles.js","test_temp/TestTemp.js","routes/RouterNoel.js","index.js"],"names":["i18n","use","LanguageDetector","init","debug","fallbackLng","keySeparator","interpolation","escapeValue","resources","en","translations","window","languageEn","fr","languageFr","ns","defaultNS","SimpleMenu","props","React","useState","anchorEl","setAnchorEl","title","options","setAction","handleClose","event","currentTarget","attributes","value","StyledMenu","withStyles","paper","border","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Button","aria-controls","aria-haspopup","onClick","variant","color","onMouseDown","preventDefault","id","keepMounted","open","Boolean","onClose","map","option","index","linkTo","to","key","className","MenuItem","item","iconMenu","ListItemIcon","Drafts","fontSize","Send","ListItemText","primary","protoType","PropTypes","array","isRequired","func","string","drawerSide","SimpleDrawer","state","position","openDrawer","HandleDrawer","target","parentNode","setState","localStorage","setItem","parentActionOnCloseDrawer","positionLocalStorage","getItem","this","prevProps","prevState","snapshot","optionsMenu","Drawer","anchor","List","ListItem","Divider","IconButton","ArrowForwardRounded","ArrowBackRounded","Component","bool","HideOnScroll","children","trigger","useScrollTrigger","Slide","appear","direction","in","timeout","HandleLanguages","t","changeLanguage","document","location","reload","HideAppBar","setOpenDrawer","optionsMenus","AccountBalance","loginState","token","push","Build","LinkOff","AccountCircle","PersonAdd","isAsso","Group","Report","optionsLanguages","Fragment","AppBar","Toolbar","Grid","container","xs","edge","size","Typography","justify","Tooltip","firstName","lastName","prototype","HomePage","Card","src","alt","align","API_URL_ROOT","general_api_url_root","API_URL_LOGIN","API_URL_USERS_LIST","API_URL_USER_DETAILS","API_URL_USER_DELETE","API_URL_USER_NEW","API_URL_MY_ACCOUNT","API_URL_CHANGE_ACCOUNT","API_URL_CHANGE_PWD","API_URL_CITY_LIST","SESSION_STORAGE_JWT_TOKEN_ITEM_NAME","JWT_TOKEN_climbing","sendData","a","url","data","verb","sessionStorage","headers","Authorization","fetch","method","body","JSON","stringify","response","responseObject","json","SEND_POST","SEND_PUT","SEND_GET","getData","isValidEmail","email","match","isValidPhoneNumber","phoneNumber","length","isValidAccountToUpdate","account","role","addressDetails","ad","address","zipCode","isNaN","city","country","passwordMeter","password","search","reduce","acc","cur","InputLogin","buttonEnable","name","showPassword","logged","handleSubmitForm","callAPI","APIConfig","handleChange","CommonFunction","handleClickShowPassword","rep","setupLogin","asso","history","classes","root","gutterBottom","TextField","label","fullWidth","onChange","autoFocus","onSubmit","FormControl","InputLabel","htmlFor","Input","type","endAdornment","InputAdornment","aria-label","tabIndex","Visibility","VisibilityOff","disabled","themes","padding","margin","minWidth","boxShadow","withRouter","Logout","setupLogout","textAlign","Transition","forwardRef","ref","AlertDialogSlide","handleAgree","handleDisagree","dialog","Dialog","TransitionComponent","DialogTitle","DialogContent","DialogContentText","DialogActions","Label","styled","InputWrapper","Tag","onDelete","Listbox","InputMultipleOptions","useAutocomplete","defaultValue","getOptionLabel","values","handleSelection","onInputChange","handleInputChange","multiple","getRootProps","getInputLabelProps","getInputProps","getTagProps","getListboxProps","getOptionProps","groupedOptions","focused","NoSsr","Array","zipcode","arrayOf","shape","InputSelectedCities","cityList","citiesSelected","handleOnChangeCities","cities","handleOnInputChange","typingInput","callAPIGetCityList","startCitiesToFind","status","citiesArray","payload","cityDetails","forEach","UsersList","usersData","userDetails","displayModal","numberInPage","citiesOrigin","getArrayToSendFromCities","handleOtherPage","currentPage","numberOfPages","nextPage","parseInt","numPage","callAPIUsersList","handleUserDetailsChoice","callAPIUserDetails","handleNumberInPage","newCurrentPage","handleChangeUser","handleDeleteUser","handleAgreeModal","callAPIDeleteUser","handleDisagreeModal","dataCities","handleReload","CardHeader","action","Close","close","CardActions","disableSpacing","Description","deleteButton","DeleteForever","alert","reason","params","URLSearchParams","get","previousButtonDisabled","nextButtonDisabled","usersList","user","li","divider","style","marginTop","Replay","select","display","Select","width","cursor","marginLeft","float","marginBottom","LevelPwd","strength","InputNewUser","emailError","emailHelperText","pwdError","pwdHelperText","passwordStrength","passwordStrengthShow","passwordConfirm","pwdConfirmError","pwdConfirmHelperText","showPasswords","submitDisabled","firstNameError","firstNameHelperText","lastNameError","lastNameHelperText","callApiRunning","errorReason","handleChangeEmail","newEmail","submitEnable","checkForEnableSubmit","handleChangePasswords","enableSubmit","meter","handleChangeName","handleClearInfo","handlePasswordStrengthHide","handlePasswordStrengthShow","handleSubmit","callApi","textfield","error","helperText","onBlur","onFocus","InputProps","CircularProgress","buttonaction","propType","paddingBottom","paddingTop","InputAnAccount","changeAccount","changeRoleDisabled","changeEmailDisabled","phoneNumberError","zipCodeError","handleTextField","isValidAccount","newAccount","phoneNumberIsValid","handleOpenMenu","handleCloseMenu","attributValue","changePassword","displayChangeAccount","gridContainer","gridItem","changePasswordEnabled","MoreVert","handleCancelChange","handleRegisterData","validateAccount","cancelChange","object","card","maxWidth","MyAccount","handleDisplayToChange","handleCancelUpdate","handleChangePassword","handleSendUpdate","accountCleaned","callAPIUpdate","displayAccount","res","RouterNoel","setupUserInfoStatic","callAPIGet","useStyles","makeStyles","ChangeUser","setUser","setReason","lastReason","setLastReason","updateOK","setUpdateOK","lastColor","slideState","setSlideState","slideStateTemp","lastTypographyVariant","parse","urlSearchParams","useLocation","useEffect","callAPIGetUser","useHistory","callAPIUpdateUser","goBack","ChangePassword","idOtherUser","changeMyPassword","passwordOld","showPasswordOld","pwdOldError","pwdOldHelperText","passwordNew","showPasswordNew","pwdNewError","pwdNewHelperText","passwordNewConfirm","pwdNewConfirmError","pwdNewConfirmHelperText","showAlertDialog","messageReason","changePwdIsOK","levelPwdNew","levelPwdNewShow","handleCancelButton","handleAgreeSubmitPasswords","handleClickShowPasswordOld","handleClickShowPasswordNew","handleChangeTextField","isCorrectPwd","onFocusLevelPwd","onBlurLevelPwd","displayChangePassword","isMyAccount","levelPwd","isOK","reasonJson","e","SimpleSnackbar","setOpen","whenHide","Snackbar","message","InputSelectedFiles","files","setFiles","callFileReader","file","console","log","setTimeout","result","callAPIUpload","i","FileReader","readAsBinaryString","margintop","TestTemp","snackBarMessage","setSnackBarMessage","snackBarShow","setSnackBarShow","Object","tempLogin","checkTokenImmediatly","startAutoReloadToken","removeItem","bind","exact","path","ReactDOM","render","getElementById"],"mappings":"scAGAA,IACKC,IAAIC,KACJC,KAAK,CACFC,OAAO,EAEPC,YAAa,KAEbC,cAAc,EAEdC,cAAe,CACXC,aAAa,GAGjBC,UAAW,CACPC,GAAI,CACAC,aAAcC,OAAOC,YAEzBC,GAAI,CACAH,aAAcC,OAAOG,aAI7BC,GAAI,CAAC,gBACLC,UAAW,iBAGJjB,QAAf,E,sECjBe,SAASkB,EAAWC,GAAQ,IAAD,EACNC,IAAMC,SAAS,MADT,mBAC/BC,EAD+B,KACrBC,EADqB,KAG/BC,EAA6BL,EAA7BK,MAAOC,EAAsBN,EAAtBM,QAASC,EAAaP,EAAbO,UAOjBC,EAAc,SAACC,GAEjB,GADAL,EAAY,MACRG,GAAaE,EAAMC,cAAcC,WAAWC,MAAO,CACnD,IAAMA,EAAQH,EAAMC,cAAcC,WAAWC,MAAMA,MACnDL,EAAUK,KAIZC,EAAaC,YAAW,CAC1BC,MAAO,CACHC,OAAQ,sBAFGF,EAIhB,SAACd,GAAD,OACC,kBAACiB,EAAA,EAAD,eACIC,UAAW,EACXC,mBAAoB,KACpBC,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,WAEZtB,OAGZ,OACI,6BACI,kBAACwB,EAAA,EAAD,CAAQC,gBAAc,cAAcC,gBAAc,OAAOC,QAlC7C,SAAClB,GACjBL,EAAYK,EAAMC,gBAiCiEkB,QAAQ,YAC/EC,MAAM,UAAUC,YAAa,SAACrB,GAAD,OAAWA,EAAMsB,mBACjD1B,GAEL,kBAACQ,EAAD,CACImB,GAAG,cACH7B,SAAUA,EACV8B,aAAW,EACXC,KAAMC,QAAQhC,GACdiC,QAAS5B,GAERF,EAAQ+B,KAAI,SAACC,EAAQC,GAAT,OACLD,EAAOE,OACH,kBAAC,IAAD,CAAMC,GAAIH,EAAOE,OAAQE,IAAKH,EAAOI,UAAW,mBAAoBhB,QAAS,kBAAMvB,EAAY,QAC3F,kBAACwC,EAAA,EAAD,CAAUhC,MAAON,EAAQuC,MACpBP,EAAOQ,SAAW,kBAACC,EAAA,EAAD,KAAeT,EAAOQ,UAErC,kBAACC,EAAA,EAAD,KACKR,EAAQ,IAAM,EAAI,kBAACS,EAAA,EAAD,CAAYC,SAAS,UACpC,kBAACC,EAAA,EAAD,CAAUD,SAAS,WAG/B,kBAACE,EAAA,EAAD,CAAcC,QAASd,EAAOO,SAItC,kBAACD,EAAA,EAAD,CAAUF,IAAKH,EAAOZ,QAASnB,EAAaI,MAAO0B,EAAOO,MAAOP,EAAOO,WAQpG9C,EAAWsD,UAAY,CACnB/C,QAASgD,IAAUC,MAAMC,WACzBjD,UAAW+C,IAAUG,KACrBpD,MAAOiD,IAAUI,OAAOF,Y,0DCjFtBG,EAAoB,OAApBA,EAAmC,QAAnCA,EAA8D,mBAE9DC,E,4MACFC,MAAQ,CACJC,SAAUH,EACVI,YAAY,G,EAGhBC,aAAc,SAACvD,GACa,2BAApBA,EAAMwD,OAAOjC,IAEkB,2BAA/BvB,EAAMwD,OAAOC,WAAWlC,IAEkB,2BAA1CvB,EAAMwD,OAAOC,WAAWA,WAAWlC,IAEiB,2BAApDvB,EAAMwD,OAAOC,WAAWA,WAAWA,WAAWlC,GAC1C,EAAK6B,MAAMC,WAAaH,GACxB,EAAKQ,SAAS,CAACL,SAAUH,IACzBS,aAAaC,QAAQV,EAA6BA,KAElD,EAAKQ,SAAS,CAACL,SAAWH,IAC1BS,aAAaC,QAAQV,EAA6BA,KAGtD,EAAK3D,MAAMsE,4BACX,EAAKH,SAAS,CAACJ,YAAY,M,kEAI/B,IAAIQ,EAAuBH,aAAaI,QAAQb,GAC3CY,IAAyBZ,GAAmBY,IAAyBZ,GACnEc,KAAKZ,MAAMC,WAAaS,GAC3BE,KAAKN,SAAS,CAACL,SAAUS,M,yCAIdG,EAAWC,EAAWC,GAEjCH,KAAKzE,MAAMkC,OAASyC,EAAUZ,YAC9BU,KAAKN,SAAS,CAAEJ,WAAYU,KAAKzE,MAAMkC,S,+BAIrC,IACC2C,EAAeJ,KAAKzE,MAApB6E,YACP,OACI,kBAACC,EAAA,EAAD,CAAQC,OAAQN,KAAKZ,MAAMC,SAAU5B,KAAMuC,KAAKZ,MAAME,WAAYpC,QAAS8C,KAAKT,cAC5E,kBAACgB,EAAA,EAAD,KACKH,EAAYxC,KAAI,SAACC,EAAQC,GAAT,OACTD,EAAOE,OACH,kBAAC,IAAD,CAAMC,GAAIH,EAAOE,OAAQG,UAAW,mBAAoBD,IAAKH,GACzD,kBAAC0C,EAAA,EAAD,KACI,kBAAClC,EAAA,EAAD,KAAeT,EAAOQ,UACtB,kBAACK,EAAA,EAAD,KAAeb,EAAOO,QAI9B,kBAACoC,EAAA,EAAD,CAAUvC,IAAKH,GACX,kBAACQ,EAAA,EAAD,KAAeT,EAAOQ,UACtB,kBAACK,EAAA,EAAD,KAAeb,EAAOO,UAGtC,kBAACqC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAYxC,UAAW,mBAAoBX,GAAI,0BAC1CyC,KAAKZ,MAAMC,WAAaH,EAAkB,kBAACyB,EAAA,EAAD,MAAyB,kBAACC,EAAA,EAAD,a,GA9DjEpF,IAAMqF,WAqEjC1B,EAAaP,UAAY,CACrBnB,KAAMoB,IAAUiC,KAAK/B,WACrBc,0BAA2BhB,IAAUG,KAAKD,WAC1CqB,YAAavB,IAAUC,MAAMC,YAGlBI,Q,2EC/Df,SAAS4B,GAAaxF,GAAQ,IAElByF,EAAazF,EAAbyF,SACFC,EAAUC,cAEhB,OACI,kBAACC,EAAA,EAAD,CAAOC,QAAQ,EAAOC,UAAU,OAAOC,IAAKL,EAASM,QAAS,KACzDP,GASb,SAASQ,GAAgBrF,GACjBA,IAAU/B,EAAKqH,EAAE,mBACjBrH,EAAKsH,eAAe,MACbvF,IAAU/B,EAAKqH,EAAE,qBACxBrH,EAAKsH,eAAe,MAExBC,SAASC,SAASC,SAGP,SAASC,GAAWvG,GAAQ,IAAD,EACFE,oBAAS,GADP,mBAC/B6D,EAD+B,KACnByC,EADmB,KAEhCxC,EAAe,WACjBwC,GAAezC,IAGf0C,EAAe,CAAC,CAAC5D,KAAMhE,EAAKqH,EAAE,mBAAoB1D,OAAQ,IAAKM,SAAU,kBAAC4D,EAAA,EAAD,QAExE1G,EAAM2G,WAAWC,OAIlBH,EAAaI,KAAK,CAAChE,KAAMhE,EAAKqH,EAAE,yBAA0B1D,OAAQ,mBAAoBM,SAAU,kBAACgE,EAAA,EAAD,QAChGL,EAAaI,KAAK,CAAChE,KAAMhE,EAAKqH,EAAE,qBAAsB1D,OAAQ,UAAWM,SAAU,kBAACiE,EAAA,EAAD,UAJnFN,EAAaI,KAAK,CAAChE,KAAMhE,EAAKqH,EAAE,oBAAqB1D,OAAQ,SAAUM,SAAU,kBAACkE,EAAA,EAAD,QACjFP,EAAaI,KAAK,CAAChE,KAAMhE,EAAKqH,EAAE,sBAAuB1D,OAAQ,iBAAkBM,SAAU,kBAACmE,EAAA,EAAD,SAKlE,MAAzBjH,EAAM2G,WAAWC,OAAgB5G,EAAM2G,WAAWO,SAClDT,EAAaI,KAAK,CAAChE,KAAMhE,EAAKqH,EAAE,yBAA0B1D,OAAQ,mBAAoBM,SAAU,kBAACqE,GAAA,EAAD,QAChGV,EAAaI,KAAK,CAAChE,KAAMhE,EAAKqH,EAAE,mBAAoB1D,OAAQ,QAASM,SAAU,kBAACsE,GAAA,EAAD,SAGnF,IAAMC,EAAmB,CAAC,CAACxE,KAAMhE,EAAKqH,EAAE,oBAAqB,CAACrD,KAAMhE,EAAKqH,EAAE,sBAE3E,OACI,kBAAC,IAAMoB,SAAP,KACI,kBAAC,EAAD,CAAcpF,KAAM6B,EAAYO,0BAA2BN,EAAca,YAAa4B,IACtF,kBAACjB,GAAiBxF,EACd,kBAACuH,EAAA,EAAD,CAAQzD,SAAS,SACb,kBAAC0D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,GACX,kBAACF,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACvC,EAAA,EAAD,CAAYyC,KAAK,QAAQ/F,MAAM,UAAUgG,KAAM,QAASlG,QAASqC,GAC7D,kBAAC,KAAD,OAEJ,kBAAC8D,EAAA,EAAD,CAAYlG,QAAQ,MACf/C,EAAKqH,EAAE,sBAIpB,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,GACX,kBAACF,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,UACrB,kBAAChI,EAAD,CAAkBM,MAAOxB,EAAKqH,EAAE,mBAAoB5F,QAASmG,MAGrE,kBAACgB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,GACX,kBAACF,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,YACrB,kBAAChI,EAAD,CAAkBM,MAAOxB,EAAKqH,EAAE,mBAAoB5F,QAAS+G,EAAkB9G,UAAW0F,KACzFjG,EAAM2G,WAAWC,OACd,kBAACoB,EAAA,EAAD,CAAS3H,MAAOL,EAAM2G,WAAWsB,UAAY,IAAMjI,EAAM2G,WAAWuB,UAChE,kBAAClB,EAAA,EAAD,CAAmB/D,SAAU,iBAS7D,kBAACuE,EAAA,EAAD,OAIZjB,GAAW4B,UAAY,CACnBxB,WAAYrD,IAAUC,MAAMC,Y,cCzGjB,SAAS4E,GAASpI,GAC7B,OACI,kBAACyH,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,UACrB,kBAACM,GAAA,EAAD,KACI,yBAAKC,IAAK,6BAA8BC,IAAK1J,EAAKqH,EAAE,oBACpD,kBAAC4B,EAAA,EAAD,CAAYU,MAAO,UACd3J,EAAKqH,EAAE,sB,gHCVtBuC,GAAehJ,OAAOiJ,qBAEfC,GAAgBF,GAAe,SAC/BG,GAAqBH,GAAe,mBACpCI,GAAuBJ,GAAe,qBACtCK,GAAsBL,GAAe,eACrCM,GAAmBN,GAAe,0BAClCO,GAAqBP,GAAe,mBACpCQ,GAAyBR,GAAe,uBACxCS,GAAqBT,GAAe,wBACpCU,GAAoBV,GAAe,aAGnCW,GAAsC3J,OAAO4J,mB,SAI3CC,K,gFAAf,qDAAAC,EAAA,6DAAwBC,EAAxB,+BAA8B,GAAIC,EAAlC,+BAAyC,GAAIC,EAA7C,uBACU9C,EAAQ+C,eAAenF,QAAQ4E,IACjCQ,EAAU,CACV,eAAgB,kCAEhBhD,IACAgD,EAAQC,cAAgB,UAAYjD,GAN5C,SAQyBkD,MAAMN,EAAK,CAC5BO,OAAQL,EACRE,QAASA,EACTI,KAAMC,KAAKC,UAAUT,KAX7B,cAQQU,EARR,OAaQC,EAAiB,GAbzB,oBAe+BD,EAASE,OAfxC,QAeQD,EAfR,2FAiBWA,GAjBX,4D,sBAoBO,SAASE,GAAUd,EAAKC,GAAO,OAAOH,GAASE,EAAKC,EAAM,QAC1D,SAASc,GAASf,EAAKC,GAAO,OAAOH,GAASE,EAAKC,EAAM,O,gDAGhE,iDAAAF,EAAA,6DAAuBC,EAAvB,+BAA6B,GACnB5C,EAAQ+C,eAAenF,QAAQ4E,IACjCQ,EAAU,CACV,eAAgB,kCAEhBhD,IACAgD,EAAQC,cAAgB,UAAYjD,GAN5C,SAQyBkD,MAAMN,EAAK,CAC5BO,OAAQ,MACRH,QAASA,IAVjB,cAQQO,EARR,OAYQC,EAAiB,GAZzB,mBAc+BD,EAASE,OAdxC,QAcQD,EAdR,0FAgBWA,GAhBX,2D,sBAmBO,SAASI,GAAShB,GAAM,O,2CAAOiB,CAAQjB,GC5DvC,SAASkB,GAAaC,GACzB,SAAKA,GAA0B,kBAAVA,IAIV,MADCA,EAAMC,MAAM,wCAQrB,SAASC,GAAmBC,GAC/B,IAAKA,GAAsC,kBAAhBA,GAA4BA,EAAYC,OAAS,GAAI,OAAO,EAMvF,OAAW,MADCD,EAAYF,MADF,uGASnB,SAASI,GAAuBC,GACnC,IAAKA,EAAS,OAAO,EACrB,GAAyB,MAArBA,EAAQhD,WAAqBgD,EAAQhD,UAAU8C,OAAS,EAAG,OAAO,EACtE,GAAwB,MAApBE,EAAQ/C,UAAoB+C,EAAQ/C,SAAS6C,OAAS,EAAG,OAAO,EACpE,GAAIE,EAAQH,cAAgBD,GAAmBI,EAAQH,aAAc,OAAO,EAC5E,GAAqB,IAAjBG,EAAQC,MAA+B,IAAjBD,EAAQC,KAAY,OAAO,EACrD,IAAKD,EAAQE,eAAgB,OAAO,EACpC,IAAMC,EAAKH,EAAQE,eACnB,QAAIC,EAAGC,SAAWD,EAAGC,QAAQN,OAAS,SAClCK,EAAGE,SAAkC,IAAtBF,EAAGE,QAAQP,SAAgBQ,MAAMH,EAAGE,cACnDF,EAAGI,MAAQJ,EAAGI,KAAKT,OAAS,OAC5BK,EAAGK,SAAWL,EAAGK,QAAQV,OAAS,MAInC,SAASW,GAAcC,GAE1B,OAAiB,OAAbA,GAAyC,kBAAbA,EAA8B,EAC1C,CACfA,EAASZ,OAAS,EAClBY,EAASZ,OAAS,EAClBY,EAASZ,OAAS,EAClBY,EAASC,OAAO,UAAY,EAC5BD,EAASC,OAAO,kBAAoB,EACpCD,EAASC,OAAO,UAAY,EAC5BD,EAASC,OAAO,kBAAoB,EACpCD,EAASC,OAAO,UAAY,EAC5BD,EAASC,OAAO,iBAAmB,EACnCD,EAASC,OAAO,gCAAkC,GAEpCC,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,IAAK,GC5CvD,IASMC,G,4MAEFnI,MAAQ,CACJoI,cAAc,EACdC,KAAM,GACNP,SAAU,GACVQ,cAAc,EACdC,OAAQ,M,EAgBZC,iBAAmB,SAAC5L,GAChBA,EAAMsB,iBADoB,MAED,EAAK8B,MAAvBqI,EAFmB,EAEnBA,KAAMP,EAFa,EAEbA,SAEb,OADA,EAAKW,QAAQC,GAAyB,CAACL,KAAMA,EAAMP,SAAUA,KACtD,G,EAGXa,aAAe,SAAC/L,GAAW,IAAD,EACG,EAAKoD,MAAxBqI,EADgB,EAChBA,KAAMP,EADU,EACVA,SACZ,EAAKxH,SAAL,gBAAgB1D,EAAMwD,OAAOiI,KAAOzL,EAAMwD,OAAOrD,QACvB,SAAtBH,EAAMwD,OAAOiI,OAAiBA,EAAOzL,EAAMwD,OAAOrD,OAC5B,aAAtBH,EAAMwD,OAAOiI,OAAqBP,EAAWlL,EAAMwD,OAAOrD,OAC1D+K,EAASZ,QAAU,GAAK0B,GAA4BP,GACpD,EAAK/H,SAAS,CAAC8H,cAAc,IAE7B,EAAK9H,SAAS,CAAC8H,cAAc,K,EAIrCS,wBAA0B,WAAO,IACtBP,EAAgB,EAAKtI,MAArBsI,aACP,EAAKhI,SAAS,CAACgI,cAAeA,K,iGAjCpB3C,EAAKC,G,wFACC8C,GAAoB/C,EAAKC,G,QAArCkD,E,QACI/F,OAAS+F,EAAIP,SACVQ,EAAcnI,KAAKzE,MAAnB4M,YACID,EAAI/F,MAAO+F,EAAI1E,UAAW0E,EAAIzE,SAAUyE,EAAIE,MACvDpI,KAAKzE,MAAM8M,QAAQjG,KAAK,MAGxBpC,KAAKN,SAAS,CAACiI,QAAQ,I,wIA4BrB,IAAD,EACwD3H,KAAKZ,MAA3DoI,EADF,EACEA,aAAcE,EADhB,EACgBA,aAAcR,EAD9B,EAC8BA,SAAUO,EADxC,EACwCA,KAAME,EAD9C,EAC8CA,OAC5CW,EAAWtI,KAAKzE,MAAhB+M,QACP,OACI,kBAACtF,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,UACrB,kBAACM,GAAA,EAAD,CAAM1F,UAAWoK,EAAQC,MACrB,kBAACvF,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,UACrB,kBAACD,EAAA,EAAD,CAAYlG,QAAS,KAAMqL,cAAY,GAAEpO,EAAKqH,EAAE,iBAEpD,kBAACuB,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,IACX,kBAACuF,GAAA,EAAD,CACIC,MAAOtO,EAAKqH,EAAE,cACdkH,WAAS,EACTxM,MAAOsL,EACPmB,SAAU5I,KAAK+H,aACfN,KAAM,OACNoB,WAAS,MAIrB,0BAAMC,SAAU9I,KAAK4H,kBACjB,kBAAC5E,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,IACX,kBAAC6F,GAAA,EAAD,CAAaJ,WAAS,GAClB,kBAACK,GAAA,EAAD,CAAYC,QAAQ,+BAA+B7O,EAAKqH,EAAE,mBAC1D,kBAACyH,GAAA,EAAD,CACI3L,GAAG,8BACH4L,KAAMzB,EAAe,OAAS,WAC9BvL,MAAO+K,EACP0B,SAAU5I,KAAK+H,aACfN,KAAM,WACN2B,aACI,kBAACC,GAAA,EAAD,CAAgBhK,SAAS,OACrB,kBAACqB,EAAA,EAAD,CACI4I,aAAW,6BACXpM,QAAS8C,KAAKiI,wBACdsB,UAAW,GAEV7B,EAAe,kBAAC8B,GAAA,EAAD,MAAiB,kBAACC,GAAA,EAAD,aAQ7D,8BACY,IAAX9B,GAAoB,kBAACtE,EAAA,EAAD,CAAYjG,MAAO,YAAaD,QAAS,MAAO/C,EAAKqH,EAAE,sBAC5E,kBAACuB,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,UACrB,kBAACvG,EAAA,EAAD,CAAQI,QAAS,YAAaC,MAAO,UAAWsM,UAAWlC,EAAc2B,KAAM,UAC1E/O,EAAKqH,EAAE,wB,GAlGfjG,IAAMqF,WA4G/B0G,GAAW3I,UAAY,CACnBuJ,WAAYtJ,IAAUG,KAAKD,YAGhB1C,oBAzHA,SAAAsN,GAAM,MAAK,CACtBpB,KAAM,CACFqB,QAAS,OACTC,OAAQ,OACRC,SAAU,QACVC,UAAW,sCAoHJ1N,CAAmB2N,YAAWzC,KCrHvC0C,G,mLAIEC,EADsBlK,KAAKzE,MAApB2O,iB,+BAID,IACC5B,EAAWtI,KAAKzE,MAAhB+M,QACP,OACI,kBAACtF,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,UACrB,kBAACM,GAAA,EAAD,CAAM1F,UAAWoK,EAAQC,MACrB,kBAAClF,EAAA,EAAD,CAAYlG,QAAS,MAChB/C,EAAKqH,EAAE,6B,GAbXjG,IAAMqF,WAqB3BoJ,GAAOrL,UAAY,CACfsL,YAAarL,IAAUG,KAAKD,YAGjB1C,oBAnCA,SAAAsN,GAAM,MAAK,CACtBpB,KAAM,CACFqB,QAAS,OACTC,OAAQ,OACRC,SAAU,QACVC,UAAW,kCACXI,UAAW,aA6BJ9N,CAAmB4N,I,wHC9B5BG,GAAa5O,IAAM6O,YAAW,SAAoB9O,EAAO+O,GAC3D,OAAO,kBAACnJ,EAAA,EAAD,eAAOE,UAAU,KAAKiJ,IAAKA,GAAS/O,EAApC,CAA2CgG,QAAS,WAGhD,SAASgJ,GAAiBhP,GAAQ,IACrCiP,EAAuCjP,EAAvCiP,YAAaC,EAA0BlP,EAA1BkP,eAAgBC,EAAUnP,EAAVmP,OAErC,OACI,6BACI,kBAACC,GAAA,EAAD,CACIlN,MAAM,EACNmN,oBAAqBR,GACrB5M,aAAW,EACXG,QAAS6M,GAET,kBAACK,GAAA,EAAD,CAAa3M,UAAW,WAAY9D,EAAKqH,EAAE,6BAC3C,kBAACqJ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACKL,IAGT,kBAACM,GAAA,EAAD,KACI,kBAACjO,EAAA,EAAD,CAAQG,QAASuN,EAAgBrN,MAAM,WAClChD,EAAKqH,EAAE,8BAEZ,kBAAC1E,EAAA,EAAD,CAAQG,QAASsN,EAAapN,MAAM,WAC/BhD,EAAKqH,EAAE,8BAQhC8I,GAAiB7G,UAAY,CACzB8G,YAAa3L,IAAUG,KAAKD,WAC5B0L,eAAgB5L,IAAUG,KAAKD,WAC/B2L,OAAQ7L,IAAUI,OAAOF,Y,2nECxC7B,IAAMkM,GAAQC,aAAO,QAAPA,CAAH,MAMLC,GAAeD,aAAO,MAAPA,CAAH,MAgCZE,GAAMF,cAAO,gBAAGxC,EAAH,EAAGA,MAAO2C,EAAV,EAAUA,SAAa9P,EAAvB,4CACf,wBAASA,EACL,8BAAOmN,GACP,kBAAC,KAAD,CAAWxL,QAASmO,OAHhBH,CAAH,MAqCHI,GAAUJ,aAAO,KAAPA,CAAH,MA6CE,SAASK,GAAqBhQ,GAAQ,IAAD,EAY5CiQ,aAAgB,CAChBjO,GAAI,kBACJ1B,QAASN,EAAMM,QACf4P,aAAclQ,EAAMkQ,aACpBC,eAAgB,SAAC7N,GAAD,OAAYA,EAAOjC,OACnCgN,SAAU,SAAC5M,EAAO2P,GAAR,OAAmBC,EAAgBD,IAC7CE,cAAe,SAAC7P,EAAOG,GAAR,OAAkB2P,EAAkB3P,IACnD4P,SAAUxQ,EAAMwQ,WAjBhBC,EAF4C,EAE5CA,aACAC,EAH4C,EAG5CA,mBACAC,EAJ4C,EAI5CA,cACAC,EAL4C,EAK5CA,YACAC,EAN4C,EAM5CA,gBACAC,EAP4C,EAO5CA,eACAC,EAR4C,EAQ5CA,eACAnQ,EAT4C,EAS5CA,MACAoQ,EAV4C,EAU5CA,QACA5Q,EAX4C,EAW5CA,YAWEiQ,EAAkB,SAACD,GACjBpQ,EAAMqN,UACNrN,EAAMqN,SAAS+C,IAIjBG,EAAoB,SAAC3P,GACnBZ,EAAMsQ,eACNtQ,EAAMsQ,cAAc1P,IAI5B,OACI,kBAACqQ,GAAA,EAAD,KACI,6BACI,wBAASR,IACL,kBAACf,GAAUgB,IAAuB1Q,EAAMmN,OACxC,kBAACyC,GAAD,CAAcb,IAAK3O,EAAauC,UAAWqO,EAAU,UAAY,IAC5DpQ,aAAiBsQ,OAAStQ,EAAMyB,KAAI,SAACC,EAAQC,GAAT,OACjC,kBAACsN,GAAD,eAAK1C,MAAO7K,EAAOjC,OAAWuQ,EAAY,CAAErO,eAGhD,0BAAWoO,OAGlBI,EAAehG,OAAS,EACrB,kBAACgF,GAAYc,IACRE,EAAe1O,KAAI,SAACC,EAAQC,GAAT,OAChB,uBAAQuO,EAAe,CAAExO,SAAQC,UAC7B,8BAAOD,EAAOjC,OACbiC,EAAO6O,SAAW,6BAAM7O,EAAO6O,SAChC,kBAAC,KAAD,CAAWlO,SAAS,eAIhC,OAMpB+M,GAAqB7H,UAAY,CAC7BkF,SAAU/J,IAAUG,KAAKD,WACzB8M,cAAehN,IAAUG,KACzByM,aAAc5M,IAAUC,MACxBiN,SAAUlN,IAAUiC,KAAK/B,WACzBlD,QAASgD,IAAU8N,QAAQ9N,IAAU+N,MAAM,CACvChR,MAAOiD,IAAUI,OAAOF,cAE5B2J,MAAO7J,IAAUI,OAAOF,Y,IC/Ib8N,G,4MA/CXzN,MAAO,CACH0N,SAAU,KACVC,eAAgB,M,EAcpBC,qBAAuB,SAACC,GACpB,EAAKvN,SAAS,CAACqN,eAAiBE,IAC5B,EAAK1R,MAAMqN,UAAU,EAAKrN,MAAMqN,SAASqE,I,EAEjDC,oBAAsB,SAACC,GACnB,EAAKC,mBAAmB,CAACC,kBAAmBF,K,4GAhBvBnI,G,4FACH8C,GAAoBpD,GAAmBM,G,WAAnDkD,E,SACqB,OAAfA,EAAIoF,O,iDACTP,EAAkB/M,KAAKZ,MAAvB2N,eACHQ,EAAcrF,EAAIsF,QAAQ5P,KAAI,SAAC6P,EAAa3P,GAC5C,MAAO,CAAClC,MAAO6R,EAAYhG,KAAMiF,QAASe,EAAYf,YAEvDK,GAAgBA,EAAeW,SAAQ,SAAC3G,GAAD,OAAUwG,EAAYnL,KAAK2E,MACrE/G,KAAKN,SAAS,CAACoN,SAAUS,I,iJAYzBvN,KAAKoN,mBAAmB,CAACC,kBAAmB,O,+BAGtC,IACCP,EAAY9M,KAAKZ,MAAjB0N,SACP,OACI,6BACKA,GACD,kBAACvB,GAAD,CACIE,aAAc,GACd5P,QAASiR,EACTlE,SAAU5I,KAAKgN,qBACfnB,cAAe7L,KAAKkN,oBACpBnB,UAAU,EACVrD,MAAOtO,EAAKqH,EAAE,iD,GAzCAjG,IAAMqF,WAmDxC0K,GAAqB7H,UAAY,CAC7BkF,SAAU/J,IAAUG,KAAKD,YChC7B,IA8BM4O,G,4MAEFvO,MAAQ,CACJwO,UAAY,KACZC,YAAa,KACbC,cAAc,EACdC,aAAc,EACdd,OAAQ,KACRH,SAAU,KACVkB,aAAc,M,EAwBlBC,yBAA2B,WAAO,IACvBhB,EAAU,EAAK7N,MAAf6N,OACP,OAAe,OAAXA,GAAqC,IAAlBA,EAAO3G,OAAqB,KAC5B2G,EAAOrP,KAAI,SAACmJ,GAAD,OAAUA,EAAKnL,U,EAIrDsS,gBAAkB,SAAClS,GAAW,IAAD,EACS,EAAKoD,MAAhCwO,EADkB,EAClBA,UAAWG,EADO,EACPA,aAClB,GAAKH,EAAL,CACA,IAAMO,EAAcP,EAAUO,YACxBC,EAAgBR,EAAUQ,cAE5BC,EAAWF,EADEG,SAAStS,EAAMwD,OAAOrD,OAASH,EAAMwD,OAAOC,WAAWtD,OAEpEkS,EAAW,IAAGA,EAAW,GACzBA,GAAYD,IAAeC,EAAWD,EAAgB,GAC1D,IAAIpJ,EAAO,CAACuJ,QAASF,EAAUN,aAAcA,EAAcd,OAAQ,EAAKgB,4BACxE,EAAKO,iBAAiBxJ,K,EAG1ByJ,wBAA0B,SAACzS,GACvB,EAAK0S,mBAAmB,CAACnR,GAAIvB,EAAMwD,OAAOrD,S,EAE9CwS,mBAAqB,YAAe,IAAbnP,EAAY,EAAZA,OAAY,EACG,EAAKJ,MAAhC2O,EADwB,EACxBA,aAAcH,EADU,EACVA,UACrB,GAAIG,IAAiBvO,EAAOrD,MAAO,CAC/B,IAEMyS,EAFchB,EAAUO,YACCJ,EACGvO,EAAOrD,MACzC,EAAKuD,SAAS,CAACqO,aAAcvO,EAAOrD,QACpC,EAAKqS,iBAAiB,CAACD,QAASK,EAAgBb,aAAcvO,EAAOrD,MAAO8Q,OAAQ,EAAKgB,+B,EAIjGY,iBAAmB,WAAO,IAAD,EACqB,EAAKzP,MAA1B7B,EADA,EACdsQ,YAActQ,GAAKwQ,EADL,EACKA,aACnBH,EAAa,EAAKxO,MAAlBwO,UACP,GAAKA,GAAcrQ,EAAnB,CACA,IAAM4Q,EAAcP,EAAUO,YAC9B,EAAK5S,MAAM8M,QAAQjG,KAAK,mBAAqB7E,EAAK,gBAAkB4Q,EAAc,iBAAmBJ,K,EAiBzGe,iBAAkB,SAAC9S,GACf,EAAK0D,SAAS,CAACoO,cAAc,K,EAGjCiB,iBAAmB,WAAO,IACfxR,EAAM,EAAK6B,MAAMyO,YAAjBtQ,GACP,EAAKmC,SAAS,CAACoO,cAAc,IAC7B,EAAKkB,kBAAkBzR,I,EAG3B0R,oBAAsB,WAClB,EAAKvP,SAAS,CAACoO,cAAc,K,EAGjCd,qBAAuB,SAACkC,GACpB,EAAKxP,SAAS,CAACuN,OAAQiC,K,EAG3BC,aAAe,WAAO,IACXpB,EAAgB,EAAK3O,MAArB2O,aACP,EAAKS,iBAAiB,CAACD,QAAS,EAAGR,aAAcA,EAAcd,OAAQ,EAAKgB,8B,EAGhFJ,YAAc,WAAO,IAAD,EACoB,EAAKzO,MAAlCyO,EADS,EACTA,YAAaC,EADJ,EACIA,aACbxF,EAAW,EAAK/M,MAAhB+M,QACP,OACI,kBAAC1E,GAAA,EAAD,CAAM1F,UAAWoK,EAAQC,MACrB,kBAAC6G,GAAA,EAAD,CAAYC,OACT,kBAACC,GAAA,EAAD,CAAWpR,UAAWoK,EAAQiH,MAAOnS,MAAO,WAAYF,QAAS,kBAAM,EAAKwC,SAAS,CAACmO,YAAa,YAEtG,4BACKA,GACG,6BACI,kBAACxK,EAAA,EAAD,CAAYlG,QAAS,KAAM4G,MAAO,UAAW8J,EAAYrK,UAAY,IAAMqK,EAAYpK,UACvF,4BACI,4BAAKoK,EAAY3H,OAChB2H,EAAYxH,aAAe,4BAAKwH,EAAYxH,aAC5CwH,EAAYnH,gBACb,6BACI,6BACCmH,EAAYnH,eAAeE,SAAW,4BAAKiH,EAAYnH,eAAeE,SACtEiH,EAAYnH,eAAeG,SAAW,4BAAKgH,EAAYnH,eAAeG,SACtEgH,EAAYnH,eAAeK,MAAQ,4BAAK8G,EAAYnH,eAAeK,MACnE8G,EAAYnH,eAAeM,SAAW,4BAAK6G,EAAYnH,eAAeM,aAQ3F,kBAACwI,GAAA,EAAD,CAAaC,gBAAc,GACvB,kBAAC/O,EAAA,EAAD,CAAYxD,QAAS,EAAK2R,kBACtB,kBAACa,GAAA,EAAD,CAAiBtS,MAAO,YACxB,kBAACiG,EAAA,EAAD,CAAYlG,QAAS,UAAWC,MAAO,WAAYhD,EAAKqH,EAAE,qBAE9D,kBAACf,EAAA,EAAD,CAAYxC,UAAWoK,EAAQqH,aAAczS,QAAS,EAAK4R,iBAAkB3S,MAAO0R,EAAYtQ,IAC5F,kBAACqS,GAAA,EAAD,CAAmBxS,MAAO,gBAGjC0Q,GACG,kBAACvD,GAAD,CACIC,YAAa,EAAKuE,iBAClBtE,eAAgB,EAAKwE,oBACrBvE,OACI,8BACKtQ,EAAKqH,EAAE,gCAAgC,6BACxC,kBAAC4B,EAAA,EAAD,CAAYjG,MAAO,YAAaD,QAAS,WACpC0Q,EAAYrK,UAAY,IAAMqK,EAAYpK,SAAW,KAAOoK,EAAY3H,Y,0GAlJlFlB,G,wFACD8C,GAAoBA,GAA8B9C,G,OAA9DkD,E,OACNlI,KAAKN,SAAS,CAACkO,UAAW1F,I,2LAGLlD,G,wFACH8C,GAAoBA,GAAgC9C,G,OAAhEkD,E,OACNlI,KAAKN,SAAS,CAACmO,YAAa3F,I,0LAGR3K,G,uFAC6ByC,KAAKZ,MAAnC+O,E,EAAZP,UAAYO,YAAcJ,E,EAAAA,a,SPzCMlJ,GO0CCiD,GAAgC,QAASvK,EAAI,KP1C1B,U,OO2CxC,QADb2K,E,QACEoF,QACJtN,KAAKN,SAAS,CAACmO,YAAa,OAC5B7N,KAAKwO,iBAAiB,CAACD,QAASJ,EAAaJ,aAAcA,EAAcd,OAAQjN,KAAKiO,8BAEtF4B,MAAMzV,EAAKqH,EAAE,8BAAgCyG,EAAI4H,Q,iJA+CrD,IAAI9K,EACE+K,EAAS,IAAIC,gBAAgBhQ,KAAKzE,MAAMqG,SAASuF,QACjDgH,EAAc4B,EAAOE,IAAI,eACzBlC,EAAegC,EAAOE,IAAI,gBAC5B9B,GAAeJ,GACf/N,KAAKN,SAAS,CAACqO,aAAcA,IAC7B/I,EAAO,CAACuJ,QAASJ,EAAaJ,aAAcA,IAE5C/I,EAAO,CAACuJ,QAAS,IAAKR,aAAc,KAExC/N,KAAKwO,iBAAiBxJ,K,+BAiFhB,IAAD,SAC0ChF,KAAKZ,MAA7CwO,EADF,EACEA,UAAWC,EADb,EACaA,YAAaE,EAD1B,EAC0BA,aACxBzF,EAAWtI,KAAKzE,MAAhB+M,QACD4H,IAA2BtC,GAAuC,IAA1BA,EAAUO,aAClDgC,IAAuBvC,GAAaA,EAAUO,YAAc,EAAIP,EAAUQ,eAChF,OACI,kBAACpL,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,UACrB,kBAACM,GAAA,EAAD,CAAM1F,UAAWoK,EAAQC,MACrB,kBAAClF,EAAA,EAAD,CAAYlG,QAAQ,KAAK4G,MAAO,UAC3B3J,EAAKqH,EAAE,wBAEXmM,GAAaA,EAAUwC,WACxB,4BACKxC,EAAUwC,UAAUxS,KAAI,SAACyS,EAAMvS,GAAP,OACrB,wBAAII,UAAWoK,EAAQgI,GAAIrS,IAAKH,EAAO3B,MAAOkU,EAAK9S,GAAIL,QAAS,EAAKuR,yBAA0B4B,EAAK7M,UAAY,IAAM6M,EAAK5M,SAAW,KAAO4M,EAAKA,UAG1J,kBAACrN,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,gBACrB,kBAACvG,EAAA,EAAD,CAAQG,QAAS8C,KAAKkO,gBAAiB/R,OAAQ,EAAGuN,SAAUwG,EAAwB/S,QAAS,YAAaC,MAAO,WAC5GhD,EAAKqH,EAAE,uBAEZ,kBAAC1E,EAAA,EAAD,CAAQG,QAAS8C,KAAKkO,gBAAiB/R,MAAO,EAAGuN,SAAUyG,EAAoBhT,QAAS,YAAaC,MAAO,WACvGhD,EAAKqH,EAAE,oBAIhB,kBAAChB,EAAA,EAAD,CAASvC,UAAWoK,EAAQiI,UAC5B,kBAACvN,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAM5E,MAAI,GACN,kBAAC,GAAD,CAAqBwK,SAAU5I,KAAKgN,wBAExC,kBAAChK,EAAA,EAAD,CAAM5E,MAAI,EAACoS,MAAO,CAACC,UAAW,SAC1B,kBAAC/P,EAAA,EAAD,CAAYxD,QAAS8C,KAAKmP,cACtB,kBAACuB,GAAA,EAAD,SAIZ,kBAACjQ,EAAA,EAAD,MACA,kBAACuC,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,YACrB,kBAACN,EAAA,EAAD,CAAM5E,MAAI,GACN,yBAAKF,UAAWoK,EAAQqI,QACpB,kBAACtN,EAAA,EAAD,CAAYlG,QAAS,UAAWyT,QAAQ,SACnCxW,EAAKqH,EAAE,yCAEZ,kBAACoP,GAAA,EAAD,CACI1U,MAAO4R,EACP5Q,QAAS,WACT0M,OAAQ,QACRjB,SAAU5I,KAAK2O,oBAEf,kBAACxQ,EAAA,EAAD,CAAUhC,MAAO,GAAjB,KACA,kBAACgC,EAAA,EAAD,CAAUhC,MAAO,IAAjB,MACA,kBAACgC,EAAA,EAAD,CAAUhC,MAAO,IAAjB,WAMnB0R,GAAe7N,KAAK6N,mB,GAjObrS,IAAMqF,WAuOfxE,gBArQA,SAAAsN,GAAM,MAAK,CACtBpB,KAAM,CACFqB,QAAS,OACTC,OAAQ,OACRiH,MAAO,QACP/G,UAAW,mCAEfuG,GAAI,CACAzG,OAAQ,aACR,UAAW,CACPkH,OAAQ,YAGhBxB,MAAO,CACH,UAAW,CACPwB,OAAQ,YAGhBpB,aAAc,CACVqB,WAAY,QAEhBL,OAAS,CACLM,MAAO,SAEXV,QAAS,CACLE,UAAW,OACXS,aAAc,WA2OP7U,CAAmB2N,YAAW2D,K,iBC7R9B,SAASwD,GAAS5V,GAC7B,IAAM6V,EAAW7V,EAAM6V,SACvB,OACI,yBAAKlT,UAAW,YACZ,0BAAMA,UAAW,aAAekT,EAAW,EAAI,YAAc,MAC7D,0BAAMlT,UAAW,aAAekT,EAAW,EAAI,YAAc,MAC7D,0BAAMlT,UAAW,aAAekT,EAAW,EAAI,YAAc,MAC7D,0BAAMlT,UAAW,aAAekT,EAAW,EAAI,YAAc,OCWzE,IAeMC,G,4MACFjS,MAAQ,CACJ8G,MAAO,GACPoL,YAAY,EACZC,gBAAiB,GACjBrK,SAAU,GACVsK,UAAU,EACVC,cAAe,GACfC,iBAAkB,EAClBC,sBAAsB,EACtBC,gBAAiB,GACjBC,iBAAgB,EAChBC,qBAAsB,GACtBC,eAAe,EACfC,gBAAgB,EAChBxO,UAAW,GACXyO,gBAAgB,EAChBC,oBAAqB,GACrBzO,SAAU,GACV0O,eAAe,EACfC,mBAAoB,GACpBC,gBAAgB,EAChBC,YAAa,M,EAGjBC,kBAAoB,SAACvW,GAAW,IAAD,EAC8B,EAAKoD,MAAvD8H,EADoB,EACpBA,SAAU0K,EADU,EACVA,gBAAiBpO,EADP,EACOA,UAAWC,EADlB,EACkBA,SACvC+O,EAAWxW,EAAMwD,OAAOrD,MACd8J,GAAauM,GAEzB,EAAK9S,SAAS,CAACwG,MAAMsM,EAAUlB,YAAY,EAAOC,gBAAiB,KAEnE,EAAK7R,SAAS,CAACwG,MAAMsM,EAAUlB,YAAY,EAAMC,gBAAiBnX,EAAKqH,EAAE,8BAE7E,IAAMgR,EAAe,EAAKC,qBAAqBF,EAAUtL,EAAU0K,EAAiBpO,EAAWC,GAC/F,EAAK/D,SAAS,CAACsS,gBAAiBS,K,EAGpCxK,wBAA0B,WAAO,IACtB8J,EAAiB,EAAK3S,MAAtB2S,cACP,EAAKrS,SAAS,CAACqS,eAAgBA,K,EAGnCY,sBAAwB,SAAC3W,GAAW,IAAD,EACiC,EAAKoD,MAA9D8H,EADwB,EACxBA,SAAU0K,EADc,EACdA,gBAAiB1L,EADH,EACGA,MAAO1C,EADV,EACUA,UAAWC,EADrB,EACqBA,SAC9CtH,EAAQH,EAAMwD,OAAOrD,MACrBsL,EAAOzL,EAAMwD,OAAOiI,KAC1B,GAAa,aAATA,EAAqB,CACjBtL,GAASA,EAAMmK,OAAS,EACxB,EAAK5G,SAAS,CAAC+R,cAAerX,EAAKqH,EAAE,2CAA4C+P,UAAU,IAE3F,EAAK9R,SAAS,CAAC+R,cAAe,GAAID,UAAU,IAE5CrV,GAASA,IAAUyV,EACnB,EAAKlS,SAAS,CAACoS,qBAAsB1X,EAAKqH,EAAE,mDAAoDoQ,iBAAiB,IAEjH,EAAKnS,SAAS,CAACoS,qBAAsB,GAAID,iBAAiB,IAE9D,IAAMe,EAAe,EAAKF,qBAAqBxM,EAAO/J,EAAOyV,EAAiBpO,EAAWC,GACnFoP,EAAQ5L,GAAc9K,GAC5B,EAAKuD,SAAS,CAACwH,SAAU/K,EAAO6V,gBAAiBY,EAAclB,iBAAkBmB,SAC9E,GAAa,oBAATpL,EAA4B,CAC/BtL,GAASA,IAAU+K,EACnB,EAAKxH,SAAS,CAACoS,qBAAsB1X,EAAKqH,EAAE,mDAAoDoQ,iBAAiB,IAEjH,EAAKnS,SAAS,CAACoS,qBAAsB,GAAID,iBAAiB,IAE9D,IAAMe,EAAe,EAAKF,qBAAqBxM,EAAOgB,EAAU/K,EAAOqH,EAAWC,GAClF,EAAK/D,SAAS,CAACkS,gBAAiBzV,EAAO6V,gBAAiBY,M,EAIhEE,iBAAmB,SAAC9W,GAAW,IAAD,EACsC,EAAKoD,MAA9D8G,EADmB,EACnBA,MAAOgB,EADY,EACZA,SAAU0K,EADE,EACFA,gBAAiBpO,EADf,EACeA,UAAWC,EAD1B,EAC0BA,SAC9CtH,EAAQH,EAAMwD,OAAOrD,MAC3B,EAAKuD,SAAL,gBAAgB1D,EAAMwD,OAAOiI,KAAOtL,IACpC,IAAIyW,GAAe,EACO,cAAtB5W,EAAMwD,OAAOiI,MACTtL,GAASA,EAAMmK,OAAS,EACxB,EAAK5G,SAAS,CAACuS,gBAAgB,EAAMC,oBAAqB9X,EAAKqH,EAAE,qCAEjE,EAAK/B,SAAS,CAACuS,gBAAgB,EAAOC,oBAAqB,KAE/DU,EAAe,EAAKF,qBAAqBxM,EAAOgB,EAAU0K,EAAiBzV,EAAOsH,IACrD,aAAtBzH,EAAMwD,OAAOiI,OAChBtL,GAASA,EAAMmK,OAAS,EACxB,EAAK5G,SAAS,CAACyS,eAAe,EAAMC,mBAAoBhY,EAAKqH,EAAE,oCAE/D,EAAK/B,SAAS,CAACyS,eAAe,EAAOC,mBAAoB,KAE7DQ,EAAe,EAAKF,qBAAqBxM,EAAOgB,EAAU0K,EAAiBpO,EAAWrH,IAE1F,EAAKuD,SAAS,CAACsS,gBAAiBY,K,EAWpCG,gBAAkB,WACd,EAAKrT,SAAS,CACVwG,MAAO,GACPoL,YAAY,EACZC,gBAAiB,GACjBrK,SAAU,GACVsK,UAAU,EACVC,cAAe,GACfC,iBAAkB,EAClBC,sBAAsB,EACtBC,gBAAiB,GACjBC,iBAAgB,EAChBC,qBAAsB,GACtBE,gBAAgB,EAChBxO,UAAW,GACXyO,gBAAgB,EAChBC,oBAAqB,GACrBzO,SAAU,GACV0O,eAAe,EACfC,mBAAoB,GACpBC,gBAAgB,EAChBC,YAAa,Q,EAIrBU,2BAA6B,WACzB,EAAKtT,SAAS,CAACiS,sBAAsB,K,EAGzCsB,2BAA6B,WACzB,EAAKvT,SAAS,CAACiS,sBAAqB,K,EAexCuB,aAAe,WAAO,IAAD,EAC+C,EAAK9T,MAA9D8G,EADU,EACVA,MAAOgB,EADG,EACHA,SAAU0K,EADP,EACOA,gBAAiBpO,EADxB,EACwBA,UAAWC,EADnC,EACmCA,SAEpD,GADkB,EAAKiP,qBAAqBxM,EAAOgB,EAAU0K,EAAiBpO,EAAWC,GAC1E,CACX,IAAMuB,EAAO,CACTkB,MAAOA,EACPgB,SAAUA,EACV0K,gBAAiBA,EACjBpO,UAAWA,EACXC,SAAUA,EACV6O,YAAa,MAEjB,EAAK5S,SAAS,CAAC2S,gBAAgB,IAC/B,EAAKc,QAAQnO,K,mEAlEAkB,EAAOgB,EAAU0K,EAAiBpO,EAAWC,GAC9D,SAAIwC,GAAaC,IAAUgB,GAAYA,EAASZ,QAAU,GAAKY,IAAa0K,GACrEpO,GAAaA,EAAU8C,QAAU,GACjC7C,GAAYA,EAAS6C,QAAU,K,yEAsC5BtB,G,iFACHmD,EAAcnI,KAAKzE,MAAnB4M,W,SACWL,GAAoBA,GAA4B9C,G,OAA5DkD,E,OACNlI,KAAKN,SAAS,CAAC2S,gBAAgB,IAC3BnK,EAAI/F,OACJgG,EAAWD,EAAI/F,MAAO+F,EAAI1E,UAAW0E,EAAIzE,SAAUyE,EAAIE,MACvDpN,OAAO4G,SAAW,KAElB5B,KAAKN,SAAS,CAAC4S,YAAapK,EAAIoK,c,sIAqB9B,IACChK,EAAWtI,KAAKzE,MAAhB+M,QADF,EAODtI,KAAKZ,MALF8G,EAFF,EAEEA,MAAOoL,EAFT,EAESA,WAAYC,EAFrB,EAEqBA,gBAAiBQ,EAFtC,EAEsCA,cAAe7K,EAFrD,EAEqDA,SAAU0K,EAF/D,EAE+DA,gBAChEJ,EAHC,EAGDA,SAAUK,EAHT,EAGSA,gBAAiBJ,EAH1B,EAG0BA,cAAeK,EAHzC,EAGyCA,qBAAsBE,EAH/D,EAG+DA,eAChExO,EAJC,EAIDA,UAAWyO,EAJV,EAIUA,eAAgBC,EAJ1B,EAI0BA,oBAC3BzO,EALC,EAKDA,SAAU0O,EALT,EAKSA,cAAeC,EALxB,EAKwBA,mBACzBC,EANC,EAMDA,eAAgBC,EANf,EAMeA,YAAaX,EAN5B,EAM4BA,qBAAsBD,EANlD,EAMkDA,iBAEvD,OACI,kBAAC1O,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,UACrB,kBAACM,GAAA,EAAD,CAAM1F,UAAWoK,EAAQC,MACrB,kBAACvF,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,IACX,kBAACG,EAAA,EAAD,CAAYlG,QAAS,KAAM4G,MAAO,UAAW3J,EAAKqH,EAAE,0BAExD,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,IACX,kBAACuF,GAAA,EAAD,CACIvK,UAAWoK,EAAQ8K,UACnBC,MAAO/B,EACP5I,MAAOtO,EAAKqH,EAAE,sBACd6R,WAAY/B,EACZ3I,SAAU5I,KAAKuS,kBACfpW,MAAO+J,EACP2C,WAAS,EACTF,WAAS,KAGjB,kBAAC3F,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,IAAI,+BACnB,kBAACF,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,IACX,yBAAKqQ,OAAQvT,KAAKgT,2BAA4BQ,QAASxT,KAAKiT,4BAC5D,kBAACxK,GAAA,EAAD,CACIvK,UAAWoK,EAAQ8K,UACnBjK,KAAM4I,EAAgB,OAAQ,WAC9BsB,MAAO7B,EACP9I,MAAOtO,EAAKqH,EAAE,yBACd6R,WAAY7B,EACZ7I,SAAU5I,KAAK2S,sBACfxW,MAAO+K,EACPO,KAAM,WACNkB,WAAS,EACT8K,WAAY,CACRrK,aAAc,kBAACC,GAAA,EAAD,CAAgBhK,SAAS,OACnC,kBAACqB,EAAA,EAAD,CACIxD,QAAS8C,KAAKiI,wBACdsB,UAAW,GAEVwI,EAAgB,kBAACvI,GAAA,EAAD,MAAiB,kBAACC,GAAA,EAAD,WAKlD,kBAACtI,EAAA,EAAD,CAAOG,GAAIqQ,EAAsBtQ,UAAW,OAAQE,QAAS,KACzD,6BACI,kBAAC4P,GAAD,CAAUC,SAAUM,QAKhC,kBAAC1O,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,IACX,kBAACuF,GAAA,EAAD,CACIvK,UAAWoK,EAAQ8K,UACnBjK,KAAM4I,EAAgB,OAAQ,WAC9BsB,MAAOxB,EACPnJ,MAAOtO,EAAKqH,EAAE,iCACd6R,WAAYxB,EACZlJ,SAAU5I,KAAK2S,sBACfxW,MAAOyV,EACPnK,KAAM,kBACNkB,WAAS,EACT8K,WAAY,CACRrK,aAAc,kBAACC,GAAA,EAAD,CAAgBhK,SAAS,OACnC,kBAACqB,EAAA,EAAD,CACIxD,QAAS8C,KAAKiI,wBACdsB,UAAW,GAEVwI,EAAgB,kBAACvI,GAAA,EAAD,MAAiB,kBAACC,GAAA,EAAD,YAMtD,kBAACzG,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,IACX,kBAACuF,GAAA,EAAD,CACIvK,UAAWoK,EAAQ8K,UACnBC,MAAOpB,EACPvJ,MAAOtO,EAAKqH,EAAE,0BACd6R,WAAYpB,EACZtJ,SAAU5I,KAAK8S,iBACf3W,MAAOqH,EACPiE,KAAM,YACNkB,WAAS,KAGjB,kBAAC3F,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,IACX,kBAACuF,GAAA,EAAD,CACIvK,UAAWoK,EAAQ8K,UACnBC,MAAOlB,EACPzJ,MAAOtO,EAAKqH,EAAE,yBACd6R,WAAYlB,EACZxJ,SAAU5I,KAAK8S,iBACf3W,MAAOsH,EACPgE,KAAM,WACNkB,WAAS,KAGhB0J,GACG,kBAACrP,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,UACrB,kBAACoQ,GAAA,EAAD,OAGR,kBAAC1Q,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,gBAAiBpF,UAAWoK,EAAQqL,cACzD,kBAAC3Q,EAAA,EAAD,CAAM5E,MAAI,GACN,kBAACrB,EAAA,EAAD,CAAQI,QAAS,YAAaC,MAAO,UAAWF,QAAS8C,KAAK+S,iBACzD3Y,EAAKqH,EAAE,oCAGhB,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,GACN,kBAACrB,EAAA,EAAD,CAAQI,QAAS,YAAaC,MAAO,UAAWsM,SAAUsI,EAAgB9U,QAAS8C,KAAKkT,cACnF9Y,EAAKqH,EAAE,sCAInB6Q,GACD,kBAACtP,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,UACrB,kBAACD,EAAA,EAAD,CAAYjG,MAAO,aAAckV,U,GAhS9B9W,IAAMqF,WAySjCwQ,GAAauC,SAAW,CACpBzL,WAAYtJ,IAAUG,KAAKD,YAGhB1C,oBA5TA,SAAAsN,GAAM,MAAK,CACtBpB,KAAM,CACFqB,QAAS,OACTC,OAAQ,OACRC,SAAU,QACVC,UAAW,mCAEfqJ,UAAW,CACPS,cAAe,QAEnBF,aAAc,CACVG,WAAY,WAiTLzX,CAAmBgV,I,UCzT5B0C,G,4MAEF3U,MAAQ,CACJoH,QAAS,KACTwN,eAAe,EACfC,oBAAoB,EACpBC,qBAAqB,EACrB5C,YAAY,EACZU,gBAAgB,EAChBC,gBAAgB,EAChBE,eAAe,EACfgC,kBAAkB,EAClBC,cAAc,EACd1Y,SAAU,M,EAGd2Y,gBAAkB,YAA+B,IAAD,IAA5B7U,OAAUrD,EAAkB,EAAlBA,MAAOsL,EAAW,EAAXA,KAAW,EACmC,EAAKrI,MAA7EoH,EADqC,EACrCA,QAASyL,EAD4B,EAC5BA,eAAgBE,EADY,EACZA,cAAegC,EADH,EACGA,iBAAkB7C,EADrB,EACqBA,WAC7DgD,GAAiB,EACrB,GAAa,UAAT7M,EAAkB,CAClB,IAAM8M,EAAU,2BAAO/N,GAAP,IAAgBN,MAAO/J,IACvCmY,EAAiB/N,GAAuBgO,GACxC,EAAK7U,SAAU,CAAC8G,QAAS+N,IACpBtO,GAAa9J,IAAWmV,EAElBrL,GAAa9J,IAAUmV,GAC9B,EAAK5R,SAAS,CAAC4R,YAAY,IAF3B,EAAK5R,SAAS,CAAC4R,YAAY,SAI5B,GAAa,cAAT7J,EAAsB,CAC7B,IAAM8M,EAAU,2BAAO/N,GAAP,IAAgBhD,UAAWrH,IAC3CmY,EAAiB/N,GAAuBgO,GACxC,EAAK7U,SAAU,CAAC8G,QAAS+N,IACrBpY,EAAMmK,OAAS,IAAM2L,EACrB,EAAKvS,SAAS,CAACuS,gBAAgB,IACxB9V,EAAMmK,QAAU,GAAK2L,GAC5B,EAAKvS,SAAS,CAACuS,gBAAgB,SAEhC,GAAa,aAATxK,EAAqB,CAC5B,IAAM8M,EAAU,2BAAO/N,GAAP,IAAgB/C,SAAUtH,IAC1CmY,EAAiB/N,GAAuBgO,GACxC,EAAK7U,SAAS,CAAC8G,QAAS+N,IACpBpY,EAAMmK,OAAS,IAAM6L,EACrB,EAAKzS,SAAS,CAACyS,eAAe,IACvBhW,EAAMmK,QAAU,GAAK6L,GAC5B,EAAKzS,SAAS,CAACyS,eAAe,SAE/B,GAAa,gBAAT1K,EAAwB,CAC/B,IAAM8M,EAAU,2BAAO/N,GAAP,IAAgBH,YAAalK,IAC7CmY,EAAiB/N,GAAuBgO,GACxC,EAAK7U,SAAS,CAAC8G,QAAS+N,IACxB,IAAIC,EAAsBpO,GAAmBjK,IAAoB,KAAVA,EAClDqY,GAAwBL,EAElBK,GAAsBL,GAC7B,EAAKzU,SAAS,CAACyU,kBAAkB,IAFjC,EAAKzU,SAAS,CAACyU,kBAAkB,SAIlC,GAAa,SAAT1M,EAAiB,CACxB,IAAM8M,EAAU,2BAAO/N,GAAP,IAAgBC,KAAMtK,IACtCmY,EAAiB/N,GAAuBgO,GACxC,EAAK7U,SAAS,CAAC8G,QAAS+N,SACrB,GAAa,YAAT9M,GACP,IAAKtL,GAASA,EAAMmK,QAAU,IAAK,CAC/B,IAAMiO,EAAU,2BAAO/N,GAAP,IAAgBE,eAAe,2BAAKF,EAAQE,gBAAd,IAA8BE,QAASzK,MACrFmY,EAAiB/N,GAAuBgO,GACxC,EAAK7U,SAAS,CAAC8G,QAAS+N,UAEzB,GAAa,YAAT9M,GACP,IAAKtL,GAASA,EAAMmK,QAAU,EAAG,CAC7B,IAAMiO,EAAU,2BAAO/N,GAAP,IAAgBE,eAAe,2BAAKF,EAAQE,gBAAd,IAA8BG,QAAS1K,MACrFmY,EAAiB/N,GAAuBgO,GACxC,EAAK7U,SAAS,CAAC8G,QAAU+N,IACpBpY,EAAMmK,OAAS,GAAKnK,EAAMmK,OAAS,GAAMQ,MAAM3K,GAChD,EAAKuD,SAAS,CAAC0U,cAAc,IAE7B,EAAK1U,SAAS,CAAC0U,cAAc,UAGlC,GAAa,SAAT3M,GACP,IAAKtL,GAASA,EAAMmK,QAAU,GAAI,CAC9B,IAAMiO,EAAU,2BAAO/N,GAAP,IAAgBE,eAAe,2BAAKF,EAAQE,gBAAd,IAA8BK,KAAM5K,MAClFmY,EAAiB/N,GAAuBgO,GACxC,EAAK7U,SAAS,CAAC8G,QAAS+N,UAEzB,GAAa,YAAT9M,KACFtL,GAASA,EAAMmK,QAAU,IAAI,CAC9B,IAAMiO,EAAU,2BAAO/N,GAAP,IAAgBE,eAAe,2BAAKF,EAAQE,gBAAd,IAA8BM,QAAS7K,MACrFmY,EAAiB/N,GAAuBgO,GACxC,EAAK7U,SAAS,CAAC8G,QAAS+N,IAG5BD,EACA,EAAK5U,SAAS,CAACsS,gBAAgB,IAE/B,EAAKtS,SAAS,CAACsS,gBAAgB,K,EAIvCyC,eAAiB,YAAe,IAAbjV,EAAY,EAAZA,OACf,EAAKE,SAAS,CAAChE,SAAU8D,K,EAG7BkV,gBAAkB,SAAC1Y,GACf,EAAK0D,SAAS,CAAChE,SAAU,OADA,IAGrBiZ,EADGC,EAAkB,EAAKrZ,MAAvBqZ,eAEH5Y,EAAMC,eAAiBD,EAAMC,cAAcC,YACxCF,EAAMC,cAAcC,WAAWC,OAASH,EAAMC,cAAcC,WAAWC,MAAMA,QAC5EwY,EAAgB3Y,EAAMC,cAAcC,WAAWC,MAAMA,OAEzDyY,GAAoC,wBAAlBD,GAClBC,K,EAIRC,qBAAuB,WAAO,IAAD,EAKrB,EAAKzV,MAJFoH,EADkB,EAClBA,QAASwL,EADS,EACTA,eAAgBiC,EADP,EACOA,mBAC5BC,EAFqB,EAErBA,oBAAqB5C,EAFA,EAEAA,WACrBW,EAHqB,EAGrBA,eAAgBE,EAHK,EAGLA,cAChBgC,EAJqB,EAIrBA,iBAAkBC,EAJG,EAIHA,aAAc1Y,EAJX,EAIWA,SAEhCgL,EAAiB,KACjBF,IAASE,EAAiBF,EAAQE,gBAPb,IAQlB4B,EAAW,EAAK/M,MAAhB+M,QACP,OACI,6BAAM9B,GACN,kBAACxD,EAAA,EAAD,CAAMC,WAAS,EAAC/E,UAAWoK,EAAQwM,eAC/B,kBAAC9R,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,WACrC,kBAAC/R,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,GAAIhF,UAAWoK,EAAQyM,UAClC,kBAAC1R,EAAA,EAAD,CAAYU,MAAO,SAAU5G,QAAS,MAAO,EAAK5B,MAAMK,QAE5D,kBAACoH,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,GACV,EAAK3H,MAAMyZ,uBACR,6BACI,kBAACtU,EAAA,EAAD,CAAYxD,QAAS,EAAKuX,gBACtB,kBAACQ,GAAA,EAAD,OAEA,kBAACzY,EAAA,EAAD,CACId,SAAUA,EACV8B,aAAW,EACXC,KAAMC,QAAQhC,GACdiC,QAAS,EAAK+W,gBACdhY,mBAAoB,KACpBC,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,UAGhB,kBAACsB,EAAA,EAAD,CAAUjB,QAAS,EAAKwX,gBAAiBvY,MAAO,uBAC3C/B,EAAKqH,EAAE,iCAMhC,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAW3a,EAAKqH,EAAE,uBAAvD,KACA,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UACjC,kBAACtM,GAAA,EAAD,CACItM,MAAOqK,EAAQhD,UACfiE,KAAM,YACNmB,SAAU,EAAKyL,gBACfhB,MAAOpB,KAGf,kBAACjP,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAW3a,EAAKqH,EAAE,sBAAvD,KACA,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UACjC,kBAACtM,GAAA,EAAD,CACItM,MAAOqK,EAAQ/C,SACfgE,KAAM,WACNmB,SAAU,EAAKyL,gBACfhB,MAAOlB,KAGf,kBAACnP,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAW3a,EAAKqH,EAAE,mBAAvD,KACA,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UACjC,kBAACtM,GAAA,EAAD,CACItM,MAAOqK,EAAQN,MACfuB,KAAM,QACNiC,SAAUwK,EACVtL,SAAU,EAAKyL,gBACfhB,MAAO/B,KAGf,kBAACtO,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAW3a,EAAKqH,EAAE,0BAAvD,KACA,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UACjC,kBAACtM,GAAA,EAAD,CACItM,MAAOqK,EAAQH,YAAcG,EAAQH,YAAc,GACnDoB,KAAM,cACNmB,SAAU,EAAKyL,gBACfhB,MAAOc,KAGf,kBAACnR,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAW3a,EAAKqH,EAAE,kBAAvD,KACA,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UACjC,kBAAClE,GAAA,EAAD,CACI1U,MAAOqK,EAAQC,KACfkC,WAAS,EACTlB,KAAM,OACNmB,SAAU,EAAKyL,gBACf3K,SAAUuK,GAEV,kBAAC9V,EAAA,EAAD,CAAUhC,MAAO,GAAI/B,EAAKqH,EAAE,0BAC5B,kBAACtD,EAAA,EAAD,CAAUhC,MAAO,GAAI/B,EAAKqH,EAAE,4BAGnCiF,GACD,kBAAC1D,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAW3a,EAAKqH,EAAE,qBAAvD,KACA,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UACjC,kBAACtM,GAAA,EAAD,CACItM,MAAOuK,EAAeE,QAAUF,EAAeE,QAAU,GACzDa,KAAM,UACNmB,SAAU,EAAKyL,mBAGvB,kBAACrR,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAW3a,EAAKqH,EAAE,sBAAvD,KACA,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UACjC,kBAACtM,GAAA,EAAD,CACItM,MAAOuK,EAAeG,QAAUH,EAAeG,QAAU,GACzDY,KAAM,UACNmB,SAAU,EAAKyL,gBACfhB,MAAOe,KAGf,kBAACpR,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAW3a,EAAKqH,EAAE,kBAAvD,KACA,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UACjC,kBAACtM,GAAA,EAAD,CACItM,MAAOuK,EAAeK,KAAOL,EAAeK,KAAO,GACnDU,KAAM,OACNmB,SAAU,EAAKyL,mBAGvB,kBAACrR,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAW3a,EAAKqH,EAAE,qBAAvD,KACA,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UACjC,kBAACtM,GAAA,EAAD,CACItM,MAAOuK,EAAeM,QAAUN,EAAeM,QAAU,GACzDS,KAAM,UACNmB,SAAU,EAAKyL,oBAK3B,kBAACrR,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,gBACrB,kBAACvG,EAAA,EAAD,CAAQI,QAAS,YAAaC,MAAO,UAAWF,QAAS,EAAKgY,oBACzD9a,EAAKqH,EAAE,qBAEZ,kBAAC1E,EAAA,EAAD,CAAQI,QAAS,YAAaC,MAAO,UAAWF,QAAS,EAAKiY,mBAAoBzL,SAAUsI,GACvF5X,EAAKqH,EAAE,2B,EAU5B0T,mBAAqB,WAAO,IACjB3O,EAAW,EAAKpH,MAAhBoH,QACHD,GAAuBC,KACvB,EAAKjL,MAAM6Z,gBAAgB5O,GAC3B,EAAK9G,SAAS,CAACsS,gBAAgB,M,EAIvCkD,mBAAqB,WACjB,EAAK3Z,MAAM8Z,gB,kEAIXrV,KAAKN,SAAS,CACV8G,QAASxG,KAAKzE,MAAMiL,QACpByN,mBAAoBjU,KAAKzE,MAAM0Y,mBAC/BC,oBAAqBlU,KAAKzE,MAAM2Y,wB,+BAKpC,OAAOlU,KAAK6U,2B,GAzRSrZ,IAAMqF,WA6RnCkT,GAAeH,SAAW,CACtBpN,QAAS3H,IAAUyW,OAAOvW,WAC1BqW,gBAAiBvW,IAAUG,KAAKD,WAChCsW,aAAcxW,IAAUG,KAAKD,WAC7BkV,mBAAoBpV,IAAUiC,KAAK/B,WACnCmV,oBAAqBrV,IAAUiC,KAAK/B,WACpCnD,MAAOiD,IAAUI,OAAOF,WACxBiW,sBAAuBnW,IAAUiC,KACjC8T,eAAgB/V,IAAUG,MAGf3C,oBAzTA,SAAAsN,GAAM,MAAK,CACtB4L,KAAM,CACF3L,QAAS,OACTC,OAAQ,OACRC,SAAU,QACVC,UAAW,mCAEfgL,SAAU,CACNtE,UAAW,OACXS,aAAc,QAElB4D,cAAe,CAEXU,SAAU,YA4SHnZ,CAAmB0X,IClS5B0B,G,4MAEFrW,MAAQ,CACJoH,QAAS,KACTwN,eAAe,EACfC,oBAAoB,EACpBjC,gBAAgB,EAChBC,gBAAgB,EAChBE,eAAe,EACfgC,kBAAkB,EAClBC,cAAc,EACd1Y,SAAU,M,EA0Bdga,sBAAwB,WACpB,EAAKhW,SAAS,CAACsU,eAAe,K,EAGlC2B,mBAAqB,WACjB,EAAKjW,SAAS,CAACsU,eAAc,K,EAGjC4B,qBAAuB,WACnB,EAAKra,MAAM8M,QAAQjG,KAAK,8B,EAG5ByT,iBAAmB,SAACrP,GAChB,EAAK9G,SAAS,CAACsS,gBAAgB,IAC/B,IAAI8D,EAAiBtP,EAIrB,GAHmC,OAA/BsP,EAAezP,aAAuD,KAA/ByP,EAAezP,cACtDyP,EAAc,2BAAOA,GAAP,IAAuBzP,YAAa,QAElDyP,EAAepP,eAAgB,CAC/B,IAAIC,EAAKmP,EAAepP,eACL,KAAfC,EAAGC,UAAgBD,EAAE,2BAAOA,GAAP,IAAWC,QAAS,QAC1B,KAAfD,EAAGE,UAAgBF,EAAE,2BAAOA,GAAP,IAAWE,QAAS,QAC7B,KAAZF,EAAGI,OAAaJ,EAAE,2BAAOA,GAAP,IAAWI,KAAM,QACpB,KAAfJ,EAAGK,UAAgBL,EAAE,2BAAOA,GAAP,IAAWK,QAAS,QAEzC8O,EADe,OAAfnP,EAAGC,SAAmC,OAAfD,EAAGE,SAAgC,OAAZF,EAAGI,MAAgC,OAAfJ,EAAGK,QACvD,2BAAO8O,GAAP,IAAuBpP,eAAgB,OAEvC,2BAAOoP,GAAP,IAAuBpP,eAAgBC,IAG7D,EAAKoP,cAAcD,I,EAGvBE,eAAiB,WAAO,IACbxP,EAAW,EAAKpH,MAAhBoH,QACHE,EAAiB,KACjBF,IAASE,EAAiBF,EAAQE,gBAHnB,IAIZ4B,EAAW,EAAK/M,MAAhB+M,QACP,OACI,6BACK9B,GACD,kBAACxD,EAAA,EAAD,CAAMC,WAAS,EAAC/E,UAAWoK,EAAQwM,eAC/B,kBAAC9R,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,GAAIhF,UAAWoK,EAAQyM,UAClC,kBAAC1R,EAAA,EAAD,CAAYU,MAAO,SAAU5G,QAAS,MAAO/C,EAAKqH,EAAE,0BAExD,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAW3a,EAAKqH,EAAE,uBAAvD,KACA,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAWvO,EAAQhD,WACxD,kBAACR,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAW3a,EAAKqH,EAAE,sBAAvD,KACA,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAWvO,EAAQ/C,UACxD,kBAACT,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAW3a,EAAKqH,EAAE,mBAAvD,KACA,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAWvO,EAAQN,OACxD,kBAAClD,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAW3a,EAAKqH,EAAE,0BAAvD,KACA,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAWvO,EAAQH,aACxD,kBAACrD,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAW3a,EAAKqH,EAAE,kBAAvD,KACA,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UACf,IAAjBvO,EAAQC,KAAarM,EAAKqH,EAAE,yBAA2BrH,EAAKqH,EAAE,0BAElEiF,GACD,kBAAC1D,EAAA,EAAD,CAAMC,WAAS,GACf,kBAACD,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAW3a,EAAKqH,EAAE,qBAAvD,KACA,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAWrO,EAAeE,SAC/D,kBAAC5D,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAW3a,EAAKqH,EAAE,sBAAvD,KACA,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAWrO,EAAeG,SAC/D,kBAAC7D,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAW3a,EAAKqH,EAAE,kBAAvD,KACA,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAWrO,EAAeK,MAC/D,kBAAC/D,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAW3a,EAAKqH,EAAE,qBAAvD,KACA,kBAACuB,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,EAAGhF,UAAWoK,EAAQyM,UAAWrO,EAAeM,UAG/D,kBAAChE,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,UACrB,kBAACvG,EAAA,EAAD,CAAQI,QAAS,YAAaC,MAAO,UAAWF,QAAS,EAAKwY,uBACzDtb,EAAKqH,EAAE,yB,8LA7FVqG,GAAmBA,I,OAA/BmO,E,OACNjW,KAAKN,SAAS,CAAC8G,QAASyP,EAAKhC,mBAAoBgC,EAAIxP,KAAO,I,qLAE5CqP,G,wFACEhO,GAAmBA,GAA8BgO,G,OAA7DG,E,OACNjW,KAAKN,SAAS,CACV8G,QAASyP,EACTjC,eAAe,EACfC,mBAAoBgC,EAAIxP,KAAO,EAC/BuL,gBAAgB,EAChBC,gBAAgB,EAChBE,eAAe,EACfgC,kBAAkB,EAClBC,cAAc,IAElB8B,GAAWC,oBAAoBF,EAAIzS,UAAWyS,EAAIxS,SAAuB,IAAbwS,EAAIxP,M,iJAIhEzG,KAAKoW,e,+BAmFC,IACC9N,EAAWtI,KAAKzE,MAAhB+M,QADF,EAEgDtI,KAAKZ,MAAnD4U,EAFF,EAEEA,cAAeC,EAFjB,EAEiBA,mBAAoBzN,EAFrC,EAEqCA,QAC1C,OACI,kBAACxD,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,UACrB,kBAACM,GAAA,EAAD,CAAM1F,UAAWoK,EAAQiN,MACpBvB,EACG,kBAAC,GAAD,CACIpY,MAAOxB,EAAKqH,EAAE,6BACd+E,QAASA,EACT4O,gBAAiBpV,KAAK6V,iBACtBR,aAAcrV,KAAK2V,mBACnB1B,mBAAoBA,EACpBC,qBAAqB,EACrBc,uBAAqB,EACrBJ,eAAgB5U,KAAK4V,uBAGzB5V,KAAKgW,uB,GAvILxa,IAAMqF,WA8IfxE,gBApKA,SAAAsN,GAAM,MAAK,CACtB4L,KAAM,CACF3L,QAAS,OACTC,OAAQ,OACRC,SAAU,QACVC,UAAW,mCAEfgL,SAAU,CAGNtE,UAAW,OACXS,aAAc,QAIlB4D,cAAe,CAEXU,SAAU,YAmJHnZ,CAAmB2N,YAAWyL,K,UCpKvCY,GAAYC,aAAW,CACzB/N,KAAM,CACFqB,QAAS,OACTC,OAAQ,OACRC,SAAU,QACVC,UAAW,mCAEf+K,cAAe,CACXU,SAAU,SAEdT,SAAU,CACNtE,UAAW,OACXS,aAAc,UAIP,SAASqF,GAAWhb,GAC/B,IAAM+M,EAAU+N,KADsB,EAGd5a,mBAAS,MAHK,mBAG/B4U,EAH+B,KAGzBmG,EAHyB,OAIV/a,mBAAS,IAJC,mBAI/BqU,EAJ+B,KAIvB2G,EAJuB,OAKFhb,mBAAS,IALP,mBAK/Bib,EAL+B,KAKnBC,EALmB,OAMNlb,mBAAS,MANH,mBAM/Bmb,EAN+B,KAMrBC,EANqB,OAOFpb,mBAAS,CAAC2D,OAAO,EAAO0X,UAAW,YAPjC,mBAO/BC,EAP+B,KAOnBC,EAPmB,mDAStC,WAA8BhS,GAA9B,gBAAAF,EAAA,sEACsBgD,GAAoBA,GAAgC9C,GAD1E,QACUkD,EADV,SAEelD,EAAKzH,KAAO,GAAG2K,EAAI3K,IAC1BiZ,EAAQtO,GAHhB,4CATsC,oEAgBtC,WAAiClD,GAAjC,kBAAAF,EAAA,sEACsBgD,GAAmBA,GAAkC9C,GAD3E,OACUkD,EADV,OAEU+O,EAAiB,CACnB7X,OAAQ2X,EAAW3X,MACnB0X,UAAWF,EAAW,UAAY,YAClCM,sBAAuBN,EAAW,QAAU,MAE5C1O,GAAsB,OAAfA,EAAIoF,QAAmBpF,EAAIsF,SAClCgJ,EAAQtO,EAAIsF,SACZmJ,EAAc7G,GACd2G,EAAUjR,KAAK2R,MAAMjP,EAAI4H,SACzB+G,GAAY,IACL3O,GAAsB,QAAfA,EAAIoF,QAAoBpF,EAAI4H,SAC1C6G,EAAc7G,GACd2G,EAAUjR,KAAK2R,MAAMjP,EAAI4H,SACzB+G,GAAY,IAEhBG,EAAcC,GAjBlB,4CAhBsC,sBAoCtC,IAAMG,EAAkB,IAAIpH,gBAAgBqH,cAAclQ,QACpD5J,EAAK6Z,EAAgBnH,IAAI,MACzB9B,EAAciJ,EAAgBnH,IAAI,eAClClC,EAAeqJ,EAAgBnH,IAAI,gBAEzCqH,qBAAU,WACF/Z,GA1C8B,oCA0C1Bga,CAAe,CAACha,GAAGA,MAC7B,CAACA,IAGH,IAoBM8K,EAAUmP,cAwChB,OACI,kBAACxU,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,UACrB,kBAACM,GAAA,EAAD,CAAM1F,UAAWoK,EAAQC,MACpB8H,GACD,kBAAC,GAAD,CACIzU,MAAOxB,EAAKqH,EAAE,6BACd+E,QAAS6J,EACT+E,gBAnEa,SAACpQ,GAC1B,IAAI8Q,EAAiB9Q,EAIrB,GAHmC,OAA/B8Q,EAAezP,aAAuD,KAA/ByP,EAAezP,cACtDyP,EAAc,2BAAOA,GAAP,IAAuBzP,YAAa,QAElDyP,EAAepP,eAAgB,CAC/B,IAAIC,EAAKmP,EAAepP,eACL,KAAfC,EAAGC,UAAgBD,EAAE,2BAAOA,GAAP,IAAWC,QAAS,QAC1B,KAAfD,EAAGE,UAAgBF,EAAE,2BAAOA,GAAP,IAAWE,QAAS,QAC7B,KAAZF,EAAGI,OAAaJ,EAAE,2BAAOA,GAAP,IAAWI,KAAM,QACpB,KAAfJ,EAAGK,UAAgBL,EAAE,2BAAOA,GAAP,IAAWK,QAAS,QAEzC8O,EADe,OAAfnP,EAAGC,SAAmC,OAAfD,EAAGE,SAAgC,OAAZF,EAAGI,MAAgC,OAAfJ,EAAGK,QACvD,2BAAO8O,GAAP,IAAuBpP,eAAgB,OAEvC,2BAAOoP,GAAP,IAAuBpP,eAAgBC,KA5D3B,oCA+DlC8Q,CAAkB3B,IAmDNT,aA9CW,WACnBlH,GAAeJ,EACf1F,EAAQjG,KAAK,gCAAkC+L,EAAc,iBAAmBJ,GAEhF1F,EAAQqP,UA2CAzD,oBAAoB,EACpBC,qBAAqB,EACrBc,uBAAqB,EACrBJ,eA3Ca,WACrBvE,GAAQA,EAAK9S,IACb8K,EAAQjG,KAAK,4BAA8BiO,EAAK9S,OAMhD,kBAACyF,EAAA,EAAD,CAAM9E,UAAWoK,EAAQyM,UACrB,kBAAC5T,EAAA,EAAD,CAAOE,UAAWuV,EAAW,OAAS,QAASrV,QAAS,IAAMD,GAAIyV,EAAW3X,OACzE,kBAACiE,EAAA,EAAD,CACIU,MAAO,SACP5G,QAAS4Z,EAAW3X,MAASwX,EAAW,QAAU,KAAQG,EAAWG,sBACrE9Z,MAAO2Z,EAAW3X,MAASwX,EAAW,UAAY,YAAeG,EAAWD,WAE3EC,EAAW3X,MAAQhF,EAAKqH,EAAEqO,EAAO7R,KAAO7D,EAAKqH,EAAEiV,EAAWzY,OAGnE,kBAACkD,EAAA,EAAD,CAAOE,UAAWuV,EAAW,OAAS,QAASrV,QAAS,IAAMD,IAAKyV,EAAW3X,OAC1E,kBAACiE,EAAA,EAAD,CACIU,MAAO,SACP5G,QAAU4Z,EAAW3X,MAAsC2X,EAAWG,sBAAxCN,EAAW,QAAU,KACnDxZ,MAAQ2Z,EAAW3X,MAA+C2X,EAAWD,UAAjDF,EAAW,UAAY,aAEjDG,EAAW3X,MAA6BhF,EAAKqH,EAAEiV,EAAWzY,KAAvC7D,EAAKqH,EAAEqO,EAAO7R,UC/G3D,IAmBM0Z,G,4MACFvY,MAAQ,CACJwY,YAAa,KACbC,kBAAkB,EAClBC,YAAa,GACbC,iBAAiB,EACjBC,aAAa,EACbC,iBAAkB,GAClBC,YAAa,GACbC,iBAAiB,EACjBC,aAAa,EACbC,iBAAkB,GAClBC,mBAAoB,GACpBC,oBAAoB,EACpBC,wBAAyB,GACzBxG,gBAAgB,EAChByG,iBAAiB,EACjBC,cAAe,KACfC,eAAe,EACfC,YAAa,EACbC,iBAAiB,G,EA0BrBC,mBAAqB,WACjB,EAAKvd,MAAM8M,QAAQqP,U,EAGvBxE,aAAe,WACX,EAAKxT,SAAS,CAAC+Y,iBAAiB,EAAMC,cAAe,Q,EAGzDK,2BAA6B,WAAO,IAAD,EACuD,EAAK3Z,MAApFwY,EADwB,EACxBA,YAAaC,EADW,EACXA,iBAAkBC,EADP,EACOA,YAAaI,EADpB,EACoBA,YAAaI,EADjC,EACiCA,mBAChE,EAAK5Y,SAAS,CAAC+Y,iBAAiB,EAAOzG,gBAAgB,IACvD,IAAMhN,EAAO,CACT4S,YAAaA,EACbC,iBAAkBA,EAClBC,YAAaA,EACbI,YAAaA,EACbI,mBAAoBA,GAExB,EAAKzQ,QAAQ7C,I,EAGjByF,eAAiB,WACb,EAAK/K,SAAS,CAAC+Y,iBAAkB,K,EAGrCO,2BAA6B,WAAO,IACzBjB,EAAmB,EAAK3Y,MAAxB2Y,gBACP,EAAKrY,SAAS,CAACqY,iBAAkBA,K,EAGrCkB,2BAA6B,WAAO,IACzBd,EAAmB,EAAK/Y,MAAxB+Y,gBACP,EAAKzY,SAAS,CAACyY,iBAAkBA,K,EAGrCe,sBAAwB,YAA8B,IAAD,IAA3B1Z,OAASiI,EAAkB,EAAlBA,KAAMtL,EAAY,EAAZA,MAAY,EACsB,EAAKiD,MAAvEyY,EAD4C,EAC5CA,iBAAkBC,EAD0B,EAC1BA,YAAaI,EADa,EACbA,YAAaI,EADA,EACAA,mBACpC,gBAAT7Q,GACAqQ,EAAc3b,EACVA,EAAMmK,QAAU,EAChB,EAAK5G,SAAU,CAACoY,YAAa3b,EAAO6b,aAAa,EAC7CC,iBAAkB7d,EAAKqH,EAAE,uCAE7B,EAAK/B,SAAU,CAACoY,YAAa3b,EAAO6b,aAAa,EAC7CC,iBAAkB,MAEV,gBAATxQ,GACPyQ,EAAc/b,EACd,EAAKuD,SAAS,CAACkZ,YAAa3R,GAAciR,KACtC/b,EAAMmK,QAAU,EAChB,EAAK5G,SAAS,CAACwY,YAAa/b,EAAOic,aAAa,EAC5CC,iBAAkBje,EAAKqH,EAAE,uCAE7B,EAAK/B,SAAS,CAACwY,YAAa/b,EAAOic,aAAa,EAC5CC,iBAAkB,KAEtBC,IAAuBnc,EACvB,EAAKuD,SAAS,CAAC6Y,oBAAoB,EAC/BC,wBAAyBpe,EAAKqH,EAAE,8CAEpC,EAAK/B,SAAS,CAAC6Y,oBAAoB,EAAOC,wBAAyB,MAEvD,uBAAT/Q,IACP6Q,EAAqBnc,EACjB+b,IAAgB/b,EAChB,EAAKuD,SAAS,CAAC4Y,mBAAoBnc,EAAOoc,oBAAoB,EAC1DC,wBAAyB,KAE7B,EAAK9Y,SAAS,CAAC4Y,mBAAoBnc,EAAOoc,oBAAoB,EAC1DC,wBAAyBpe,EAAKqH,EAAE,+CAGxCoW,IACIC,IAAgBI,EAChB,EAAKxY,SAAU,CAACsY,aAAa,EACzBC,iBAAkB7d,EAAKqH,EAAE,4CACtBqW,GAAeA,EAAYxR,QAAU,EAC5C,EAAK5G,SAAU,CAACsY,aAAa,EACzBC,iBAAkB7d,EAAKqH,EAAE,uCAE7B,EAAK/B,SAAU,CAACsY,aAAa,EACzBC,iBAAkB,MAG9B,EAAKvY,SAAS,CAACsS,gBAAiB,EAAKmH,aAAatB,EAAkBC,EAAaI,EAAaI,M,EAclGc,gBAAkB,WACd,EAAK1Z,SAAS,CAACmZ,iBAAiB,K,EAGpCQ,eAAiB,WACb,EAAK3Z,SAAS,CAACmZ,iBAAiB,K,EAGpCS,sBAAwB,WAAO,IAAD,EACK,EAAK/d,MAA7B+M,EADmB,EACnBA,QAASiR,EADU,EACVA,YADU,EAOtB,EAAKna,MALFwY,EAFmB,EAEnBA,YAAaa,EAFM,EAENA,gBAChBX,EAHsB,EAGtBA,YAAaC,EAHS,EAGTA,gBAAiBC,EAHR,EAGQA,YAAaC,EAHrB,EAGqBA,iBAC3CE,EAJsB,EAItBA,gBAAiBD,EAJK,EAILA,YAAaE,EAJR,EAIQA,YAAaC,EAJrB,EAIqBA,iBAC3CC,EALsB,EAKtBA,mBAAoBC,EALE,EAKFA,mBAAoBC,EALlB,EAKkBA,wBACxCxG,EANsB,EAMtBA,eAAgB0G,EANM,EAMNA,cAAeC,EANT,EAMSA,cAAeC,EANxB,EAMwBA,YAAaC,EANrC,EAMqCA,gBAE/D,OACI,6BACI,kBAAC7V,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,GAAIhF,UAAWoK,EAAQyM,UAClC,kBAAC1R,EAAA,EAAD,CAAYU,MAAO,SAAU3G,MAAO,UAAYD,QAAS,MACpD/C,EAAKqH,EAAE,oCAGA,MAAfmW,GAAuB2B,GACxB,kBAACvW,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,GAAIhF,UAAWoK,EAAQyM,UAClC,kBAACtM,GAAA,EAAD,CACIU,KAAM4O,EAAkB,OAAQ,WAChC1E,MAAO2E,EACPtP,MAAOtO,EAAKqH,EAAE,2BACd6R,WAAY2E,EACZrP,SAAU,EAAKsQ,sBACf/c,MAAO2b,EACPrQ,KAAM,cACNkB,WAAS,EACT8K,WAAY,CACRrK,aAAc,kBAACC,GAAA,EAAD,CAAgBhK,SAAS,OACnC,kBAACqB,EAAA,EAAD,CACIxD,QAAS,EAAK8b,2BACdzP,UAAW,GAEVwO,EAAkB,kBAACvO,GAAA,EAAD,MAAiB,kBAACC,GAAA,EAAD,YAOxD,yBAAK+J,QAAS,EAAK4F,gBAAiB7F,OAAQ,EAAK8F,gBAC7C,kBAACrW,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,GAAIhF,UAAWoK,EAAQyM,UAClC,kBAACtM,GAAA,EAAD,CACIU,KAAMgP,EAAkB,OAAQ,WAChC9E,MAAO+E,EACP1P,MAAOtO,EAAKqH,EAAE,+BACd6R,WAAY+E,EACZzP,SAAU,EAAKsQ,sBACf/c,MAAO+b,EACPzQ,KAAM,cACNkB,WAAS,EACT8K,WAAY,CACRrK,aAAc,kBAACC,GAAA,EAAD,CAAgBhK,SAAS,OACnC,kBAACqB,EAAA,EAAD,CACIxD,QAAS,EAAK+b,2BACd1P,UAAW,GAEV4O,EAAkB,kBAAC3O,GAAA,EAAD,MAAiB,kBAACC,GAAA,EAAD,WAKpD,kBAACtI,EAAA,EAAD,CAAOG,GAAIuX,EAAiBxX,UAAW,OAAQE,QAAS,KACpD,yBAAKrD,UAAWoK,EAAQkR,UACpB,kBAACrI,GAAD,CAAUC,SAAUwH,QAKpC,kBAAC5V,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,GAAIhF,UAAWoK,EAAQyM,UAClC,kBAACtM,GAAA,EAAD,CACIU,KAAMgP,EAAkB,OAAQ,WAChC9E,MAAOkF,EACP7P,MAAOtO,EAAKqH,EAAE,uCACd6R,WAAYkF,EACZ5P,SAAU,EAAKsQ,sBACf/c,MAAOmc,EACP7Q,KAAM,qBACNkB,WAAS,EACT8K,WAAY,CACRrK,aAAc,kBAACC,GAAA,EAAD,CAAgBhK,SAAS,OACnC,kBAACqB,EAAA,EAAD,CACIxD,QAAS,EAAK+b,2BACd1P,UAAW,GAEV4O,EAAkB,kBAAC3O,GAAA,EAAD,MAAiB,kBAACC,GAAA,EAAD,YAMxD,kBAACzG,EAAA,EAAD,CAAM5E,MAAI,EAAC8E,GAAI,IACX,kBAACF,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,iBACrB,kBAACvG,EAAA,EAAD,CAAQI,QAAS,YAAaC,MAAO,UAAWF,QAAS,EAAK4b,oBACzD1e,EAAKqH,EAAE,0BAEZ,kBAAC1E,EAAA,EAAD,CAAQI,QAAS,YAAaC,MAAO,YAAasM,SAAUsI,EAAgB9U,QAAS,EAAKgW,cACrF9Y,EAAKqH,EAAE,4BAInBgX,GACD,kBAAClO,GAAD,CACIC,YAAa,EAAKuO,2BAClBtO,eAAgB,EAAKA,eACrBC,OAAQtQ,EAAKqH,EAAE,qDAGnB,kBAACN,EAAA,EAAD,CAAOE,UAAWsX,EAAgB,OAAS,QAASrX,GAAsB,OAAlBoX,EAAwBnX,QAAS,KACrF,kBAAC8B,EAAA,EAAD,CAAYjG,MAAOub,EAAgB,UAAY,YAAa5U,MAAO,SAAU5G,QAAS,MACjFub,M,kEA7OjB,IAAM9W,EAAW5B,KAAKzE,MAAMqG,SACtBrE,EAAM,IAAIyS,gBAAgBpO,EAASuF,QAAS8I,IAAI,MACtDjQ,KAAKN,SAAS,CAACkY,YAAara,EAAIsa,iBAAyB,OAAPta,M,yEAGxCyH,G,8FACM8C,GAAmBA,GAA8B9C,G,OACjE,GADIkD,E,OACK,CACCuR,EAAsB,OAAfvR,EAAIoF,OAEjB,IACUoM,EAAalU,KAAK2R,MAAMjP,EAAI4H,QAClCA,EAAS1V,EAAKqH,EAAEiY,EAAWzb,KAC7B,MAAO0b,GACL7J,EAAS1V,EAAKqH,EAAE,gCAEpBzB,KAAKN,SAAS,CAACiZ,cAAec,EAAMf,cAAe5I,SAEnD9P,KAAKN,SAAS,CAACgZ,cAAe,O,0IA2FzBb,EAAkBC,EAAaI,EAAaI,GACrD,QAAMT,GAAqBC,EAAYxR,OAAS,GAAKwR,IAAgBI,IACjEA,EAAY5R,OAAS,GACrB4R,IAAgBI,I,+BAoId,IACChQ,EAAWtI,KAAKzE,MAAhB+M,QACP,OACI,kBAACtF,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,UACrB,kBAACM,GAAA,EAAD,CAAM1F,UAAWoK,EAAQC,MACpBvI,KAAKsZ,8B,GAjRG9d,IAAMqF,WAuRnC8W,GAAe/Y,UAAY,CACvB2a,YAAa1a,IAAUiC,KAAK/B,YAGjB1C,oBA9SA,SAAAsN,GAAM,MAAK,CACtBpB,KAAM,CACFqB,QAAS,OACTC,OAAQ,OACRC,SAAU,QACVC,UAAW,mCAEf+K,cAAe,CACXU,SAAU,SAEdT,SAAU,CACNtE,UAAW,OACXS,aAAc,QAElBsI,SAAU,CACN/I,UAAW,UA+RJpU,CAAmB2N,YAAW2N,K,mBCtT9B,SAASiC,GAAere,GAAQ,IAAD,EAClBC,IAAMC,SAASF,EAAMkC,MADH,mBACnCA,EADmC,KAC7Boc,EAD6B,KAIpC9d,EAAc,SAACC,EAAO8T,GAMxB+J,GAAQ,GACJte,EAAMue,UAAUve,EAAMue,YAG9B,OACI,6BACI,kBAACC,GAAA,EAAD,CACIpd,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBY,KAAMA,EAGNJ,YAAatB,EACbie,QAASze,EAAMye,QACf3K,OACI,kBAAC,IAAMxM,SAAP,KACI,kBAAC9F,EAAA,EAAD,CAAQK,MAAM,YAAYgG,KAAK,QAAQlG,QAASnB,GAAhD,eAGA,kBAAC2E,EAAA,EAAD,CAAY0C,KAAK,QAAQkG,aAAW,QAAQlM,MAAM,UAAUF,QAASnB,GACjE,kBAACuT,GAAA,EAAD,CAAW9Q,SAAS,eC/BjC,SAASyb,GAAmB1e,GAAQ,IAAD,EAEpBE,mBAAS,MAFW,mBAEvCye,EAFuC,KAEhCC,EAFgC,KAe9C,SAASC,EAAelf,EAAImf,GACxBC,QAAQC,IAAI,iFACZC,YAAW,WACHtf,EAAGuf,QAAUvf,EAAGuf,OAAOnU,SAAW+T,EAAKjX,KAQnD,SAAuB4B,EAAMqV,GACzBC,QAAQC,IAAI,gFACZD,QAAQC,IAAIF,GACZC,QAAQC,IAAIvV,GAVJ0V,CAAcxf,EAAGuf,OAAQJ,GAEzBD,EAAelf,EAAImf,KAExB,GAgBP,OACI,6BACI,2BAAOlR,KAAM,OAAQP,SAPP,SAAC5M,GACnBse,QAAQC,IAAIve,EAAMwD,OAAO0a,OACzBC,EAASne,EAAMwD,OAAO0a,QAK4BnO,UAAQ,IACtD,4BAAQ7O,QAtChB,WACI,GAAIgd,GAASA,EAAM5T,OAAS,EACxB,IAAK,IAAIqU,EAAI,EAAGA,EAAIT,EAAM5T,OAAQqU,IAAK,CACnC,IAAMN,EAAOH,EAAM9b,KAAKuc,GACpBzf,EAAK,IAAI0f,WACb1f,EAAG2f,mBAAmBR,GACtBD,EAAelf,EAAImf,MAgCvB,WCtCZ,IAAMhE,GAAYC,aAAW,CACzBf,KAAM,CACF3L,QAAS,OACT6G,UAAW,OACX3G,SAAU,QACVC,UAAW,mCAEfwG,QAAS,CACLuK,UAAW,OACX5J,aAAc,UAIP,SAAS6J,KAAY,IAAD,EAEetf,mBAAS,IAFxB,mBAExBuf,EAFwB,KAEPC,EAFO,OAGSxf,oBAAS,GAHlB,mBAGxByf,EAHwB,KAGVC,EAHU,KASzBnO,EAAuB,SAAChI,GACrBA,aAAgByH,OACjBwO,EAAmB,qBAAuBjW,EAAKoC,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,EAAI1L,MAAQ,OAAM,aAC5Fuf,GAAgB,IACTnW,aAAgBoW,SACvBH,EAAmB,sBAAwBjW,EAAKpJ,OAChDuf,GAAgB,KAIxB,OACI,kBAACnY,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAS,UACjB,kBAACM,GAAA,EAAD,CAAM1F,UAAWmY,KAAYd,MACzB,kBAAClS,EAAA,EAAD,CAAYlG,QAAS,KAAMC,MAAO,YAAa2G,MAAO,UAAtD,YACA,kBAACwH,GAAD,CACIE,aAAc,CAACwB,GAAO,IACtBpR,QAASoR,GACTrE,SAAUoE,EACVjB,UAAU,EACVrD,MAAO,uBAEX,kBAACjI,EAAA,EAAD,CAASvC,UAAWmY,KAAY9F,UAChC,kBAAChF,GAAD,CACIE,aAAcwB,GAAO,GACrBpR,QAASoR,GACTrE,SAAUoE,EACVjB,UAAU,EACVrD,MAAO,qBAEX,kBAACjI,EAAA,EAAD,CAASvC,UAAWmY,KAAY9F,UAChC,kBAAC0J,GAAD,OAEPiB,GAAgB,kBAAC,GAAD,CAAgBzd,KAAMyd,EAAclB,QAASgB,EAAiBlB,SApC1D,WACzBqB,GAAgB,OAwCxB,IAAMlO,GAAS,CACX,CAAErR,MAAO,QAASiL,QAAS,SAC3B,CAAEjL,MAAO,UAAWiL,QAAS,SAC7B,CAAEjL,MAAO,UAAWiL,QAAS,SAC7B,CAAEjL,MAAO,aAAciL,QAAS,SAChC,CAAEjL,MAAO,eAAgBiL,QAAS,UCkEvBqP,G,kDAzHX,WAAY3a,GAAQ,IAAD,8BACf,cAAMA,IAGV6D,MAAQ,CACJ8C,WAAY,CACRC,MAAO,KACPqB,UAAW,GACXC,SAAU,GACVhB,QAAQ,IATG,EAmBnB0F,WAAa,SAAChG,EAAOqB,EAAWC,EAAUhB,GACtCyC,eAAetF,QAAQkI,GAA+C3F,GACtE+C,eAAetF,QjBzBsC,2BiByB2B4F,KAAKC,UAAU,CAAC,UAAajC,EAAW,SAAYC,KACpIyB,eAAetF,QjBzByB,mBiByB2B6C,GACnE,IAAM4Y,EAAY,CACdlZ,MAAOA,EACPqB,UAAWA,EACXC,SAAUA,EACVhB,OAAQA,GAEZ,EAAK/C,SAAS,CAACwC,WAAYmZ,IAC3BrgB,OAAOsgB,sBAAuB,EAC9BtgB,OAAOugB,wBA/BQ,EAkCnBrR,YAAc,WAEV,GADqB,EAAK9K,MAAnB8C,WACQC,MAAO,CAClB+C,eAAesW,WAAW1T,IAC1B5C,eAAesW,WjBzCqB,oBiB0CpCtW,eAAesW,WjB3CkC,4BiBkDjD,EAAK9b,SAAS,CAACwC,WANG,CACdC,MAAO,KACPqB,UAAW,GACXC,SAAU,GACVhB,QAAQ,OA1ChByT,EAAWC,oBAAuBD,EAAWC,oBAAoBsF,KAA/B,gBAFnB,E,gEAmDf,IAAMtZ,EAAQ+C,eAAenF,QAAQ+H,IACjCtE,EAAY,GACZC,EAAW,GACf,IACID,EAAYgC,KAAK2R,MAAMjS,eAAenF,QjB3DW,6BiB2DuDyD,UACxGC,EAAW+B,KAAK2R,MAAMjS,eAAenF,QjB5DY,6BiB4DsD0D,SACzG,MAAO4P,IACT,IAAI5Q,EAASyC,eAAenF,QjB7DY,oBiBmElCsb,EAAY,CACdlZ,MAAOA,EACPqB,UAAWA,EACXC,SAAUA,EACVhB,OARAA,EADW,SAAXA,GAWJzC,KAAKN,SAAS,CAACwC,WAAYmZ,M,+BAGrB,IACCnZ,EAAclC,KAAKZ,MAAnB8C,WACP,OACI,kBAAC,IAAD,KACI,kBAACJ,GAAD,CAAYI,WAAYA,IACxB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOwZ,OAAK,EAACC,KAAM,KACf,kBAAChY,GAAD,OAEJ,kBAAC,IAAD,CAAOgY,KAAM,UACT,kBAAC,GAAD,CAAYxT,WAAYnI,KAAKmI,cAEjC,kBAAC,IAAD,CAAOwT,KAAM,WACT,kBAAC,GAAD,CAAQzR,YAAalK,KAAKkK,eAE9B,kBAAC,IAAD,CAAOyR,KAAM,oBACRzZ,EAAWO,QAAU,kBAAC,GAAD,OAE1B,kBAAC,IAAD,CAAOkZ,KAAM,kBACT,kBAAC,GAAD,CAAcxT,WAAYnI,KAAKmI,cAEnC,kBAAC,IAAD,CAAOuT,OAAK,EAACC,KAAM,oBACdzZ,EAAWC,OAAS,kBAAC,GAAD,OAEzB,kBAAC,IAAD,CAAOuZ,OAAK,EAACC,KAAM,6BACdzZ,EAAWC,OAAS,kBAAC,GAAD,CAAgBoX,aAAW,KAEpD,kBAAC,IAAD,CAAOmC,OAAK,EAACC,KAAM,yBACdzZ,EAAWC,OAASD,EAAWO,QAAU,kBAAC,GAAD,CAAgB8W,aAAa,KAE3E,kBAAC,IAAD,CAAOmC,OAAK,EAACC,KAAM,gBACdzZ,EAAWC,OAASD,EAAWO,QAAU,kBAAC8T,GAAD,OAK9C,kBAAC,IAAD,CAAOoF,KAAM,SACRzZ,EAAWC,OAASD,EAAWO,QAAU,kBAACsY,GAAD,OAE9C,kBAAC,IAAD,KACI,6BAAK,qD,2CApGEvX,EAAWC,EAAUhB,GAC5CyC,eAAetF,QjBlBsC,2BiBkB2B4F,KAAKC,UAAU,CAAC,UAAajC,EAAW,SAAYC,KACpIyB,eAAetF,QjBlByB,mBiBkB2B6C,GACnEzC,KAAKN,SAAS,CAACwC,WAAW,2BAAKlC,KAAKZ,MAAM8C,YAAjB,IAA6BsB,UAAWA,EAAWC,SAAUA,EAAUhB,OAAQA,U,GAjBvFjH,IAAMqF,WCX/B+a,IAASC,OAEL,kBAAC,GAAD,MAEFla,SAASma,eAAe,W","file":"static/js/main.055c3e29.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\ni18n\n    .use(LanguageDetector)\n    .init({\n        debug: false,\n        //lng: \"en\",\n        fallbackLng: \"en\", // use en if detected lng is not available\n\n        keySeparator: false, // we do not use keys in form messages.welcome\n\n        interpolation: {\n            escapeValue: false // react already safes from xss\n        },\n\n        resources: {\n            en: {\n                translations: window.languageEn\n            },\n            fr: {\n                translations: window.languageFr\n            }\n        },\n        // have a common namespace used around the full app\n        ns: [\"translations\"],\n        defaultNS: \"translations\"\n    });\n\nexport default i18n;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport { Send as SendIcon, Drafts as DraftsIcon } from '@material-ui/icons';\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { withStyles } from '@material-ui/core/styles';\n\n\nexport default function SimpleMenu(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const {title, options, setAction} = props;\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n        //setAnchorEl(myRef);\n    };\n\n    const handleClose = (event) => {\n        setAnchorEl(null);\n        if (setAction && event.currentTarget.attributes.value) {\n            const value = event.currentTarget.attributes.value.value;\n            setAction(value);\n        }\n    };\n\n    const StyledMenu = withStyles({\n        paper: {\n            border: '1px solid #d3d4d5',\n        },\n    })((props) => (\n        <Menu\n            elevation={0}\n            getContentAnchorEl={null}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n            {...props}\n        />\n    ));\n    return (\n        <div>\n            <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} variant=\"contained\"\n                    color=\"primary\" onMouseDown={(event) => event.preventDefault()}>\n                {title}\n            </Button>\n            <StyledMenu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {options.map((option, index) => (\n                        option.linkTo ?\n                            <Link to={option.linkTo} key={index} className={'linkNoDecoration'} onClick={() => setAnchorEl(null)}>\n                                <MenuItem value={options.item}>\n                                    {option.iconMenu ? <ListItemIcon>{option.iconMenu}</ListItemIcon>\n                                        :\n                                        <ListItemIcon>\n                                            {index % 2 === 0 ? <DraftsIcon fontSize=\"small\"/> :\n                                                <SendIcon fontSize=\"small\"/>}\n                                        </ListItemIcon>\n                                    }\n                                    <ListItemText primary={option.item} />\n                                </MenuItem>\n                            </Link>\n                            :\n                            <MenuItem key={index} onClick={handleClose} value={option.item}>{option.item}</MenuItem>\n                    )\n                )}\n            </StyledMenu>\n        </div>\n    );\n}\n\nSimpleMenu.protoType = {\n    options: PropTypes.array.isRequired,\n    setAction: PropTypes.func,\n    title: PropTypes.string.isRequired,\n}","import React from 'react';\nimport {Drawer, IconButton, Divider} from \"@material-ui/core\";\nimport {List, ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {Link} from 'react-router-dom';\nimport {ArrowBackRounded, ArrowForwardRounded} from \"@material-ui/icons\";\n\nconst drawerSide = {left: 'left', right: 'right', localStorageItem: 'climbing_drawer1'}\n\nclass SimpleDrawer extends React.Component {\n    state = {\n        position: drawerSide.left,\n        openDrawer: false,\n    }\n\n    HandleDrawer= (event) => {\n        if (event.target.id === 'idToggleDrawerPosition'\n            ||\n            event.target.parentNode.id === 'idToggleDrawerPosition'\n            ||\n            event.target.parentNode.parentNode.id === 'idToggleDrawerPosition'\n            ||\n            event.target.parentNode.parentNode.parentNode.id ==='idToggleDrawerPosition') {\n            if (this.state.position === drawerSide.left) {\n                this.setState({position: drawerSide.right});\n                localStorage.setItem(drawerSide.localStorageItem, drawerSide.right);\n            } else {\n                this.setState({position : drawerSide.left});\n                localStorage.setItem(drawerSide.localStorageItem, drawerSide.left);\n            }\n        } else {\n            this.props.parentActionOnCloseDrawer();\n            this.setState({openDrawer: false});\n        }\n    }\n    componentDidMount() {\n        let positionLocalStorage = localStorage.getItem(drawerSide.localStorageItem);\n        if ((positionLocalStorage === drawerSide.left || positionLocalStorage === drawerSide.right)\n            && this.state.position !== positionLocalStorage) {\n            this.setState({position: positionLocalStorage});\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //if (!prevProps.open && this.props.open) {\n        if (this.props.open && !prevState.openDrawer) {\n            this.setState({ openDrawer: this.props.open});\n        }\n    }\n\n    render() {\n        const {optionsMenu} = this.props;\n        return (\n            <Drawer anchor={this.state.position} open={this.state.openDrawer} onClick={this.HandleDrawer}>\n                <List>\n                    {optionsMenu.map((option, index) => (\n                            option.linkTo ?\n                                <Link to={option.linkTo} className={'linkNoDecoration'} key={index}>\n                                    <ListItem>\n                                        <ListItemIcon>{option.iconMenu}</ListItemIcon>\n                                        <ListItemText>{option.item}</ListItemText>\n                                    </ListItem>\n                                </Link>\n                                :\n                                <ListItem key={index}>\n                                    <ListItemIcon>{option.iconMenu}</ListItemIcon>\n                                    <ListItemText>{option.item}</ListItemText>\n                                </ListItem>\n                    ))}\n                    <Divider />\n                    <IconButton className={'arrowAlignCenter'} id={'idToggleDrawerPosition'}>\n                        {this.state.position === drawerSide.left ? <ArrowForwardRounded/> : <ArrowBackRounded/>}\n                    </IconButton>\n                </List>\n            </Drawer>\n        )\n    }\n}\nSimpleDrawer.protoType = {\n    open: PropTypes.bool.isRequired,\n    parentActionOnCloseDrawer: PropTypes.func.isRequired,\n    optionsMenu: PropTypes.array.isRequired,\n}\n\nexport default SimpleDrawer;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { AppBar, Slide, useScrollTrigger, Grid, Tooltip } from '@material-ui/core';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { IconButton } from \"@material-ui/core\";\nimport i18n from '../i18n';\nimport SimpleMenuButton from \"./SimpleMenuButton\";\nimport SimpleDrawer from \"./SimpleDrawer\";\n\nimport {\n    AccountBalance as AccountBalanceIcon,\n    AccountCircle as AccountCircleIcon,\n    PersonAdd as PersonAddIcon,\n    Menu as MenuIcon,\n    LinkOff as LinkOffIcon,\n    Group as GroupIcon,\n    Build as BuildIcon,\n    Report as ReportIcon\n} from \"@material-ui/icons\";\n\nfunction HideOnScroll(props) {\n\n    const { children } = props;\n    const trigger = useScrollTrigger();\n\n    return (\n        <Slide appear={false} direction=\"down\" in={!trigger} timeout={1000}>\n            {children}\n        </Slide>\n    );\n}\n\nHideOnScroll.propTypes = {\n    children: PropTypes.element.isRequired,\n};\n\nfunction HandleLanguages(value) {\n    if (value === i18n.t('language.french')) {\n        i18n.changeLanguage('fr');\n    } else if (value === i18n.t('language.english')) {\n        i18n.changeLanguage('en');\n    }\n    document.location.reload();\n}\n\nexport default function HideAppBar(props) {\n    const [openDrawer, setOpenDrawer] = useState(false);\n    const HandleDrawer = () => {\n        setOpenDrawer(!openDrawer);\n    }\n\n    let optionsMenus = [{item: i18n.t('HeaderMenu.home'), linkTo: \"/\", iconMenu: <AccountBalanceIcon/>}]\n\n    if (!props.loginState.token) {\n        optionsMenus.push({item: i18n.t('HeaderMenu.login'), linkTo: \"/login\", iconMenu: <AccountCircleIcon/>});\n        optionsMenus.push({item: i18n.t('HeaderMenu.sign.up'), linkTo: \"/user/new_user\", iconMenu: <PersonAddIcon/>});\n    } else {\n        optionsMenus.push({item: i18n.t('HeaderMenu.my.account'), linkTo: \"/user/my_account\", iconMenu: <BuildIcon/>});\n        optionsMenus.push({item: i18n.t('HeaderMenu.logout'), linkTo: \"/logout\", iconMenu: <LinkOffIcon/>});\n    }\n    if (props.loginState.token !=null && props.loginState.isAsso) {\n        optionsMenus.push({item: i18n.t('HeaderMenu.users.list'), linkTo: \"/user/users_list\", iconMenu: <GroupIcon />});\n        optionsMenus.push({item: i18n.t('HeaderMenu.test'), linkTo: \"/test\", iconMenu: <ReportIcon />});\n    }\n\n    const optionsLanguages = [{item: i18n.t('language.french')}, {item: i18n.t('language.english')}];\n\n    return (\n        <React.Fragment>\n            <SimpleDrawer open={openDrawer} parentActionOnCloseDrawer={HandleDrawer} optionsMenu={optionsMenus}></SimpleDrawer>\n            <HideOnScroll {...props}>\n                <AppBar position=\"fixed\">\n                    <Toolbar>\n                        <Grid container>\n                            <Grid item xs={4}>\n                                <Grid container>\n                                    <IconButton edge=\"start\" color=\"inherit\" size={'small'} onClick={HandleDrawer}>\n                                        <MenuIcon />\n                                    </IconButton>\n                                    <Typography variant=\"h6\" >\n                                        {i18n.t('HeaderMenu.Menu')}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <Grid container justify={'center'}>\n                                    <SimpleMenuButton title={i18n.t('HeaderMenu.Menu')} options={optionsMenus}/>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <Grid container justify={'flex-end'}>\n                                    <SimpleMenuButton title={i18n.t('change.language')} options={optionsLanguages} setAction={HandleLanguages}/>\n                                    {props.loginState.token &&\n                                        <Tooltip title={props.loginState.firstName + \" \" + props.loginState.lastName}>\n                                            <AccountCircleIcon fontSize={\"large\"} />\n                                        </Tooltip>\n                                    }\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Toolbar>\n                </AppBar>\n            </HideOnScroll>\n            <Toolbar />\n        </React.Fragment>\n    );\n}\nHideAppBar.prototype = {\n    loginState: PropTypes.array.isRequired,\n}","import React from \"react\";\nimport { Grid, Card, Typography} from \"@material-ui/core\";\nimport i18n from '../i18n';\n\nexport default function HomePage(props) {\n    return (\n        <Grid container justify={\"center\"}>\n            <Card>\n                <img src={\"/img/saxon-switzerland.jpg\"} alt={i18n.t('image.home.alt')}/>\n                <Typography align={'center'}>\n                    {i18n.t('welcome.message')}\n                </Typography>\n            </Card>\n        </Grid>\n    );\n}","const API_URL_ROOT = window.general_api_url_root;\nexport const API_URI_HELLO = API_URL_ROOT + '/hello';\nexport const API_URL_LOGIN = API_URL_ROOT + '/login';\nexport const API_URL_USERS_LIST = API_URL_ROOT + '/user/users_list';\nexport const API_URL_USER_DETAILS = API_URL_ROOT + '/user/user_details';\nexport const API_URL_USER_DELETE = API_URL_ROOT + '/user/delete';\nexport const API_URL_USER_NEW = API_URL_ROOT + '/user/register_new_user';\nexport const API_URL_MY_ACCOUNT = API_URL_ROOT + '/user/my_account';\nexport const API_URL_CHANGE_ACCOUNT = API_URL_ROOT + '/user/change_account';\nexport const API_URL_CHANGE_PWD = API_URL_ROOT + '/user/change_password';\nexport const API_URL_CITY_LIST = API_URL_ROOT + '/city/list';\n\n\nexport const SESSION_STORAGE_JWT_TOKEN_ITEM_NAME = window.JWT_TOKEN_climbing;\nexport const SESSION_STORAGE_FIRST_AND_LAST_NAME_ITEM_NAME = \"climbing_first_last_name\";\nexport const SESSION_STORAGE_ISASSO_ITEM_NAME = \"climbing_is_asso\";\n\nasync function sendData(url = '', data = {}, verb) {\n    const token = sessionStorage.getItem(SESSION_STORAGE_JWT_TOKEN_ITEM_NAME);\n    let headers = {\n        'Content-Type': 'application/json;charset=utf-8',\n    }\n    if (token) {\n        headers.Authorization = 'Bearer ' + token;\n    }\n    let response = await fetch(url, {\n        method: verb,\n        headers: headers,\n        body: JSON.stringify(data),\n    });\n    let responseObject = {};\n    try {\n        responseObject = await response.json(); // parses JSON response into native JavaScript objects\n    } catch (error) {/*do nothing*/}\n    return responseObject;\n}\n\nexport function SEND_POST(url, data){ return sendData(url, data, 'POST');}\nexport function SEND_PUT(url, data){ return sendData(url, data, 'PUT');}\nexport function SEND_DELETE(url, data){ return sendData(url, data, 'DELETE');}\n\nasync function getData(url = '') {\n    const token = sessionStorage.getItem(SESSION_STORAGE_JWT_TOKEN_ITEM_NAME);\n    let headers = {\n        'Content-Type': 'application/json;charset=utf-8',\n    }\n    if (token) {\n        headers.Authorization = 'Bearer ' + token;\n    }\n    let response = await fetch(url, {\n        method: 'GET',\n        headers: headers,\n    });\n    let responseObject = {};\n    try {\n        responseObject = await response.json(); // parses JSON response into native JavaScript objects\n    } catch (error) {/*do nothing*/}\n    return responseObject;\n}\n\nexport function SEND_GET(url){ return getData(url);}\n","export function isValidEmail(email) {\n    if (!email || typeof email !== \"string\") {\n        return false;\n    }\n    const res = email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)\n    if (res != null) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function isValidPhoneNumber(phoneNumber) {\n    if (!phoneNumber || typeof phoneNumber !== 'string' || phoneNumber.length < 10) return false;\n    //let pn = phoneNumber.replace(/-/g, \"\").replace(/\\./g, \"\").replace(/ /g, \"\");\n    //let pn = phoneNumber.replace(/\\./g, \"\").replace(/ /g, \"\");\n    //const reg_phone_all = '^(01|02|03|04|05|06|07|09)[0-9]{8}$';\n    const reg_phone_all = '^(01|02|03|04|05|06|07|09)[.| ]{0,1}[0-9]{2}[.| ]{0,1}[0-9]{2}[.| ]{0,1}[0-9]{2}[.| ]{0,1}[0-9]{2}$';\n    const res = phoneNumber.match(reg_phone_all);\n    if (res != null) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function isValidAccountToUpdate(account) {\n    if (!account) return false;\n    if (account.firstName != null && account.firstName.length < 3) return false;\n    if (account.lastName != null && account.lastName.length < 3) return false;\n    if (account.phoneNumber && !isValidPhoneNumber(account.phoneNumber)) return false;\n    if (account.role !== 1 && account.role !== 2) return false;\n    if (!account.addressDetails) return true;\n    const ad = account.addressDetails;\n    if (ad.address && ad.address.length > 255) return false;\n    if (ad.zipCode && (ad.zipCode.length !== 5 || isNaN(ad.zipCode))) return false;\n    if (ad.city && ad.city.length > 50) return false;\n    if (ad.country && ad.country.length > 50) return false;\n    return true;\n}\n\nexport function passwordMeter(password) {\n    /*return 0 to 10*/\n    if (password === null || typeof password !== 'string') return 0;\n    const validations = [\n        (password.length > 5),//expect length > 5\n        (password.length > 7),//expect length > 7\n        (password.length > 9),//expect length > 9\n        (password.search(/[A-Z]/) > -1), //expect get at least one uppercase letter\n        (password.search(/[A-Z].*?[A-Z]/) > -1), //expect get at least two uppercase letter\n        (password.search(/[a-z]/) > -1), // expect get at least one lowercase letter\n        (password.search(/[a-z].*?[a-z]/) > -1), // expect get at least two lowercase letter\n        (password.search(/[0-9]/) > -1), // expect get at least a number\n        (password.search(/[^a-zA-Z0-9]/) > -1), //expect get at least one special character\n        (password.search(/[^a-zA-Z0-9].*?[^a-zA-Z0-9]/) > -1), // expect get at least two special character\n    ]\n    return validations.reduce((acc, cur) => acc + cur, 0);\n}","import React from \"react\";\nimport { Grid, Button, Card, Typography, withStyles } from \"@material-ui/core\";\nimport { InputLabel, Input, FormControl, TextField } from \"@material-ui/core\";\nimport { InputAdornment, IconButton } from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport * as APIConfig from \"../constants/APIConfig\";\nimport * as CommonFunction from '../constants/CommonFunction';\nimport i18n from '../i18n';\nimport PropTypes from \"prop-types\";\nimport {withRouter} from \"react-router-dom\";\n\n\nconst styles = themes => ({\n    root: {\n        padding: '12px',\n        margin: '30px',\n        minWidth: '275px',\n        boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\n    }\n});\n\nclass InputLogin extends React.Component {\n\n    state = {\n        buttonEnable: false,\n        name: '',\n        password: '',\n        showPassword: false,\n        logged: null,\n    }\n\n\n    async callAPI(url, data) {\n        let rep = await APIConfig.SEND_POST(url, data);\n        if (rep.token && rep.logged) {\n            const {setupLogin} = this.props;\n            setupLogin(rep.token, rep.firstName, rep.lastName, rep.asso);\n            this.props.history.push(\"/\");\n\n        } else {\n            this.setState({logged: false});\n        }\n    }\n\n    handleSubmitForm = (event) => {\n        event.preventDefault();\n        const {name, password} = this.state;\n        this.callAPI(APIConfig.API_URL_LOGIN, {name: name, password: password});\n        return false;\n    }\n\n    handleChange = (event) => {\n        let { name, password } = this.state;\n        this.setState({[event.target.name]: event.target.value});\n        if (event.target.name === \"name\") name = event.target.value;\n        if (event.target.name === \"password\") password = event.target.value;\n        if (password.length >= 4 && CommonFunction.isValidEmail(name)) {\n            this.setState({buttonEnable: true})\n        } else {\n            this.setState({buttonEnable: false});\n        }\n    }\n\n    handleClickShowPassword = () => {\n        const {showPassword} = this.state;\n        this.setState({showPassword: !showPassword});\n    }\n\n    render() {\n        const {buttonEnable, showPassword, password, name, logged} = this.state;\n        const {classes} = this.props;\n        return (\n            <Grid container justify={\"center\"}>\n                <Card className={classes.root}>\n                    <Grid container justify={\"center\"}>\n                        <Typography variant={\"h6\"} gutterBottom>{i18n.t('login.login')}</Typography>\n                    </Grid>\n                    <Grid container>\n                        <Grid item xs={12}>\n                            <TextField\n                                label={i18n.t('login.Name')}\n                                fullWidth\n                                value={name}\n                                onChange={this.handleChange}\n                                name={\"name\"}\n                                autoFocus\n                            />\n                        </Grid>\n                    </Grid>\n                    <form onSubmit={this.handleSubmitForm}>\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"standard-adornment-password\">{i18n.t('login.Password')}</InputLabel>\n                                    <Input\n                                        id=\"standard-adornment-password\"\n                                        type={showPassword ? 'text' : 'password'}\n                                        value={password}\n                                        onChange={this.handleChange}\n                                        name={\"password\"}\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    aria-label=\"toggle password visibility\"\n                                                    onClick={this.handleClickShowPassword}\n                                                    tabIndex={-1} // to avoid tab focus\n                                                >\n                                                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                    />\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n                        <br />\n                        {logged === false && <Typography color={\"secondary\"} variant={\"h6\"}>{i18n.t('login.login.false')}</Typography>}\n                        <Grid container justify={\"center\"}>\n                            <Button variant={\"contained\"} color={\"primary\"} disabled={!buttonEnable} type={\"submit\"}>\n                                {i18n.t('login.login')}\n                            </Button>\n                        </Grid>\n                    </form>\n                </Card>\n            </Grid>\n        )\n    }\n}\n\nInputLogin.protoType = {\n    setupLogin: PropTypes.func.isRequired,\n}\n\nexport default withStyles(styles)(withRouter(InputLogin));","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { Card, Grid, withStyles, Typography } from \"@material-ui/core\";\nimport i18n from '../i18n'\n\n\nconst styles = themes => ({\n    root: {\n        padding: '30px',\n        margin: '30px',\n        minWidth: '275px',\n        boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\n        textAlign: 'center',\n    }\n});\n\nclass Logout extends React.Component {\n\n    componentDidMount() {\n        const {setupLogout} = this.props;\n        setupLogout();\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <Grid container justify={\"center\"}>\n                <Card className={classes.root}>\n                    <Typography variant={'h6'}>\n                        {i18n.t('logout.logout.done')}\n                    </Typography>\n                </Card>\n            </Grid>\n        );\n    }\n\n}\nLogout.protoType = {\n    setupLogout: PropTypes.func.isRequired,\n}\n\nexport default withStyles(styles)(Logout)","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport i18n from '../i18n';\nimport PropTypes from 'prop-types';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} timeout={1200}/>;\n});\n\nexport default function AlertDialogSlide(props) {\n    const { handleAgree, handleDisagree, dialog} = props;\n\n    return (\n        <div>\n            <Dialog\n                open={true}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleAgree}\n            >\n                <DialogTitle className={\"warning\"}>{i18n.t('AlertDialogSlide.Warning')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {dialog}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleDisagree} color=\"primary\">\n                        {i18n.t('AlertDialogSlide.Disagree')}\n                    </Button>\n                    <Button onClick={handleAgree} color=\"primary\">\n                        {i18n.t('AlertDialogSlide.Agree')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nAlertDialogSlide.prototype = {\n    handleAgree: PropTypes.func.isRequired,\n    handleDisagree: PropTypes.func.isRequired,\n    dialog: PropTypes.string.isRequired,\n}","import React from 'react';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport styled from 'styled-components';\nimport PropTypes from \"prop-types\";\n\nconst Label = styled('label')`\n  padding: 0 0 4px;\n  line-height: 1.5;\n  display: block;\n`;\n\nconst InputWrapper = styled('div')`\n  width: 300px;\n  border: 1px solid #d9d9d9;\n  background-color: #fff;\n  border-radius: 4px;\n  padding: 1px;\n  display: flex;\n  flex-wrap: wrap;\n\n  &:hover {\n    border-color: #40a9ff;\n  }\n\n  &.focused {\n    border-color: #40a9ff;\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\n  }\n\n  & input {\n    font-size: 14px;\n    height: 30px;\n    box-sizing: border-box;\n    padding: 4px 6px;\n    width: 0;\n    min-width: 30px;\n    flex-grow: 1;\n    border: 0;\n    margin: 0;\n    outline: 0;\n  }\n`;\n\nconst Tag = styled(({ label, onDelete, ...props }) => (\n    <div {...props}>\n        <span>{label}</span>\n        <CloseIcon onClick={onDelete} />\n    </div>\n))`\n  display: flex;\n  align-items: center;\n  height: 24px;\n  margin: 2px;\n  line-height: 22px;\n  background-color: #fafafa;\n  border: 1px solid #e8e8e8;\n  border-radius: 2px;\n  box-sizing: content-box;\n  padding: 0 4px 0 10px;\n  outline: 0;\n  overflow: hidden;\n\n  &:focus {\n    border-color: #40a9ff;\n    background-color: #e6f7ff;\n  }\n\n  & span {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  & svg {\n    font-size: 12px;\n    cursor: pointer;\n    padding: 4px;\n  }\n`;\n\nconst Listbox = styled('ul')`\n  width: 300px;\n  margin: 2px 0 0;\n  padding: 0;\n  position: absolute;\n  list-style: none;\n  background-color: #fff;\n  overflow: auto;\n  max-height: 250px;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  z-index: 1;\n\n  & li {\n    padding: 5px 12px;\n    display: flex;\n\n    & span {\n      flex-grow: 1;\n    }\n\n    & svg {\n      color: transparent;\n    }\n  }\n\n  & li[aria-selected='true'] {\n    background-color: #fafafa;\n    font-weight: 600;\n\n    & svg {\n      color: #1890ff;\n    }\n  }\n\n  & li[data-focus='true'] {\n    background-color: #e6f7ff;\n    cursor: pointer;\n\n    & svg {\n      color: #000;\n    }\n  }\n`;\n\nexport default function InputMultipleOptions(props) {\n    let {\n        getRootProps,\n        getInputLabelProps,\n        getInputProps,\n        getTagProps,\n        getListboxProps,\n        getOptionProps,\n        groupedOptions,\n        value,\n        focused,\n        setAnchorEl,\n    } = useAutocomplete({\n        id: 'customized-hook',\n        options: props.options,\n        defaultValue: props.defaultValue,//null or must be an array if props.multiple === true otherwise only an object as {title:\"xxx\", otherValue:\"yyy\", etc..}\n        getOptionLabel: (option) => option.title,\n        onChange: (event, values) => handleSelection(values),\n        onInputChange: (event, value) => handleInputChange(value),\n        multiple: props.multiple,\n    });\n\n    const handleSelection = (values) => {\n        if (props.onChange) {\n            props.onChange(values);\n        }\n    }\n\n    const handleInputChange = (value) => {\n        if (props.onInputChange) {\n            props.onInputChange(value);\n        }\n    }\n\n    return (\n        <NoSsr>\n            <div>\n                <div {...getRootProps()}>\n                    <Label {...getInputLabelProps()}>{props.label}</Label>\n                    <InputWrapper ref={setAnchorEl} className={focused ? 'focused' : ''}>\n                        {value instanceof Array && value.map((option, index) => (\n                            <Tag label={option.title} {...getTagProps({ index })} />\n                        ))}\n\n                        <input {...getInputProps()}/>\n                    </InputWrapper>\n                </div>\n                {groupedOptions.length > 0 ? (\n                    <Listbox {...getListboxProps()}>\n                        {groupedOptions.map((option, index) => (\n                            <li {...getOptionProps({ option, index })}>\n                                <span>{option.title}</span>\n                                {option.zipcode && <div>{option.zipcode}</div>}\n                                <CheckIcon fontSize=\"small\" />\n                            </li>\n                        ))}\n                    </Listbox>\n                ) : null}\n            </div>\n        </NoSsr>\n    );\n}\n\nInputMultipleOptions.prototype = {\n    onChange: PropTypes.func.isRequired, // handle to call when an input data has been validated and changed, (data are a part of options)\n    onInputChange: PropTypes.func, // handle to call during an input is changing\n    defaultValue: PropTypes.array, // is not required: an array of defaut object is in input, example: [props.options[1],props.options[5]]\n    multiple: PropTypes.bool.isRequired, // if multiple selection is possible\n    options: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.string.isRequired,\n    })), // an array of one or more object as { title: 'Paris', anyOtherParam: whatYouWant, etc... }\n    label: PropTypes.string.isRequired, // the label of input field\n}\n","import React from 'react';\nimport * as APIConfig from \"../constants/APIConfig\";\nimport {API_URL_CITY_LIST} from \"../constants/APIConfig\";\nimport InputMultipleOptions from \"./InputMultipleOptions\";\nimport PropTypes from \"prop-types\";\nimport i18n from \"../i18n\";\n\nclass InputSelectedCities extends React.Component {\n\n    state= {\n        cityList: null,\n        citiesSelected: null,\n    }\n\n    async callAPIGetCityList(data) {\n        const rep = await APIConfig.SEND_POST(API_URL_CITY_LIST, data);\n        if (!rep || rep.status !== \"OK\") return;\n        const {citiesSelected} = this.state;\n        let citiesArray = rep.payload.map((cityDetails, index) => {\n            return {title: cityDetails.name, zipcode: cityDetails.zipcode}\n        });\n        if(citiesSelected) citiesSelected.forEach((city) => citiesArray.push(city) );\n        this.setState({cityList: citiesArray});\n    }\n\n    handleOnChangeCities = (cities) => {\n        this.setState({citiesSelected : cities});\n        if (this.props.onChange) this.props.onChange(cities);\n    }\n    handleOnInputChange = (typingInput) => {\n        this.callAPIGetCityList({startCitiesToFind: typingInput})\n    }\n\n    componentDidMount() {\n        this.callAPIGetCityList({startCitiesToFind: \"\"});\n    }\n\n    render() {\n        const {cityList} = this.state;\n        return (\n            <div>\n                {cityList &&\n                <InputMultipleOptions\n                    defaultValue={[]/*citiesOrigin/*is an array*/}\n                    options={cityList}\n                    onChange={this.handleOnChangeCities}\n                    onInputChange={this.handleOnInputChange}\n                    multiple={true}\n                    label={i18n.t('InputSelectCities.Filter.choice.cities')}\n                />\n                }\n            </div>\n        );\n    }\n}\n\nexport default InputSelectedCities\n\nInputMultipleOptions.prototype = {\n    onChange: PropTypes.func.isRequired, // handle to call when an input data has been validated and changed, (data are a part of options)\n}","import React from 'react';\nimport * as APIConfig from '../constants/APIConfig'\nimport {\n    Button,\n    Card,\n    CardActions,\n    CardHeader,\n    Divider,\n    Grid,\n    IconButton,\n    MenuItem,\n    Select,\n    Typography,\n    withStyles\n} from \"@material-ui/core\";\nimport i18n from '../i18n';\nimport {\n    Close as CloseIcon,\n    DeleteForever as DeleteForeverIcon,\n    Description as DescriptionIcon,\n    Replay as ReplayIcon\n} from '@material-ui/icons';\nimport AlertDialogSlide from \"../modals/AlertDialogSlide\";\nimport {withRouter} from 'react-router-dom';\nimport InputSelectedCities from '../inputs/InputSelectedCities'\n\n\nconst styles = themes => ({\n    root: {\n        padding: '12px',\n        margin: '30px',\n        width: '450px',\n        boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\n    },\n    li: {\n        margin: '0 0 10px 0',\n        '&:hover': {\n            cursor: 'pointer',\n        },\n    },\n    close: {\n        '&:hover': {\n            cursor: 'pointer',\n        }\n    },\n    deleteButton: {\n        marginLeft: 'auto',\n    },\n    select : {\n        float: 'right',\n    },\n    divider: {\n        marginTop: '20px',\n        marginBottom: '20px',\n    }\n});\n\nclass UsersList extends React.Component {\n\n    state = {\n        usersData : null,\n        userDetails: null,\n        displayModal: false,\n        numberInPage: 5,\n        cities: null,\n        cityList: null,\n        citiesOrigin: null,\n    }\n\n    async callAPIUsersList(data) {\n        const rep = await APIConfig.SEND_POST(APIConfig.API_URL_USERS_LIST, data);\n        this.setState({usersData: rep});\n    }\n\n    async callAPIUserDetails(data) {\n        const rep = await APIConfig.SEND_POST(APIConfig.API_URL_USER_DETAILS, data);\n        this.setState({userDetails: rep});\n    }\n\n    async callAPIDeleteUser(id) {\n        const {usersData: {currentPage}, numberInPage} = this.state;\n        const rep = await APIConfig.SEND_DELETE(APIConfig.API_URL_USER_DELETE + '/?id=' +id, null);\n        if (rep.status === \"OK\") {\n            this.setState({userDetails: null});\n            this.callAPIUsersList({numPage: currentPage, numberInPage: numberInPage, cities: this.getArrayToSendFromCities()});\n        } else {\n            alert(i18n.t('UsersList.alert.delete.nok') + rep.reason);\n        }\n    }\n\n    getArrayToSendFromCities = () => {\n        const {cities} = this.state;\n        if (cities === null || cities.length === 0) return null;\n        const mapTitleCities = cities.map((city) => city.title);\n        return mapTitleCities;\n    }\n\n    handleOtherPage = (event) => {\n        const {usersData, numberInPage} = this.state;\n        if (!usersData) return;\n        const currentPage = usersData.currentPage;\n        const numberOfPages = usersData.numberOfPages;\n        let jumpNumber = parseInt(event.target.value || event.target.parentNode.value);\n        let nextPage = currentPage + jumpNumber;\n        if (nextPage < 0) nextPage = 0;\n        if (nextPage >= numberOfPages) nextPage = numberOfPages - 1;\n        let data = {numPage: nextPage, numberInPage: numberInPage, cities: this.getArrayToSendFromCities()};\n        this.callAPIUsersList(data);\n    }\n\n    handleUserDetailsChoice = (event) => {\n        this.callAPIUserDetails({id: event.target.value});\n    }\n    handleNumberInPage = ({target}) => {\n        const {numberInPage, usersData} = this.state;\n        if (numberInPage !== target.value) {\n            const currentPage = usersData.currentPage;\n            const position = currentPage * numberInPage;\n            const newCurrentPage = position / target.value;\n            this.setState({numberInPage: target.value});\n            this.callAPIUsersList({numPage: newCurrentPage, numberInPage: target.value, cities: this.getArrayToSendFromCities()});\n        }\n    }\n\n    handleChangeUser = () => {\n        const {userDetails: {id}, numberInPage} = this.state;\n        const {usersData} = this.state;\n        if (!usersData || !id) return;\n        const currentPage = usersData.currentPage;\n        this.props.history.push(\"/user/change?id=\" + id + \"&currentPage=\" + currentPage + \"&numberInPage=\" + numberInPage);\n    }\n\n    componentDidMount() {\n        let data;\n        const params = new URLSearchParams(this.props.location.search);\n        const currentPage = params.get(\"currentPage\");\n        const numberInPage = params.get(\"numberInPage\");\n        if (currentPage && numberInPage) {\n            this.setState({numberInPage: numberInPage});\n            data = {numPage: currentPage, numberInPage: numberInPage};\n        } else {\n            data = {numPage: \"0\", numberInPage: \"5\"};\n        }\n        this.callAPIUsersList(data);\n    }\n\n    handleDeleteUser= (event) => {\n        this.setState({displayModal: true});\n    }\n\n    handleAgreeModal = () => {\n        const {id} = this.state.userDetails;\n        this.setState({displayModal: false});\n        this.callAPIDeleteUser(id);\n    }\n\n    handleDisagreeModal = () => {\n        this.setState({displayModal: false});\n    }\n\n    handleOnChangeCities = (dataCities) => {\n        this.setState({cities: dataCities});\n    }\n\n    handleReload = () => {\n        const {numberInPage} = this.state;\n        this.callAPIUsersList({numPage: 0, numberInPage: numberInPage, cities: this.getArrayToSendFromCities()});\n    }\n\n    userDetails = () => {\n        const {userDetails, displayModal} = this.state;\n        const {classes} = this.props;\n        return (\n            <Card className={classes.root}>\n                <CardHeader action={\n                   <CloseIcon className={classes.close} color={\"disabled\"} onClick={() => this.setState({userDetails: null})}/>\n                }/>\n                <ul>\n                    {userDetails &&\n                        <div>\n                            <Typography variant={\"h6\"} align={\"center\"}>{userDetails.firstName + \" \" + userDetails.lastName}</Typography>\n                            <ul>\n                                <li>{userDetails.email}</li>\n                                {userDetails.phoneNumber && <li>{userDetails.phoneNumber}</li>}\n                                {userDetails.addressDetails &&\n                                <div>\n                                    <hr/>\n                                    {userDetails.addressDetails.address && <li>{userDetails.addressDetails.address}</li>}\n                                    {userDetails.addressDetails.zipCode && <li>{userDetails.addressDetails.zipCode}</li>}\n                                    {userDetails.addressDetails.city && <li>{userDetails.addressDetails.city}</li>}\n                                    {userDetails.addressDetails.country && <li>{userDetails.addressDetails.country}</li>}\n                                </div>\n                                }\n                            </ul>\n                        </div>\n                    }\n                </ul>\n\n                <CardActions disableSpacing>\n                    <IconButton onClick={this.handleChangeUser}>\n                        <DescriptionIcon color={\"primary\"}/>\n                        <Typography variant={\"caption\"} color={\"primary\"}>{i18n.t('UserList.change')}</Typography>\n                    </IconButton>\n                    <IconButton className={classes.deleteButton} onClick={this.handleDeleteUser} value={userDetails.id}>\n                        <DeleteForeverIcon color={\"secondary\"}/>\n                    </IconButton>\n                </CardActions>\n                {displayModal &&\n                    <AlertDialogSlide\n                        handleAgree={this.handleAgreeModal}\n                        handleDisagree={this.handleDisagreeModal}\n                        dialog={\n                            <span>\n                                {i18n.t('UsersList.alert.delete.modal')}<br/>\n                                <Typography color={\"secondary\"} variant={\"inherit\"}>\n                                    {userDetails.firstName + \" \" + userDetails.lastName + \", \" + userDetails.email}\n                                </Typography>\n                            </span>}\n                    />\n                }\n            </Card>\n        );\n    }\n\n    render() {\n        const {usersData, userDetails, numberInPage} = this.state;\n        const {classes} = this.props;\n        const previousButtonDisabled = !(usersData && usersData.currentPage !== 0);\n        const nextButtonDisabled = !(usersData && usersData.currentPage + 1 < usersData.numberOfPages);\n        return (\n            <Grid container justify={\"center\"}>\n                <Card className={classes.root}>\n                    <Typography variant=\"h6\" align={\"center\"}>\n                        {i18n.t('UsersList.UsersList')}\n                    </Typography>\n                    {usersData && usersData.usersList &&\n                    <ul>\n                        {usersData.usersList.map((user, index) => (\n                            <li className={classes.li} key={index} value={user.id} onClick={this.handleUserDetailsChoice}>{user.firstName + \" \" + user.lastName + \", \" + user.user}</li>\n                        ))}\n                    </ul>}\n                    <Grid container justify={\"space-evenly\"}>\n                        <Button onClick={this.handleOtherPage} value={-1} disabled={previousButtonDisabled} variant={\"contained\"} color={\"primary\"}>\n                            {i18n.t('UsersList.Previous')}\n                        </Button>\n                        <Button onClick={this.handleOtherPage} value={1} disabled={nextButtonDisabled} variant={\"contained\"} color={\"primary\"}>\n                            {i18n.t('UsersList.Next')}\n                        </Button>\n                    </Grid>\n\n                    <Divider className={classes.divider}/>\n                    <Grid container>\n                        <Grid item>\n                            <InputSelectedCities onChange={this.handleOnChangeCities}/>\n                        </Grid>\n                        <Grid item style={{marginTop: '20px'}}>\n                            <IconButton onClick={this.handleReload}>\n                                <ReplayIcon/>\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                    <Divider/>\n                    <Grid container justify={'flex-end'}>\n                        <Grid item>\n                            <div className={classes.select}>\n                                <Typography variant={\"caption\"} display=\"block\">\n                                    {i18n.t('UsersList.number.of.displayable.page')}\n                                </Typography>\n                                <Select\n                                    value={numberInPage}\n                                    variant={\"outlined\"}\n                                    margin={'dense'}\n                                    onChange={this.handleNumberInPage}\n                                >\n                                    <MenuItem value={5}>5</MenuItem>\n                                    <MenuItem value={10}>10</MenuItem>\n                                    <MenuItem value={20}>20</MenuItem>\n                                </Select>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Card>\n                {userDetails && this.userDetails()}\n            </Grid>\n        )\n    }\n}\n\nexport default withStyles(styles)(withRouter(UsersList))","import React from 'react';\nimport './LevelPwdCss.css';\n\nexport default function LevelPwd(props) {\n    const strength = props.strength;\n    return (\n        <div className={\"strength\"}>\n            <span className={\"bar bar-1\" + (strength > 0 ? \" bar-show\" : \"\")}/>\n            <span className={\"bar bar-2\" + (strength > 3 ? \" bar-show\" : \"\")} />\n            <span className={\"bar bar-3\" + (strength > 5 ? \" bar-show\" : \"\")} />\n            <span className={\"bar bar-4\" + (strength > 8 ? \" bar-show\" : \"\")} />\n        </div>\n    );\n}","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {\n    Button,\n    Card,\n    CircularProgress,\n    Grid,\n    IconButton,\n    InputAdornment,\n    TextField,\n    Typography,\n    withStyles,\n    Slide,\n} from \"@material-ui/core\";\nimport * as APIConfig from '../constants/APIConfig'\nimport {isValidEmail, passwordMeter} from \"../constants/CommonFunction\";\nimport {Visibility, VisibilityOff} from \"@material-ui/icons\";\nimport i18n from '../i18n'\nimport LevelPwd from \"../rating/LevelPwd\";\n\n\nconst styles = themes => ({\n    root: {\n        padding: '12px',\n        margin: '30px',\n        minWidth: '275px',\n        boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\n    },\n    textfield: {\n        paddingBottom: '10px',\n    },\n    buttonaction: {\n        paddingTop: '20px',\n    }\n});\n\nclass InputNewUser extends React.Component {\n    state = {\n        email: '',\n        emailError: false,\n        emailHelperText: '',\n        password: '',\n        pwdError: false,\n        pwdHelperText: '',\n        passwordStrength: 0,\n        passwordStrengthShow: false,\n        passwordConfirm: '',\n        pwdConfirmError:false,\n        pwdConfirmHelperText: '',\n        showPasswords: false,\n        submitDisabled: true,\n        firstName: '',\n        firstNameError: false,\n        firstNameHelperText: '',\n        lastName: '',\n        lastNameError: false,\n        lastNameHelperText: '',\n        callApiRunning: false,\n        errorReason: null,\n    }\n\n    handleChangeEmail = (event) => {\n        const {password, passwordConfirm, firstName, lastName} = this.state;\n        const newEmail = event.target.value;\n        const emailOK = isValidEmail(newEmail);\n        if (emailOK){\n            this.setState({email:newEmail, emailError: false, emailHelperText: ''});\n        } else {\n            this.setState({email:newEmail, emailError: true, emailHelperText: i18n.t('InputNewUser.email.error')});\n        }\n        const submitEnable = this.checkForEnableSubmit(newEmail, password, passwordConfirm, firstName, lastName);\n        this.setState({submitDisabled: !submitEnable});\n    }\n\n    handleClickShowPassword = () => {\n        const {showPasswords} = this.state;\n        this.setState({showPasswords: !showPasswords});\n    }\n\n    handleChangePasswords = (event) => {\n        const {password, passwordConfirm, email, firstName, lastName} = this.state;\n        const value = event.target.value;\n        const name = event.target.name;\n        if (name === 'password') {\n            if (value && value.length < 4) {\n                this.setState({pwdHelperText: i18n.t('InputNewUser.password.not.enough.Strong'), pwdError: true});\n            } else {\n                this.setState({pwdHelperText: '', pwdError: false});\n            }\n            if (value && value !== passwordConfirm) {\n                this.setState({pwdConfirmHelperText: i18n.t('InputNewUser.password.confirm.notequal.password'), pwdConfirmError: true});\n            } else {\n                this.setState({pwdConfirmHelperText: '', pwdConfirmError: false});\n            }\n            const enableSubmit = this.checkForEnableSubmit(email, value, passwordConfirm, firstName, lastName);\n            const meter = passwordMeter(value);\n            this.setState({password: value, submitDisabled: !enableSubmit, passwordStrength: meter});\n        } else if (name === 'passwordConfirm') {\n            if (value && value !== password) {\n                this.setState({pwdConfirmHelperText: i18n.t('InputNewUser.password.confirm.notequal.password'), pwdConfirmError: true});\n            } else {\n                this.setState({pwdConfirmHelperText: '', pwdConfirmError: false});\n            }\n            const enableSubmit = this.checkForEnableSubmit(email, password, value, firstName, lastName);\n            this.setState({passwordConfirm: value, submitDisabled: !enableSubmit});\n        }\n    }\n\n    handleChangeName = (event) => {\n        const {email, password, passwordConfirm, firstName, lastName} = this.state;\n        const value = event.target.value;\n        this.setState({[event.target.name]: value});\n        let enableSubmit = false;\n        if (event.target.name === 'firstName') {\n            if (value && value.length < 3) {\n                this.setState({firstNameError: true, firstNameHelperText: i18n.t('InputNewUSer.firstName.tooShort')});\n            } else {\n                this.setState({firstNameError: false, firstNameHelperText: ''});\n            }\n            enableSubmit = this.checkForEnableSubmit(email, password, passwordConfirm, value, lastName);\n        } else if (event.target.name === 'lastName') {\n            if (value && value.length < 3) {\n                this.setState({lastNameError: true, lastNameHelperText: i18n.t('InputNewUSer.lastName.tooShort')});\n            } else {\n                this.setState({lastNameError: false, lastNameHelperText: ''});\n            }\n            enableSubmit = this.checkForEnableSubmit(email, password, passwordConfirm, firstName, value);\n        }\n        this.setState({submitDisabled: !enableSubmit});\n    }\n\n    checkForEnableSubmit(email, password, passwordConfirm, firstName, lastName) {\n        if (isValidEmail(email) && password && password.length >= 4 && password === passwordConfirm\n            && firstName && firstName.length >= 3\n            && lastName && lastName.length >= 3\n        ) return true;\n        return false;\n    }\n\n    handleClearInfo = () => {\n        this.setState({\n            email: '',\n            emailError: false,\n            emailHelperText: '',\n            password: '',\n            pwdError: false,\n            pwdHelperText: '',\n            passwordStrength: 0,\n            passwordStrengthShow: false,\n            passwordConfirm: '',\n            pwdConfirmError:false,\n            pwdConfirmHelperText: '',\n            submitDisabled: true,\n            firstName: '',\n            firstNameError: false,\n            firstNameHelperText: '',\n            lastName: '',\n            lastNameError: false,\n            lastNameHelperText: '',\n            callApiRunning: false,\n            errorReason: null,\n        });\n    }\n\n    handlePasswordStrengthHide = () => {\n        this.setState({passwordStrengthShow: false});\n    }\n\n    handlePasswordStrengthShow = () => {\n        this.setState({passwordStrengthShow:true});\n    }\n\n    async callApi(data) {\n        const {setupLogin} = this.props;\n        const rep = await APIConfig.SEND_POST(APIConfig.API_URL_USER_NEW, data);\n        this.setState({callApiRunning: false});\n        if (rep.token) {\n            setupLogin(rep.token, rep.firstName, rep.lastName, rep.asso);\n            window.location = '/';\n        } else {\n            this.setState({errorReason: rep.errorReason});\n        }\n    }\n\n    handleSubmit = () => {\n        const {email, password, passwordConfirm, firstName, lastName} = this.state;\n        const validData = this.checkForEnableSubmit(email, password, passwordConfirm, firstName, lastName);\n        if (validData) {\n            const data = {\n                email: email,\n                password: password,\n                passwordConfirm: passwordConfirm,\n                firstName: firstName,\n                lastName: lastName,\n                errorReason: null,\n            }\n            this.setState({callApiRunning: true});\n            this.callApi(data);\n        }\n    }\n\n    render() {\n        const {classes} = this.props;\n        const {email, emailError, emailHelperText, showPasswords, password, passwordConfirm,\n            pwdError, pwdConfirmError, pwdHelperText, pwdConfirmHelperText, submitDisabled,\n            firstName, firstNameError, firstNameHelperText,\n            lastName, lastNameError, lastNameHelperText,\n            callApiRunning, errorReason, passwordStrengthShow, passwordStrength\n        } = this.state;\n        return (\n            <Grid container justify={'center'}>\n                <Card className={classes.root}>\n                    <Grid item xs={12}>\n                        <Typography variant={'h6'} align={'center'}>{i18n.t('InputNewUser.sign.up')}</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            className={classes.textfield}\n                            error={emailError}\n                            label={i18n.t('InputNewUser.email')}\n                            helperText={emailHelperText}\n                            onChange={this.handleChangeEmail}\n                            value={email}\n                            autoFocus\n                            fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={12}><div></div></Grid>\n                    <Grid item xs={12}>\n                        <div onBlur={this.handlePasswordStrengthHide} onFocus={this.handlePasswordStrengthShow}>\n                        <TextField\n                            className={classes.textfield}\n                            type={showPasswords ? 'text' :'password'}\n                            error={pwdError}\n                            label={i18n.t('InputNewUser.password')}\n                            helperText={pwdHelperText}\n                            onChange={this.handleChangePasswords}\n                            value={password}\n                            name={'password'}\n                            fullWidth\n                            InputProps={{\n                                endAdornment: <InputAdornment position=\"end\">\n                                    <IconButton\n                                        onClick={this.handleClickShowPassword}\n                                        tabIndex={-1} // to avoid tab focus\n                                    >\n                                        {showPasswords ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>,\n                            }}\n                        />\n                        <Slide in={passwordStrengthShow} direction={'left'} timeout={2000}>\n                            <div>\n                                <LevelPwd strength={passwordStrength}/>\n                            </div>\n                        </Slide>\n                        </div>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            className={classes.textfield}\n                            type={showPasswords ? 'text' :'password'}\n                            error={pwdConfirmError}\n                            label={i18n.t('InputNewUser.password.confirm')}\n                            helperText={pwdConfirmHelperText}\n                            onChange={this.handleChangePasswords}\n                            value={passwordConfirm}\n                            name={'passwordConfirm'}\n                            fullWidth\n                            InputProps={{\n                                endAdornment: <InputAdornment position=\"end\">\n                                    <IconButton\n                                        onClick={this.handleClickShowPassword}\n                                        tabIndex={-1} // to avoid tab focus\n                                    >\n                                        {showPasswords ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>,\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            className={classes.textfield}\n                            error={firstNameError}\n                            label={i18n.t('InputNewUser.firstName')}\n                            helperText={firstNameHelperText}\n                            onChange={this.handleChangeName}\n                            value={firstName}\n                            name={'firstName'}\n                            fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            className={classes.textfield}\n                            error={lastNameError}\n                            label={i18n.t('InputNewUser.lastName')}\n                            helperText={lastNameHelperText}\n                            onChange={this.handleChangeName}\n                            value={lastName}\n                            name={'lastName'}\n                            fullWidth\n                        />\n                    </Grid>\n                    {callApiRunning &&\n                        <Grid container justify={\"center\"}>\n                            <CircularProgress/>\n                        </Grid>\n                    }\n                    <Grid container justify={\"space-between\"} className={classes.buttonaction}>\n                        <Grid item>\n                            <Button variant={\"contained\"} color={'primary'} onClick={this.handleClearInfo}>\n                                {i18n.t('InputNewUser.button.name.clear')}\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button variant={\"contained\"} color={'primary'} disabled={submitDisabled} onClick={this.handleSubmit}>\n                                {i18n.t('InputNewUser.button.name.submit')}\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    {errorReason &&\n                    <Grid container justify={\"center\"}>\n                        <Typography color={\"secondary\"}>{errorReason}</Typography>\n                    </Grid>\n                    }\n                </Card>\n            </Grid>\n        )\n    }\n}\n\nInputNewUser.propType = {\n    setupLogin: PropTypes.func.isRequired,\n}\n\nexport default withStyles(styles)(InputNewUser)","import React from 'react';\nimport {isValidEmail, isValidPhoneNumber, isValidAccountToUpdate} from \"../constants/CommonFunction\";\nimport {Button, Grid, MenuItem, Select, TextField, Typography, withStyles, IconButton, Menu} from \"@material-ui/core\";\nimport i18n from \"../i18n\";\nimport PropTypes from \"prop-types\";\nimport {MoreVert as MoreVertIcon} from \"@material-ui/icons\";\n\nconst styles = themes => ({\n    card: {\n        padding: '12px',\n        margin: '30px',\n        minWidth: '275px',\n        boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\n    },\n    gridItem: {\n        marginTop: '12px',\n        marginBottom: '12px',\n    },\n    gridContainer: {\n        //width: 'min-content',\n        maxWidth: '500px',\n    }\n});\n\nclass InputAnAccount extends React.Component {\n\n    state = {\n        account: null,\n        changeAccount: false,\n        changeRoleDisabled: true,\n        changeEmailDisabled: true,\n        emailError: false,\n        submitDisabled: true,\n        firstNameError: false,\n        lastNameError: false,\n        phoneNumberError: false,\n        zipCodeError: false,\n        anchorEl: null,\n    }\n\n    handleTextField = ({target : {value, name}}) => {\n        const {account, firstNameError, lastNameError, phoneNumberError, emailError} = this.state;\n        let isValidAccount = false;\n        if (name === 'email') {\n            const newAccount = {...account, email: value};\n            isValidAccount = isValidAccountToUpdate(newAccount);\n            this.setState( {account: newAccount});\n            if (!isValidEmail(value) && !emailError) {\n                this.setState({emailError: true,})\n            } else if (isValidEmail(value) && emailError) {\n                this.setState({emailError: false});\n            }\n        } else if (name === 'firstName') {\n            const newAccount = {...account, firstName: value};\n            isValidAccount = isValidAccountToUpdate(newAccount);\n            this.setState( {account: newAccount});\n            if (value.length < 3 && !firstNameError) {\n                this.setState({firstNameError: true,})\n            } else if (value.length >= 3 && firstNameError) {\n                this.setState({firstNameError: false});\n            }\n        } else if (name === 'lastName') {\n            const newAccount = {...account, lastName: value};\n            isValidAccount = isValidAccountToUpdate(newAccount);\n            this.setState({account: newAccount});\n            if (value.length < 3 && !lastNameError) {\n                this.setState({lastNameError: true,})\n            } else if (value.length >= 3 && lastNameError) {\n                this.setState({lastNameError: false});\n            }\n        } else if (name === 'phoneNumber') {\n            const newAccount = {...account, phoneNumber: value};\n            isValidAccount = isValidAccountToUpdate(newAccount);\n            this.setState({account: newAccount});\n            let phoneNumberIsValid = (isValidPhoneNumber(value) || value === \"\");\n            if (!phoneNumberIsValid  && !phoneNumberError) {\n                this.setState({phoneNumberError: true});\n            } else if (phoneNumberIsValid && phoneNumberError) {\n                this.setState({phoneNumberError: false});\n            }\n        } else if (name === 'role') {\n            const newAccount = {...account, role: value};\n            isValidAccount = isValidAccountToUpdate(newAccount);\n            this.setState({account: newAccount});\n        } else if (name === 'address') {\n            if (!value || value.length <= 255) {\n                const newAccount = {...account, addressDetails: {...account.addressDetails, address: value}};\n                isValidAccount = isValidAccountToUpdate(newAccount);\n                this.setState({account: newAccount});\n            }\n        } else if (name === 'zipCode') {\n            if (!value || value.length <= 5) {\n                const newAccount = {...account, addressDetails: {...account.addressDetails, zipCode: value}};\n                isValidAccount = isValidAccountToUpdate(newAccount);\n                this.setState({account : newAccount});\n                if ((value.length > 0 && value.length < 5) || isNaN(value)) {\n                    this.setState({zipCodeError: true});\n                } else {\n                    this.setState({zipCodeError: false});\n                }\n            }\n        } else if (name === 'city') {\n            if (!value || value.length <= 50) {\n                const newAccount = {...account, addressDetails: {...account.addressDetails, city: value}};\n                isValidAccount = isValidAccountToUpdate(newAccount);\n                this.setState({account: newAccount});\n            }\n        } else if (name === 'country') {\n            if (!value || value.length <= 50) {\n                const newAccount = {...account, addressDetails: {...account.addressDetails, country: value}};\n                isValidAccount = isValidAccountToUpdate(newAccount);\n                this.setState({account: newAccount});\n            }\n        }\n        if (isValidAccount) {\n            this.setState({submitDisabled: false});\n        } else {\n            this.setState({submitDisabled: true});\n        }\n    }\n\n    handleOpenMenu = ({target}) => {\n        this.setState({anchorEl: target});\n    }\n\n    handleCloseMenu = (event) => {\n        this.setState({anchorEl: null});\n        const {changePassword} = this.props;\n        let attributValue;\n        if (event.currentTarget && event.currentTarget.attributes\n            && event.currentTarget.attributes.value && event.currentTarget.attributes.value.value) {\n                attributValue = event.currentTarget.attributes.value.value;\n        }\n        if (changePassword && attributValue === 'changePasswordEvent') {\n            changePassword();\n        }\n    }\n\n    displayChangeAccount = () => {\n        const {account, submitDisabled, changeRoleDisabled,\n            changeEmailDisabled, emailError,\n            firstNameError, lastNameError,\n            phoneNumberError, zipCodeError, anchorEl\n        } = this.state;\n        let addressDetails = null;\n        if (account) addressDetails = account.addressDetails;\n        const {classes} = this.props;\n        return (\n            <div>{account &&\n            <Grid container className={classes.gridContainer}>\n                <Grid item xs={1} className={classes.gridItem}/>\n                <Grid item xs={10} className={classes.gridItem}>\n                    <Typography align={'center'} variant={'h6'}>{this.props.title}</Typography>\n                </Grid>\n                <Grid item xs={1}>\n                    {this.props.changePasswordEnabled &&\n                        <div>\n                            <IconButton onClick={this.handleOpenMenu}>\n                                <MoreVertIcon></MoreVertIcon>\n                            </IconButton>\n                                <Menu\n                                    anchorEl={anchorEl}\n                                    keepMounted\n                                    open={Boolean(anchorEl)}\n                                    onClose={this.handleCloseMenu}\n                                    getContentAnchorEl={null}\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'center',\n                                    }}\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right',\n                                    }}\n                                >\n                                    <MenuItem onClick={this.handleCloseMenu} value={\"changePasswordEvent\"}>\n                                        {i18n.t('AnAccount.change.password')}\n                                    </MenuItem>\n                                </Menu>\n                        </div>\n                    }\n                </Grid>\n                <Grid item xs={6} className={classes.gridItem}>{i18n.t('AnAccount.FirstName')}:</Grid>\n                <Grid item xs={6} className={classes.gridItem}>\n                    <TextField\n                        value={account.firstName}\n                        name={'firstName'}\n                        onChange={this.handleTextField}\n                        error={firstNameError}\n                    />\n                </Grid>\n                <Grid item xs={6} className={classes.gridItem}>{i18n.t('AnAccount.LastName')}:</Grid>\n                <Grid item xs={6} className={classes.gridItem}>\n                    <TextField\n                        value={account.lastName}\n                        name={'lastName'}\n                        onChange={this.handleTextField}\n                        error={lastNameError}\n                    />\n                </Grid>\n                <Grid item xs={6} className={classes.gridItem}>{i18n.t('AnAccount.Email')}:</Grid>\n                <Grid item xs={6} className={classes.gridItem}>\n                    <TextField\n                        value={account.email}\n                        name={\"email\"}\n                        disabled={changeEmailDisabled}\n                        onChange={this.handleTextField}\n                        error={emailError}\n                    />\n                </Grid>\n                <Grid item xs={6} className={classes.gridItem}>{i18n.t('AnAccount.Phone.number')}:</Grid>\n                <Grid item xs={6} className={classes.gridItem}>\n                    <TextField\n                        value={account.phoneNumber ? account.phoneNumber : ''}\n                        name={'phoneNumber'}\n                        onChange={this.handleTextField}\n                        error={phoneNumberError}\n                    />\n                </Grid>\n                <Grid item xs={6} className={classes.gridItem}>{i18n.t('AnAccount.Role')}:</Grid>\n                <Grid item xs={6} className={classes.gridItem}>\n                    <Select\n                        value={account.role}\n                        fullWidth\n                        name={'role'}\n                        onChange={this.handleTextField}\n                        disabled={changeRoleDisabled}\n                    >\n                        <MenuItem value={1}>{i18n.t('AnAccount.user.member')}</MenuItem>\n                        <MenuItem value={2}>{i18n.t('AnAccount.asso.member')}</MenuItem>\n                    </Select>\n                </Grid>\n                {addressDetails &&\n                <Grid container>\n                    <Grid item xs={6} className={classes.gridItem}>{i18n.t('AnAccount.Address')}:</Grid>\n                    <Grid item xs={6} className={classes.gridItem}>\n                        <TextField\n                            value={addressDetails.address ? addressDetails.address : ''}\n                            name={'address'}\n                            onChange={this.handleTextField}\n                        />\n                    </Grid>\n                    <Grid item xs={6} className={classes.gridItem}>{i18n.t('AnAccount.Zip.code')}:</Grid>\n                    <Grid item xs={6} className={classes.gridItem}>\n                        <TextField\n                            value={addressDetails.zipCode ? addressDetails.zipCode : ''}\n                            name={'zipCode'}\n                            onChange={this.handleTextField}\n                            error={zipCodeError}\n                        />\n                    </Grid>\n                    <Grid item xs={6} className={classes.gridItem}>{i18n.t('AnAccount.City')}:</Grid>\n                    <Grid item xs={6} className={classes.gridItem}>\n                        <TextField\n                            value={addressDetails.city ? addressDetails.city : ''}\n                            name={'city'}\n                            onChange={this.handleTextField}\n                        />\n                    </Grid>\n                    <Grid item xs={6} className={classes.gridItem}>{i18n.t('AnAccount.Country')}:</Grid>\n                    <Grid item xs={6} className={classes.gridItem}>\n                        <TextField\n                            value={addressDetails.country ? addressDetails.country : ''}\n                            name={'country'}\n                            onChange={this.handleTextField}\n                        />\n                    </Grid>\n                </Grid>\n                }\n                <Grid container justify={'space-evenly'}>\n                    <Button variant={'contained'} color={'primary'} onClick={this.handleCancelChange}>\n                        {i18n.t('AnAccount.Cancel')}\n                    </Button>\n                    <Button variant={'contained'} color={'primary'} onClick={this.handleRegisterData} disabled={submitDisabled}>\n                        {i18n.t('AnAccount.Register')}\n                    </Button>\n                </Grid>\n            </Grid>\n            }\n            </div>\n        )\n\n    }\n\n    handleRegisterData = () => {\n        const {account} = this.state;\n        if (isValidAccountToUpdate(account)) {\n            this.props.validateAccount(account);\n            this.setState({submitDisabled: true});\n        }\n    }\n\n    handleCancelChange = () => {\n        this.props.cancelChange();\n    }\n\n    componentDidMount() {\n        this.setState({\n            account: this.props.account,\n            changeRoleDisabled: this.props.changeRoleDisabled,\n            changeEmailDisabled: this.props.changeEmailDisabled,\n        });\n    }\n\n    render() {\n        return(this.displayChangeAccount());\n    }\n}\n\nInputAnAccount.propType = {\n    account: PropTypes.object.isRequired,\n    validateAccount: PropTypes.func.isRequired,\n    cancelChange: PropTypes.func.isRequired,\n    changeRoleDisabled: PropTypes.bool.isRequired,\n    changeEmailDisabled: PropTypes.bool.isRequired,\n    title: PropTypes.string.isRequired,\n    changePasswordEnabled: PropTypes.bool,\n    changePassword: PropTypes.func,\n}\n\nexport default withStyles(styles)(InputAnAccount)","import React from 'react';\nimport {Button, Card, Grid, Typography, withStyles} from \"@material-ui/core\";\nimport * as APIConfig from '../constants/APIConfig';\nimport i18n from '../i18n';\nimport InputAnAccount from \"../inputs/InputAnAccount\";\nimport RouterNoel from \"../routes/RouterNoel\";\nimport {withRouter} from \"react-router-dom\";\n\nconst styles = themes => ({\n    card: {\n        padding: '12px',\n        margin: '30px',\n        minWidth: '275px',\n        boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\n    },\n    gridItem: {\n        //paddingTop: '12px',\n        //paddingbottom: '12px',\n        marginTop: '12px',\n        marginBottom: '12px',\n        //width: 'min-content',\n        //border: '1px solid #d3d4d5',\n    },\n    gridContainer: {\n        //width: 'min-content',\n        maxWidth: '500px',\n    }\n});\n\n\nclass MyAccount extends React.Component {\n\n    state = {\n        account: null,\n        changeAccount: false,\n        changeRoleDisabled: true,\n        submitDisabled: true,\n        firstNameError: false,\n        lastNameError: false,\n        phoneNumberError: false,\n        zipCodeError: false,\n        anchorEl: null,\n    }\n\n    async callAPIGet() {\n        const res = await APIConfig.SEND_GET(APIConfig.API_URL_MY_ACCOUNT);\n        this.setState({account: res, changeRoleDisabled: res.role < 2});\n    }\n    async callAPIUpdate(accountCleaned) {\n        const res = await APIConfig.SEND_PUT(APIConfig.API_URL_MY_ACCOUNT, accountCleaned);\n        this.setState({\n            account: res,\n            changeAccount: false,\n            changeRoleDisabled: res.role < 2,\n            submitDisabled: true,\n            firstNameError: false,\n            lastNameError: false,\n            phoneNumberError: false,\n            zipCodeError: false,\n        });\n        RouterNoel.setupUserInfoStatic(res.firstName, res.lastName, res.role === 2)\n    }\n\n    componentDidMount() {\n        this.callAPIGet();\n    }\n\n    handleDisplayToChange = () => {\n        this.setState({changeAccount: true});\n    }\n\n    handleCancelUpdate = () => {\n        this.setState({changeAccount:false});\n    }\n\n    handleChangePassword = () => {\n        this.props.history.push('/user/my_account/password');\n    }\n\n    handleSendUpdate = (account) => {\n        this.setState({submitDisabled: true});\n        let accountCleaned = account;\n        if (accountCleaned.phoneNumber !== null && accountCleaned.phoneNumber === \"\") {\n            accountCleaned = {...accountCleaned, phoneNumber: null};\n        }\n        if (accountCleaned.addressDetails) {\n            let ad = accountCleaned.addressDetails;\n            if (ad.address === \"\") ad = {...ad, address: null};\n            if (ad.zipCode === \"\") ad = {...ad, zipCode: null};\n            if (ad.city === \"\") ad = {...ad, city: null};\n            if (ad.country === \"\") ad = {...ad, country: null};\n            if (ad.address === null && ad.zipCode === null && ad.city === null && ad.country === null) {\n                accountCleaned = {...accountCleaned, addressDetails: null};\n            } else {\n                accountCleaned = {...accountCleaned, addressDetails: ad};\n            }\n        }\n        this.callAPIUpdate(accountCleaned);\n    }\n\n    displayAccount = () => {\n        const {account} = this.state;\n        let addressDetails = null;\n        if (account) addressDetails = account.addressDetails;\n        const {classes} = this.props;\n        return (\n            <div>\n                {account &&\n                <Grid container className={classes.gridContainer}>\n                    <Grid item xs={12} className={classes.gridItem}>\n                        <Typography align={'center'} variant={'h6'}>{i18n.t('MyAccount.My.account')}</Typography>\n                    </Grid>\n                    <Grid item xs={6} className={classes.gridItem}>{i18n.t('MyAccount.FirstName')}:</Grid>\n                    <Grid item xs={6} className={classes.gridItem}>{account.firstName}</Grid>\n                    <Grid item xs={6} className={classes.gridItem}>{i18n.t('MyAccount.LastName')}:</Grid>\n                    <Grid item xs={6} className={classes.gridItem}>{account.lastName}</Grid>\n                    <Grid item xs={6} className={classes.gridItem}>{i18n.t('MyAccount.Email')}:</Grid>\n                    <Grid item xs={6} className={classes.gridItem}>{account.email}</Grid>\n                    <Grid item xs={6} className={classes.gridItem}>{i18n.t('MyAccount.Phone.number')}:</Grid>\n                    <Grid item xs={6} className={classes.gridItem}>{account.phoneNumber}</Grid>\n                    <Grid item xs={6} className={classes.gridItem}>{i18n.t('MyAccount.Role')}:</Grid>\n                    <Grid item xs={6} className={classes.gridItem}>\n                        {account.role === 2 ? i18n.t('MyAccount.asso.member') : i18n.t('MyAccount.user.member')}\n                    </Grid>\n                    {addressDetails &&\n                    <Grid container>\n                    <Grid item xs={6} className={classes.gridItem}>{i18n.t('MyAccount.Address')}:</Grid>\n                    <Grid item xs={6} className={classes.gridItem}>{addressDetails.address}</Grid>\n                    <Grid item xs={6} className={classes.gridItem}>{i18n.t('MyAccount.Zip.code')}:</Grid>\n                    <Grid item xs={6} className={classes.gridItem}>{addressDetails.zipCode}</Grid>\n                    <Grid item xs={6} className={classes.gridItem}>{i18n.t('MyAccount.City')}:</Grid>\n                    <Grid item xs={6} className={classes.gridItem}>{addressDetails.city}</Grid>\n                    <Grid item xs={6} className={classes.gridItem}>{i18n.t('MyAccount.Country')}:</Grid>\n                    <Grid item xs={6} className={classes.gridItem}>{addressDetails.country}</Grid>\n                    </Grid>\n                    }\n                    <Grid container justify={'center'}>\n                        <Button variant={'contained'} color={'primary'} onClick={this.handleDisplayToChange}>\n                            {i18n.t('MyAccount.Change')}\n                        </Button>\n                    </Grid>\n                </Grid>\n                }\n            </div>\n        )\n    }\n\n    render() {\n        const {classes} = this.props;\n        const {changeAccount, changeRoleDisabled, account} = this.state;\n        return (\n            <Grid container justify={'center'}>\n                <Card className={classes.card}>\n                    {changeAccount ?\n                        <InputAnAccount\n                            title={i18n.t('InputChangeUser.User.info')}\n                            account={account}\n                            validateAccount={this.handleSendUpdate}\n                            cancelChange={this.handleCancelUpdate}\n                            changeRoleDisabled={changeRoleDisabled}\n                            changeEmailDisabled={true}\n                            changePasswordEnabled\n                            changePassword={this.handleChangePassword}\n                        />\n                        :\n                        this.displayAccount()}\n                </Card>\n            </Grid>\n        )\n    }\n}\n\nexport default withStyles(styles)(withRouter(MyAccount))","import React, {useState, useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Card, Grid, Typography, Slide} from '@material-ui/core';\nimport {useLocation, useHistory} from \"react-router-dom\";\nimport * as APIConfig from '../constants/APIConfig';\nimport i18n from '../i18n';\nimport InputAnAccount from \"../inputs/InputAnAccount\";\n\nconst useStyles = makeStyles({\n    root: {\n        padding: '12px',\n        margin: '30px',\n        minWidth: '275px',\n        boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\n    },\n    gridContainer: {\n        maxWidth: '500px',\n    },\n    gridItem: {\n        marginTop: '12px',\n        marginBottom: '12px',\n    },\n});\n\nexport default function ChangeUser(props) {\n    const classes = useStyles();\n\n    const [user, setUser] = useState(null);\n    const [reason, setReason] = useState({});\n    const [lastReason, setLastReason] = useState({});\n    const [updateOK, setUpdateOK] = useState(null);\n    const [slideState, setSlideState] = useState({state: false, lastColor: 'primary'});\n\n    async function callAPIGetUser(data) {\n        const rep = await APIConfig.SEND_POST(APIConfig.API_URL_USER_DETAILS, data);\n        if (rep && data.id === ''+rep.id) {\n            setUser(rep);\n        }\n    }\n\n    async function callAPIUpdateUser(data) {\n        const rep = await APIConfig.SEND_PUT(APIConfig.API_URL_CHANGE_ACCOUNT, data);\n        const slideStateTemp = {\n            state: !slideState.state,\n            lastColor: updateOK ? \"primary\" : \"secondary\",\n            lastTypographyVariant: updateOK ? \"body1\" : \"h6\",\n        }\n        if (rep && rep.status === 'OK' && rep.payload) {\n            setUser(rep.payload);\n            setLastReason(reason);\n            setReason(JSON.parse(rep.reason));\n            setUpdateOK(true);\n        } else if (rep && rep.status === 'NOK' && rep.reason) {\n            setLastReason(reason);\n            setReason(JSON.parse(rep.reason));\n            setUpdateOK(false);\n        }\n        setSlideState(slideStateTemp);\n    }\n\n    const urlSearchParams = new URLSearchParams(useLocation().search);\n    const id = urlSearchParams.get(\"id\");\n    const currentPage = urlSearchParams.get(\"currentPage\");\n    const numberInPage = urlSearchParams.get(\"numberInPage\");\n\n    useEffect(() =>{\n        if (id) callAPIGetUser({id:id});\n    },[id]);\n\n\n    const handleSendChangeUser = (data) => {\n        let accountCleaned = data;\n        if (accountCleaned.phoneNumber !== null && accountCleaned.phoneNumber === \"\") {\n            accountCleaned = {...accountCleaned, phoneNumber: null};\n        }\n        if (accountCleaned.addressDetails) {\n            let ad = accountCleaned.addressDetails;\n            if (ad.address === \"\") ad = {...ad, address: null};\n            if (ad.zipCode === \"\") ad = {...ad, zipCode: null};\n            if (ad.city === \"\") ad = {...ad, city: null};\n            if (ad.country === \"\") ad = {...ad, country: null};\n            if (ad.address === null && ad.zipCode === null && ad.city === null && ad.country === null) {\n                accountCleaned = {...accountCleaned, addressDetails: null};\n            } else {\n                accountCleaned = {...accountCleaned, addressDetails: ad};\n            }\n        }\n        callAPIUpdateUser(accountCleaned);\n    }\n\n    const history = useHistory();\n\n    const handleCancelChange = () => {\n        if (currentPage && numberInPage) {\n            history.push(\"/user/users_list?currentPage=\" + currentPage + \"&numberInPage=\" + numberInPage);\n        } else {\n            history.goBack();\n        }\n    }\n    const handleChangePassword = () => {\n        if (user && user.id) {\n            history.push('/user/change/password?id=' + user.id);\n        }\n    }\n\n    const showMessage = () => {\n        return (\n            <Grid className={classes.gridItem}>\n                <Slide direction={updateOK ? \"left\" : \"right\"} timeout={3000} in={slideState.state}>\n                    <Typography\n                        align={\"center\"}\n                        variant={slideState.state ? (updateOK ? \"body1\" : \"h6\") : slideState.lastTypographyVariant}\n                        color={slideState.state ? (updateOK ? \"primary\" : \"secondary\") : slideState.lastColor}\n                    >\n                        {slideState.state ? i18n.t(reason.key) : i18n.t(lastReason.key)}\n                    </Typography>\n                </Slide>\n                <Slide direction={updateOK ? \"left\" : \"right\"} timeout={3000} in={!slideState.state}>\n                    <Typography\n                        align={\"center\"}\n                        variant={!slideState.state ? (updateOK ? \"body1\" : \"h6\") : slideState.lastTypographyVariant}\n                        color={!slideState.state ? (updateOK ? \"primary\" : \"secondary\") : slideState.lastColor}\n                    >\n                        {!slideState.state ? i18n.t(reason.key) : i18n.t(lastReason.key)}\n                    </Typography>\n                </Slide>\n            </Grid>\n        );\n    }\n\n    return (\n        <Grid container justify={\"center\"}>\n            <Card className={classes.root}>\n                {user &&\n                <InputAnAccount\n                    title={i18n.t('InputChangeUser.User.info')}\n                    account={user}\n                    validateAccount={handleSendChangeUser}\n                    cancelChange={handleCancelChange}\n                    changeRoleDisabled={false}\n                    changeEmailDisabled={false}\n                    changePasswordEnabled\n                    changePassword={handleChangePassword}\n                />\n                }\n                {showMessage()}\n            </Card>\n        </Grid>\n    )\n\n}","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {Grid, Card, TextField, InputAdornment, IconButton, Typography, Button, Slide} from \"@material-ui/core\";\nimport i18n from \"../i18n\";\nimport {Visibility, VisibilityOff} from \"@material-ui/icons\";\nimport AlertDialogSlide from \"../modals/AlertDialogSlide\";\nimport * as APIConfig from '../constants/APIConfig';\nimport {passwordMeter} from \"../constants/CommonFunction\";\nimport LevelPwd from \"../rating/LevelPwd\";\n\nconst styles = themes => ({\n    root: {\n        padding: '12px',\n        margin: '30px',\n        minWidth: '275px',\n        boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\n    },\n    gridContainer: {\n        maxWidth: '500px',\n    },\n    gridItem: {\n        marginTop: '12px',\n        marginBottom: '30px',\n    },\n    levelPwd: {\n        marginTop: '5px',\n    },\n});\n\nclass ChangePassword extends React.Component {\n    state = {\n        idOtherUser: null,\n        changeMyPassword: true,\n        passwordOld: '',\n        showPasswordOld: false,\n        pwdOldError: false,\n        pwdOldHelperText: '',\n        passwordNew: '',\n        showPasswordNew: false,\n        pwdNewError: false,\n        pwdNewHelperText: '',\n        passwordNewConfirm: '',\n        pwdNewConfirmError: false,\n        pwdNewConfirmHelperText: '',\n        submitDisabled: true,\n        showAlertDialog: false,\n        messageReason: null,\n        changePwdIsOK: false,\n        levelPwdNew: 0,\n        levelPwdNewShow: false,\n    }\n\n    componentDidMount() {\n        const location = this.props.location;\n        const id = (new URLSearchParams(location.search)).get(\"id\");\n        this.setState({idOtherUser: id, changeMyPassword: id === null});\n    }\n\n    async callAPI(data) {\n        let rep = await APIConfig.SEND_PUT(APIConfig.API_URL_CHANGE_PWD, data);\n        if (rep) {\n            const isOK = rep.status === \"OK\";\n            let reason;\n            try {\n                const reasonJson = JSON.parse(rep.reason);\n                reason = i18n.t(reasonJson.key);\n            } catch (e) {\n                reason = i18n.t('ChangePassword.unknown.error');\n            }\n            this.setState({changePwdIsOK: isOK, messageReason: reason});\n        } else {\n            this.setState({messageReason: null});\n        }\n    }\n\n    handleCancelButton = () => {\n        this.props.history.goBack();\n    }\n\n    handleSubmit = () => {\n        this.setState({showAlertDialog: true, messageReason: null});\n    }\n\n    handleAgreeSubmitPasswords = () => {\n        const {idOtherUser, changeMyPassword, passwordOld, passwordNew, passwordNewConfirm} = this.state;\n        this.setState({showAlertDialog: false, submitDisabled: true});\n        const data = {\n            idOtherUser: idOtherUser,\n            changeMyPassword: changeMyPassword,\n            passwordOld: passwordOld,\n            passwordNew: passwordNew,\n            passwordNewConfirm: passwordNewConfirm\n        }\n        this.callAPI(data);\n    }\n\n    handleDisagree = () => {\n        this.setState({showAlertDialog : false});\n    }\n\n    handleClickShowPasswordOld = () => {\n        const {showPasswordOld} = this.state;\n        this.setState({showPasswordOld: !showPasswordOld});\n    }\n\n    handleClickShowPasswordNew = () => {\n        const {showPasswordNew} = this.state;\n        this.setState({showPasswordNew: !showPasswordNew});\n    }\n\n    handleChangeTextField = ({target: {name, value}}) => {\n        let {changeMyPassword, passwordOld, passwordNew, passwordNewConfirm} = this.state;\n        if (name === \"passwordOld\") {\n            passwordOld = value;\n            if (value.length <= 3) {\n                this.setState( {passwordOld: value, pwdOldError: true,\n                    pwdOldHelperText: i18n.t('ChangePassword.Password.too.short')});\n            } else {\n                this.setState( {passwordOld: value, pwdOldError: false,\n                    pwdOldHelperText: ''});\n            }\n        } else if (name === \"passwordNew\") {\n            passwordNew = value;\n            this.setState({levelPwdNew: passwordMeter(passwordNew)});\n            if (value.length <= 3) {\n                this.setState({passwordNew: value, pwdNewError: true,\n                    pwdNewHelperText: i18n.t('ChangePassword.Password.too.short')})\n            } else {\n                this.setState({passwordNew: value, pwdNewError: false,\n                    pwdNewHelperText: ''})\n            }\n            if (passwordNewConfirm !== value) {\n                this.setState({pwdNewConfirmError: true,\n                    pwdNewConfirmHelperText: i18n.t('ChangePassword.PasswordConfirm.different')});\n            } else {\n                this.setState({pwdNewConfirmError: false, pwdNewConfirmHelperText: ''});\n            }\n        } else if (name === \"passwordNewConfirm\") {\n            passwordNewConfirm = value;\n            if (passwordNew === value) {\n                this.setState({passwordNewConfirm: value, pwdNewConfirmError: false,\n                    pwdNewConfirmHelperText: ''});\n            } else {\n                this.setState({passwordNewConfirm: value, pwdNewConfirmError: true,\n                    pwdNewConfirmHelperText: i18n.t('ChangePassword.PasswordConfirm.different')});\n            }\n        }\n        if (changeMyPassword) {\n            if (passwordOld === passwordNew) {\n                this.setState( {pwdOldError: true,\n                    pwdOldHelperText: i18n.t('ChangePassword.password.newAndOld.same')});\n            } else if (passwordOld && passwordOld.length <= 3) {\n                this.setState( {pwdOldError: true,\n                    pwdOldHelperText: i18n.t('ChangePassword.Password.too.short')});\n            } else {\n                this.setState( {pwdOldError: false,\n                    pwdOldHelperText: ''});\n            }\n        }\n        this.setState({submitDisabled: !this.isCorrectPwd(changeMyPassword, passwordOld, passwordNew, passwordNewConfirm)})\n    }\n\n    isCorrectPwd(changeMyPassword, passwordOld, passwordNew, passwordNewConfirm) {\n        if ((!changeMyPassword || (passwordOld.length > 3 && passwordOld !== passwordNew)) &&\n            passwordNew.length > 3 &&\n            passwordNew === passwordNewConfirm\n        ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onFocusLevelPwd = () => {\n        this.setState({levelPwdNewShow: true});\n    }\n\n    onBlurLevelPwd = () => {\n        this.setState({levelPwdNewShow: false});\n    }\n\n    displayChangePassword = () => {\n        const {classes, isMyAccount} = this.props;\n        const {idOtherUser, showAlertDialog,\n            passwordOld, showPasswordOld, pwdOldError, pwdOldHelperText,\n            showPasswordNew, passwordNew, pwdNewError, pwdNewHelperText,\n            passwordNewConfirm, pwdNewConfirmError, pwdNewConfirmHelperText,\n            submitDisabled, messageReason, changePwdIsOK, levelPwdNew, levelPwdNewShow\n        } = this.state;\n        return (\n            <div>\n                <Grid item xs={12} className={classes.gridItem}>\n                    <Typography align={'center'} color={'primary'}  variant={'h6'}>\n                        {i18n.t('ChangePassword.Change.password')}\n                    </Typography>\n                </Grid>\n                {idOtherUser == null && isMyAccount &&\n                <Grid item xs={12} className={classes.gridItem}>\n                    <TextField\n                        type={showPasswordOld ? 'text' :'password'}\n                        error={pwdOldError}\n                        label={i18n.t('ChangePassword.Password')}\n                        helperText={pwdOldHelperText}\n                        onChange={this.handleChangeTextField}\n                        value={passwordOld}\n                        name={'passwordOld'}\n                        fullWidth\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <IconButton\n                                    onClick={this.handleClickShowPasswordOld}\n                                    tabIndex={-1} // to avoid tab focus\n                                >\n                                    {showPasswordOld ? <Visibility /> : <VisibilityOff />}\n                                </IconButton>\n                            </InputAdornment>,\n                        }}\n                    />\n                </Grid>\n                }\n                <div onFocus={this.onFocusLevelPwd} onBlur={this.onBlurLevelPwd}>\n                    <Grid item xs={12} className={classes.gridItem}>\n                        <TextField\n                            type={showPasswordNew ? 'text' :'password'}\n                            error={pwdNewError}\n                            label={i18n.t('ChangePassword.Password.new')}\n                            helperText={pwdNewHelperText}\n                            onChange={this.handleChangeTextField}\n                            value={passwordNew}\n                            name={'passwordNew'}\n                            fullWidth\n                            InputProps={{\n                                endAdornment: <InputAdornment position=\"end\">\n                                    <IconButton\n                                        onClick={this.handleClickShowPasswordNew}\n                                        tabIndex={-1} // to avoid tab focus\n                                    >\n                                        {showPasswordNew ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>,\n                            }}\n                        />\n                        <Slide in={levelPwdNewShow} direction={'left'} timeout={2000}>\n                            <div className={classes.levelPwd}>\n                                <LevelPwd strength={levelPwdNew}/>\n                            </div>\n                        </Slide>\n                    </Grid>\n                </div>\n                <Grid item xs={12} className={classes.gridItem}>\n                    <TextField\n                        type={showPasswordNew ? 'text' :'password'}\n                        error={pwdNewConfirmError}\n                        label={i18n.t('ChangePassword.Password.new.confirm')}\n                        helperText={pwdNewConfirmHelperText}\n                        onChange={this.handleChangeTextField}\n                        value={passwordNewConfirm}\n                        name={'passwordNewConfirm'}\n                        fullWidth\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <IconButton\n                                    onClick={this.handleClickShowPasswordNew}\n                                    tabIndex={-1} // to avoid tab focus\n                                >\n                                    {showPasswordNew ? <Visibility /> : <VisibilityOff />}\n                                </IconButton>\n                            </InputAdornment>,\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container justify={\"space-between\"}>\n                        <Button variant={\"contained\"} color={\"primary\"} onClick={this.handleCancelButton}>\n                            {i18n.t('ChangePassword.Cancel')}\n                        </Button>\n                        <Button variant={\"contained\"} color={\"secondary\"} disabled={submitDisabled} onClick={this.handleSubmit}>\n                            {i18n.t('ChangePassword.Change')}\n                        </Button>\n                    </Grid>\n                </Grid>\n                {showAlertDialog &&\n                <AlertDialogSlide\n                    handleAgree={this.handleAgreeSubmitPasswords}\n                    handleDisagree={this.handleDisagree}\n                    dialog={i18n.t('ChangePassword.alert.dialog.Submit.new.password')}\n                />\n                }\n                <Slide direction={changePwdIsOK ? 'left' : 'right'} in={messageReason !== null} timeout={3000}>\n                    <Typography color={changePwdIsOK ? 'primary' : 'secondary'} align={'center'} variant={'h6'}>\n                        {messageReason}\n                    </Typography>\n                </Slide>\n            </div>\n        );\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <Grid container justify={'center'}>\n                <Card className={classes.root}>\n                    {this.displayChangePassword()}\n                </Card>\n            </Grid>\n        )\n    }\n}\nChangePassword.protoType = {\n    isMyAccount: PropTypes.bool.isRequired,\n}\n\nexport default withStyles(styles)(withRouter(ChangePassword))","import React from 'react';\nimport {Button, IconButton, Snackbar} from \"@material-ui/core\";\nimport {Close as CloseIcon} from '@material-ui/icons';\n\nexport default function SimpleSnackbar(props) {\n    const [open, setOpen] = React.useState(props.open);\n\n\n    const handleClose = (event, reason) => {\n        // if (reason === 'clickaway') {\n        //     console.log('Action Snackbar reason: ' + reason);\n        //     return;\n        // }\n\n        setOpen(false);\n        if (props.whenHide) props.whenHide();\n    };\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={open}\n                //autoHideDuration={5000}\n                //onClose={handleClose}\n                onMouseDown={handleClose}\n                message={props.message}\n                action={\n                    <React.Fragment>\n                        <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n                            TODO Button\n                        </Button>\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n                            <CloseIcon fontSize=\"small\" />\n                        </IconButton>\n                    </React.Fragment>\n                }\n            />\n        </div>\n    );\n}","import React, {useState} from 'react';\nimport * as APICONFIG from '../constants/APIConfig';\nimport {API_URI_HELLO} from \"../constants/APIConfig\";\n\n\nexport default function InputSelectedFiles(props) {\n\n    const [files, setFiles] = useState(null);\n\n    function callUpload() {\n        if (files && files.length > 0) {\n            for (let i = 0; i < files.length; i++) {\n                const file = files.item(i);\n                let fr = new FileReader();\n                fr.readAsBinaryString(file);\n                callFileReader(fr, file);\n            }\n        }\n    }\n\n    function callFileReader(fr, file) {\n        console.log(\"---------------------- in callFileReader ------------------------------------\");\n        setTimeout(() => {\n            if (fr.result && fr.result.length === file.size) {\n                callAPIUpload(fr.result, file);\n            } else {\n                callFileReader(fr, file);\n            }\n        }, 1);\n    }\n\n    function callAPIUpload(data, file) {\n        console.log(\"---------------------- in callAPIUpload ------------------------------------\")\n        console.log(file);\n        console.log(data);\n            // const data = {name: f.name, data: fr.readAsBinaryString(f)}\n            // APICONFIG.SEND_POST(API_URI_HELLO, data);\n    }\n\n    const onSelectFiles = (event) => {\n        console.log(event.target.files);\n        setFiles(event.target.files);\n    }\n\n    return (\n        <div>\n            <input type={\"file\"} onChange={onSelectFiles} multiple/>\n            <button onClick={callUpload}>Upload</button>\n        </div>\n    )\n}","import React, {useState} from 'react';\nimport {Card, Divider, Grid, Typography} from '@material-ui/core';\nimport InputMultipleOptions from \"../inputs/InputMultipleOptions\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport SimpleSnackBar from \"./SimpleSnackBar\";\nimport InputSelectedCities from \"../inputs/InputSelectedCities\";\nimport InputSelectedFiles from \"../inputs/InputSelectedFiles\";\n\n\nconst useStyles = makeStyles({\n    card: {\n        padding: '20px',\n        marginTop: '50px',\n        minWidth: '275px',\n        boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\n    },\n    divider: {\n        margintop: '20px',\n        marginBottom: '20px',\n    },\n});\n\nexport default function TestTemp() {\n\n    const [snackBarMessage, setSnackBarMessage] = useState(\"\");\n    const [snackBarShow, setSnackBarShow] = useState(false);\n\n    const handleSnackBarClosed = () => {\n        setSnackBarShow(false);\n    }\n\n    const handleOnChangeCities = (data) => {\n        if ( data instanceof Array) {\n            setSnackBarMessage(\"New choice array: \" + data.reduce((acc, cur) => acc + cur.title + \", \", 'reduce: '));\n            setSnackBarShow(true);\n        } else if (data instanceof Object) {\n            setSnackBarMessage(\"New choice object: \" + data.title);\n            setSnackBarShow(true);\n        }\n    }\n\n    return (\n        <Grid container justify={'center'}>\n                <Card className={useStyles().card}>\n                    <Typography variant={\"h4\"} color={\"secondary\"} align={\"center\"}>GUI Test</Typography>\n                    <InputMultipleOptions\n                        defaultValue={[cities[0]]/*is an array*/}\n                        options={cities}\n                        onChange={handleOnChangeCities}\n                        multiple={true}\n                        label={\"Choice your cities\"}\n                    />\n                    <Divider className={useStyles().divider}/>\n                    <InputMultipleOptions\n                        defaultValue={cities[0]/*is an object*/}\n                        options={cities}\n                        onChange={handleOnChangeCities}\n                        multiple={false}\n                        label={\"Choice your city\"}\n                    />\n                    <Divider className={useStyles().divider}/>\n                    <InputSelectedFiles />\n                </Card>\n            {snackBarShow && <SimpleSnackBar open={snackBarShow} message={snackBarMessage} whenHide={handleSnackBarClosed}/>}\n        </Grid>\n    )\n}\n\nconst cities = [\n    { title: 'Paris', zipCode: '75000' },\n    { title: 'Paris15', zipCode: '75015' },\n    { title: 'Paris16', zipCode: '75016' },\n    { title: 'Versailles', zipCode: '78000' },\n    { title: 'St Denis REU', zipCode: '97400' },\n];","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport 'typeface-roboto';\nimport HideAppBar from \"../menus/HeaderMenu\";\nimport HomePage from \"../pages/HomePage\";\nimport InputLogin from \"../inputs/InputLogin\";\nimport Logout from \"../pages/Logout\";\nimport UsersList from \"../users/UsersList\";\nimport InputNewUser from '../inputs/InputNewUser'\nimport MyAccount from \"../users/MyAccount\";\nimport ChangeUser from \"../users/ChangeUser\";\nimport ChangePassword from \"../users/ChangePassword\";\n\nimport * as APIConfig from '../constants/APIConfig'\nimport '../css/general.css';\nimport TestTemp from \"../test_temp/TestTemp\";\n\nclass RouterNoel extends React.Component {\n    constructor(props) {\n        super(props);\n        RouterNoel.setupUserInfoStatic =  RouterNoel.setupUserInfoStatic.bind(this);\n    }\n    state = {\n        loginState: {\n            token: null,\n            firstName: '',\n            lastName: '',\n            isAsso: false,\n        }\n    }\n\n    static setupUserInfoStatic(firstName, lastName, isAsso){\n        sessionStorage.setItem(APIConfig.SESSION_STORAGE_FIRST_AND_LAST_NAME_ITEM_NAME, JSON.stringify({\"firstName\": firstName, \"lastName\": lastName}))\n        sessionStorage.setItem(APIConfig.SESSION_STORAGE_ISASSO_ITEM_NAME, isAsso);\n        this.setState({loginState: {...this.state.loginState, firstName: firstName, lastName: lastName, isAsso: isAsso}});\n    }\n\n    setupLogin = (token, firstName, lastName, isAsso) => {\n        sessionStorage.setItem(APIConfig.SESSION_STORAGE_JWT_TOKEN_ITEM_NAME, token);\n        sessionStorage.setItem(APIConfig.SESSION_STORAGE_FIRST_AND_LAST_NAME_ITEM_NAME, JSON.stringify({\"firstName\": firstName, \"lastName\": lastName}))\n        sessionStorage.setItem(APIConfig.SESSION_STORAGE_ISASSO_ITEM_NAME, isAsso);\n        const tempLogin = {\n            token: token,\n            firstName: firstName,\n            lastName: lastName,\n            isAsso: isAsso,\n        }\n        this.setState({loginState: tempLogin});\n        window.checkTokenImmediatly = false;\n        window.startAutoReloadToken();\n    }\n\n    setupLogout = () => {\n        const {loginState} = this.state;\n        if (loginState.token) {\n            sessionStorage.removeItem(APIConfig.SESSION_STORAGE_JWT_TOKEN_ITEM_NAME);\n            sessionStorage.removeItem(APIConfig.SESSION_STORAGE_ISASSO_ITEM_NAME);\n            sessionStorage.removeItem(APIConfig.SESSION_STORAGE_FIRST_AND_LAST_NAME_ITEM_NAME);\n            const tempLogin = {\n                token: null,\n                firstName: '',\n                lastName: '',\n                isAsso: false,\n            }\n            this.setState({loginState: tempLogin});\n        }\n    }\n\n    componentDidMount() {\n        const token = sessionStorage.getItem(APIConfig.SESSION_STORAGE_JWT_TOKEN_ITEM_NAME);\n        let firstName = '';\n        let lastName = '';\n        try {\n            firstName = JSON.parse(sessionStorage.getItem(APIConfig.SESSION_STORAGE_FIRST_AND_LAST_NAME_ITEM_NAME)).firstName;\n            lastName = JSON.parse(sessionStorage.getItem(APIConfig.SESSION_STORAGE_FIRST_AND_LAST_NAME_ITEM_NAME)).lastName;\n        } catch (error) {/*if no session Storage name exit*/}\n        let isAsso = sessionStorage.getItem(APIConfig.SESSION_STORAGE_ISASSO_ITEM_NAME);\n        if (isAsso === 'true') {\n            isAsso = true;\n        } else {\n            isAsso = false;\n        }\n        const tempLogin = {\n            token: token,\n            firstName: firstName,\n            lastName: lastName,\n            isAsso: isAsso,\n        }\n        this.setState({loginState: tempLogin});\n    }\n\n    render() {\n        const {loginState} = this.state;\n        return (\n            <BrowserRouter>\n                <HideAppBar loginState={loginState}/>\n                <Switch>\n                    <Route exact path={\"/\"}>\n                        <HomePage/>\n                    </Route>\n                    <Route path={\"/login\"}>\n                        <InputLogin setupLogin={this.setupLogin} />\n                    </Route>\n                    <Route path={\"/logout\"}>\n                        <Logout setupLogout={this.setupLogout} />\n                    </Route>\n                    <Route path={\"/user/users_list\"}>\n                        {loginState.isAsso && <UsersList />}\n                    </Route>\n                    <Route path={\"/user/new_user\"}>\n                        <InputNewUser setupLogin={this.setupLogin}/>\n                    </Route>\n                    <Route exact path={\"/user/my_account\"}>\n                        {loginState.token && <MyAccount/>}\n                    </Route>\n                    <Route exact path={\"/user/my_account/password\"}>\n                        {loginState.token && <ChangePassword isMyAccount/>}\n                    </Route>\n                    <Route exact path={\"/user/change/password\"}>\n                        {loginState.token && loginState.isAsso && <ChangePassword isMyAccount={false}/>}\n                    </Route>\n                    <Route exact path={\"/user/change\"}>\n                        {loginState.token && loginState.isAsso && <ChangeUser />}\n                    </Route>\n                    {/*<Route exact path=\"/user/change/:id/:currentPage\"\n                           render={(props) => <ChangeUser id={props.match.params.id} currentPage={props.match.params.currentPage}{...props} />}\n                    />*/}\n                    <Route path={\"/test\"}>\n                        {loginState.token && loginState.isAsso && <TestTemp />}\n                    </Route>\n                    <Route>\n                        <div><h1>Page not found</h1></div>\n                    </Route>\n                </Switch>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default RouterNoel","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport RouterNoel from './routes/RouterNoel';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  /*<React.StrictMode>*/\n    <RouterNoel />\n  /*</React.StrictMode>*/,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}